id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/releases/tag/v6-32-06:0,deployability,Patch,Patch,0,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:6,deployability,releas,release,6,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:35,deployability,Releas,Release,35,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:77,deployability,releas,release-notes,77,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:96,deployability,releas,release-,96,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:117,deployability,Instal,Install,117,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:157,deployability,instal,install,157,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:192,deployability,releas,release,192,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:227,deployability,releas,release,227,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:366,deployability,build,building,366,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:457,deployability,Modul,Module,457,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:485,deployability,version,version,485,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:713,deployability,contain,contains,713,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:485,integrability,version,version,485,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:457,modifiability,Modul,Module,457,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:485,modifiability,version,version,485,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:602,reliability,doe,does,602,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:0,safety,Patch,Patch,0,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:457,safety,Modul,Module,457,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:0,security,Patch,Patch,0,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-06:235,usability,support,supporting,235,Patch release of v6.32 series. [üóíÔ∏è Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.06). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. **This is the first ROOT release supporting macOS 15 Sequoia.**. * [#15178](https://github.com/root-project/root/issues/15178) - ROOT generates CMake warnings when building from the tarball. * [#16219](https://github.com/root-project/root/issues/16219) - Module map on the new XCode version for macos15-beta. * [#16249](https://github.com/root-project/root/issues/16249) - Iterating with a range for does one extra iteration. * [ROOT-10902](https://its.cern.ch/jira/browse/ROOT-10902) - SMatrix read from TTree contains all zeroes,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-06
https://github.com/root-project/root/releases/tag/v6-32-04:805,availability,recov,recover,805,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2484,availability,error,error,2484,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:0,deployability,Patch,Patch,0,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:6,deployability,releas,release,6,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:49,deployability,Releas,Release,49,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:91,deployability,releas,release-notes,91,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:110,deployability,releas,release-,110,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:143,deployability,Instal,Install,143,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:183,deployability,instal,install,183,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:218,deployability,releas,release,218,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:805,deployability,recov,recover,805,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1064,deployability,fail,fails,1064,ps://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1346,deployability,contain,container,1346,2](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - V,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1519,deployability,upgrad,upgrade,1519, RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2752,deployability,version,version,2752,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1619,integrability,event,events,1619,565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function n,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1763,integrability,discover,discovery,1763,-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 i,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2118,integrability,Event,Event,2118,-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.ce,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2752,integrability,version,version,2752,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:332,interoperability,convers,conversion,332,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:577,interoperability,standard,standard,577,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1763,interoperability,discover,discovery,1763,-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 i,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1876,interoperability,compatib,compatibility,1876,/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991],MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1334,modifiability,polymorph,polymorphic,1334,on. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1443,modifiability,inherit,inheriting,1443,sallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1519,modifiability,upgrad,upgrade,1519, RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2752,modifiability,version,version,2752,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1635,performance,time,times,1635,hub.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: Distan,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2484,performance,error,error,2484,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:805,reliability,recov,recover,805,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1064,reliability,fail,fails,1064,ps://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1487,reliability,doe,doesn,1487,-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2134,reliability,doe,does,2134,ssues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/brow,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:0,safety,Patch,Patch,0,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:805,safety,recov,recover,805,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2484,safety,error,error,2484,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:0,security,Patch,Patch,0,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:805,security,recov,recover,805,Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.04). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * [#7223](https://github.com/root-project/root/issues/7223) - [RF] RDataFrame to RooDataSet/RooDataHist conversion. * [#7782](https://github.com/root-project/root/issues/7782) - [RF] Allow to set nbins for RooPlot (or disallow). * [#9838](https://github.com/root-project/root/issues/9838) - [RF] RooCurve::Average() overestimating average values of standard precision curves on smallgit. * [#11565](https://github.com/root-project/root/issues/11565) - [RF] Crash in RooStats::ToyMCSample::GenerateToyData. * [#13387](https://github.com/root-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C ,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:3165,testability,simpl,simple,3165,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:1763,usability,discov,discovery,1763,-project/root/issues/13387) - Please recover SrvAuthenticate from libSrvAuth library. * [#14541](https://github.com/root-project/root/issues/14541) - [ROOT-6193] Editor for palette axis cannot set title properties. * [#15104](https://github.com/root-project/root/issues/15104) - new PyROOT/cppyy fails to pickle enums. * [#15161](https://github.com/root-project/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 i,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2124,usability,Statu,StatusBar,2124,/root/issues/15161) - Attribute (__getitem__) differences for PyROOT objects in ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/ji,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2484,usability,error,error,2484,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:2726,usability,Support,Support,2726,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-32-04:3165,usability,simpl,simple,3165,n ROOT master. * [#15234](https://github.com/root-project/root/issues/15234) - cppyy - wrong object type when iterating over a polymorphic container. * [#15315](https://github.com/root-project/root/issues/15315) - [PyROOT] Example with inheriting from ROOT.Math.IMultiGenFunction doesn't work after recent cppyy upgrade. * [#15425](https://github.com/root-project/root/issues/15425) - TTreeProcessorMP processes events multiple times when there are more threads than entries. * [#15755](https://github.com/root-project/root/issues/15755) - [RF][HS3] Higgs discovery workspaces roundtrip. * [#15874](https://github.com/root-project/root/issues/15874) - [Hist] Backwards compatibility broken for THnSparseL in 6.32. * [#15887](https://github.com/root-project/root/issues/15887) - Broken plot .C macros for default Name() argument in plotOn(). * [#15977](https://github.com/root-project/root/issues/15977) - [gui] Event StatusBar does not work well when TMarker outside of zoom region. * [#15986](https://github.com/root-project/root/issues/15986) - Problems with TUri compilation. * [#16031](https://github.com/root-project/root/issues/16031) - VecOps binary functions not using the right types. * [#16038](https://github.com/root-project/root/issues/16038) - Could NOT find Vdt error when using 6.32.02 docker image. * [#16087](https://github.com/root-project/root/issues/16087) - [docs] Potential typo in function name case: DistanceToPrimitive. * [#16201](https://github.com/root-project/root/issues/16201) - [PyROOT] Support most recent numba version 0.60.0 intervals. * [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286) - Reading a TChain and TTreeCache. * [ROOT-7991](https://its.cern.ch/jira/browse/ROOT-7991) - THnSparse::ProjectionND yields disfunctional histogram. * [ROOT-8238](https://its.cern.ch/jira/browse/ROOT-8238) - TPrincipal tries to make histograms with nbin=0. * [ROOT-8519](https://its.cern.ch/jira/browse/ROOT-8519) - Bug when use simple math functions in TTree::SetAlias(),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-04
https://github.com/root-project/root/releases/tag/v6-30-08:448,availability,state,statements,448,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:0,deployability,Patch,Patch,0,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:6,deployability,releas,release,6,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:35,deployability,Releas,Release,35,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:77,deployability,releas,release-notes,77,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:96,deployability,releas,release-,96,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:117,deployability,Instal,Install,117,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:157,deployability,instal,install,157,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:192,deployability,releas,release,192,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:821,deployability,releas,release,821,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:448,integrability,state,statements,448,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:598,integrability,Buffer,Buffer,598,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:979,integrability,discover,discovery,979,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:979,interoperability,discover,discovery,979,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:1047,interoperability,compatib,compatibility,1047,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:731,performance,memor,memory,731,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:411,reliability,doe,does,411,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:512,reliability,doe,does,512,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:0,safety,Patch,Patch,0,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:379,safety,safe,safe,379,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:0,security,Patch,Patch,0,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:731,usability,memor,memory,731,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-30-08:979,usability,discov,discovery,979,"Patch release of v6.30 series. [üóíÔ∏è Release notes](https://root.cern/doc/v630/release-notes.html#release-6.30.08). [üíæ Install instructions](https://root.cern/install/). Items addressed in this release:. * #11353 - Compiled program with libNew.so crash. * #13511 - TMapFile can't work. * #14767 - rootn.exe instant crash on startup. * #15090 - TClass::GetClassInfo() is not thread safe. * #15406 - TEnum::GetEnum does not seem to see 'through' using statements. * #15460 - TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs. * #15590 - Infinite recursion in TFile::Open. * #15621 - Buffer overflow in TBranch::Init. * #15686 - JITted code changes the execution order of computation graph nodes. * #15511 - Possible memory corruption in cling. The `RooPower` and `RooExpPoly` classes are removed from this release branch. It is an unfortunate but unavoidable change: different classes with the same name were used in the CMS collaboration since at least the Higgs discovery. This name collision caused massive problems in backwards compatibility and was blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and were not widely advertised, so you should not be affected by this removal. If you were using one of these classes, please copy the sources from a previous ROOT tag in your analysis as a temporary solution, and report this unsupported usecase by opening a GitHub issue.",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-08
https://github.com/root-project/root/releases/tag/v6-32-02:506,availability,error,error,506,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:655,availability,failur,failures,655,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:706,availability,fault,fault,706,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:771,availability,consist,consistent,771,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:892,availability,slo,slowdown,892,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:2119,availability,error,error,2119," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:0,deployability,Patch,Patch,0,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:6,deployability,releas,release,6,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:49,deployability,Releas,Release,49,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:91,deployability,releas,release-notes,91,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:110,deployability,releas,release-,110,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:143,deployability,Instal,Install,143,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:183,deployability,instal,install,183,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:218,deployability,releas,release,218,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:276,deployability,depend,depending,276,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:494,deployability,fail,failed,494,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:537,deployability,fail,failed,537,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:655,deployability,fail,failures,655,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:717,deployability,build,building,717,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,deployability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,deployability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:706,energy efficiency,fault,fault,706,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1487,energy efficiency,CPU,CPU,1487," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1594,energy efficiency,draw,draw,1594," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1632,energy efficiency,draw,draw,1632," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:276,integrability,depend,depending,276,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:324,integrability,configur,configure,324,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:911,integrability,event,event,911,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,integrability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,integrability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,interoperability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,interoperability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:276,modifiability,depend,depending,276,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:324,modifiability,configur,configure,324,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,modifiability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,modifiability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:238,performance,Memor,Memory,238,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:506,performance,error,error,506,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:655,performance,failur,failures,655,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:706,performance,fault,fault,706,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:829,performance,memor,memory,829,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:868,performance,Perform,Performance,868,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1265,performance,memor,memory,1265," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1487,performance,CPU,CPU,1487," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:2119,performance,error,error,2119," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:494,reliability,fail,failed,494,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:537,reliability,fail,failed,537,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:655,reliability,fail,failures,655,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:706,reliability,fault,fault,706,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:892,reliability,slo,slowdown,892,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,reliability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,reliability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1585,reliability,doe,does,1585," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1956,reliability,doe,does,1956," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:0,safety,Patch,Patch,0,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:276,safety,depend,depending,276,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:506,safety,error,error,506,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:650,safety,Test,Test,650,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:706,safety,fault,fault,706,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1057,safety,prevent,preventing,1057,"](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/R",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1971,safety,except,exceptions,1971," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:2119,safety,error,error,2119," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:0,security,Patch,Patch,0,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:324,security,configur,configure,324,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1057,security,preven,preventing,1057,"](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/R",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1080,security,sign,signatures,1080,"/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetL",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,security,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,security,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:276,testability,depend,depending,276,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:650,testability,Test,Test,650,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:880,testability,regress,regression,880,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1359,testability,integr,integrating,1359," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1468,testability,integr,integrals,1468," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:238,usability,Memor,Memory,238,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:506,usability,error,error,506,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:599,usability,document,documentation,599,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:771,usability,consist,consistent,771,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:829,usability,memor,memory,829,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:868,usability,Perform,Performance,868,"Patch release of v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html#release-6.32.02). [:floppy_disk: Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overlo",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:1265,usability,memor,memory,1265," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:2119,usability,error,error,2119," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-02:2135,usability,Clear,Clear,2135," Install instructions](https://root.cern/install/). Items addressed in this release:. * #7236 - Memory leak in TFile::WriteObjectAny, depending on data type. * #10075 - Difficult to configure Xrootd to use non-builtin openssl. * #14051 - [web graphics] Web graphics resizes canvas despite canvas size definition in the macro. * #15321 - [MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size"". * #15405 - [RF] ExternalConstraints documentation incorrect for RooMCStudy. * #15430 - Test failures with Python 3.13. * #15473 - Segmentation fault when building with the mold linker. * #15498 - gPad is not consistent in pyROOT with web canvas. * #15511 - Possible memory corruption in cling. * #15579 - Performance regression (slowdown) in ALICE event generation. * #15686 - JITted code changes the execution order of computation graph nodes. * #15688 - [PyROOT] TProfile2D::Fill ambiguities preventing use of some signatures in pyROOT. * #15690 - [RF] SegFault in RooBernstein::fillBuffer. * #15694 - [RF] New RooFit EvalBackend returning incorrect result for binned likelihoods. * #15703 - Leaking memory though strings in PyROOT. * #15727 - Windows CMake project cannot find_library() after integrating with ROOT. * #15751 - [RF] Using a conditional RooProdPdf in a multi-channel fit spawns too many integrals with new CPU evaluation backend. * [[#15791](https://github.com/root-project/root/issues/15791)] - JS ROOT does not draw tprofile2d correctly with ""TEXT"" draw option. * [[#15799](https://github.com/root-project/root/issues/15799)] - pyunittests-pyroot-pyz-ttree-setbranchaddress segfaults with Python 3.13. * [[ROOT-7412](https://its.cern.ch/jira/browse/ROOT-7412)] - Strange results looking for nested types. * [[ROOT-8439](https://its.cern.ch/jira/browse/ROOT-8439)] - PyROOT does not treat exceptions properly in overloaded methods. * [[ROOT-9307](https://its.cern.ch/jira/browse/ROOT-9307)] - TPad::GetListOfPrimitives() double deletion error in TList::Clear()",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-02
https://github.com/root-project/root/releases/tag/v6-32-00:1432,availability,consist,consistency,1432," profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://g",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1489,availability,robust,robustness,1489,"ibuted system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutori",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2204,availability,robust,robust,2204,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:6,deployability,releas,release,6,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:53,deployability,Releas,Release,53,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:95,deployability,releas,release-notes,95,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:131,deployability,Instal,Install,131,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:171,deployability,instal,install,171,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:666,deployability,patch,patches,666,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:971,deployability,upgrad,upgraded,971,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:994,deployability,version,version,994,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1282,deployability,updat,updated,1282,"ssing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweig",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1293,deployability,releas,release,1293,"Tuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight renderin",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1387,deployability,API,API,1387,"vourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone sha",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1846,deployability,version,version,1846,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2014,deployability,releas,release,2014,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2140,deployability,version,version,2140,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2159,deployability,updat,update,2159,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2319,deployability,scale,scale,2319,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2480,deployability,patch,patches,2480,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2685,deployability,releas,release,2685,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2750,deployability,releas,release,2750,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2787,deployability,stack,stacks,2787,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:519,energy efficiency,current,current,519,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:760,energy efficiency,CPU,CPU,760,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:860,energy efficiency,CPU,CPU,860,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:864,energy efficiency,core,core,864,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2319,energy efficiency,scale,scale,2319,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:527,integrability,batch,batch,527,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:994,integrability,version,version,994,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1387,integrability,API,API,1387,"vourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone sha",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1846,integrability,version,version,1846,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2140,integrability,version,version,2140,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:334,interoperability,Distribut,Distributed,334,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:489,interoperability,distribut,distributed,489,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:891,interoperability,interop,interop,891,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1085,interoperability,convers,conversion,1085,"v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics pac",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1133,interoperability,convers,conversion,1133," instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities o",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1271,interoperability,format,format,1271,"ree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve**",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1343,interoperability,format,format,1343,"RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand o",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1387,interoperability,API,API,1387,"vourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone sha",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:891,modifiability,interop,interop,891,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:971,modifiability,upgrad,upgraded,971,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:994,modifiability,version,version,994,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1409,modifiability,refact,refactoring,1409,"‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [e",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1846,modifiability,version,version,1846,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2087,modifiability,pac,package,2087,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2140,modifiability,version,version,2140,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2319,modifiability,scal,scale,2319,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:527,performance,batch,batch,527,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:760,performance,CPU,CPU,760,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:860,performance,CPU,CPU,860,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1266,performance,disk,disk,1266,"g a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1409,performance,refactor,refactoring,1409,"‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [e",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1637,performance,concurren,concurrent,1637,"ject/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1733,performance,disk,disk,1733,"** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning t",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2319,performance,scale,scale,2319,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1489,reliability,robust,robustness,1489,"ibuted system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutori",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2204,reliability,robust,robust,2204,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2604,reliability,stabil,stability,2604,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:666,safety,patch,patches,666,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1282,safety,updat,updated,1282,"ssing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweig",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1489,safety,robust,robustness,1489,"ibuted system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutori",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2159,safety,updat,update,2159,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2204,safety,robust,robust,2204,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2480,safety,patch,patches,2480,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:666,security,patch,patches,666,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1282,security,updat,updated,1282,"ssing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweig",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2159,security,updat,update,2159,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2188,security,secur,secure,2188,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2480,security,patch,patches,2480,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2725,testability,plan,planning,2725,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:231,usability,experien,experience,231,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:454,usability,interact,interactive,454,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:466,usability,experien,experience,466,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:813,usability,minim,minimization,813,"First release of the v6.32 series. [:spiral_notepad: Release notes](https://root.cern/doc/v632/release-notes.html). [:floppy_disk: Install instructions](https://root.cern/install/). Highlights:. * **RDataFrame** - zero-code-change experience when moving from processing a TTree to processing an RNTuple, as well as a greatly improved Distributed RDataFrame: ROOT is ready to run at your favourite Analysis Facility ‚Äì it even allows you to profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1432,usability,consist,consistency,1432," profit from an interactive experience backed by a distributed system using your current batch system (e.g. HTCondor, like the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://g",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1556,usability,support,supported,1556,"the lxplus+lxbatch combination at CERN): [try it now](https://github.com/root-project/root/blob/v6-32-00-patches/tutorials/dataframe/distrdf004_dask_lxbatch.py)! . * **RooFit** - The new vectorizing CPU evaluation backend is the default for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:1922,usability,support,support,1922,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2175,usability,user,users,2175,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-32-00:2241,usability,command,command,2241,"ult for likelihood minimization, now up to 10x faster on a single CPU core! . * **PyROOT** - the interop engine of PyROOT, [cppyy](https://cppyy.readthedocs.io/en/latest/), was upgraded to its latest version, blurring the boundaries between Python and C++ in ROOT better than ever, e.g. the conversion of NumPy arrays to vectors, implicit conversion from nested Python tuples to nested initializer lists, and improved overload resolution. . * **RNTuple** ‚Äì The RNTuple on-disk format was updated to release candidate 2, in preparation of the binary format first production freeze. The RNTuple API come with a major refactoring, improving consistency across different parts and improving overall robustness. Moreover: . * Merging of RNTuple data with hadd is now supported. . * A new RNTupleParallel writer class creates RNTuple data in highly concurrent settings. . * A new RNTupleInspector utility class provides information about the on-disk metadata of an RNTuple. . * **Cling** - Speaking of interpreters, the new PyROOT is glorified by a new LLVM version, LLVM 16, that comes with numerous advantages, among which a better support for C++ 20 as well as better and faster generated code. . * **Graphics** - The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, surpassing the features and capabilities of version 6.30. This update provides users with a secure and more robust Web Graphics. Try it with the command `root ‚Äìweb`! . * **REve** - Lightweight rendering of any shape on the scale of hundred thousand of instances. The box, hexagon, and cone shape are showcased in the [eve7 examples](https://github.com/root-project/root/tree/v6-32-00-patches/tutorials/eve7). The rendering of transparent objects is greatly improved. . All that comes with a greatly improved stability: more than 250 items in the ROOT trackers have been addressed for this release. Excellent news for experiments planning to include this release in their production software stacks!",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-32-00
https://github.com/root-project/root/releases/tag/v6-30-06:0,deployability,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:6,deployability,releas,release,6,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:49,deployability,Releas,Release,49,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:91,deployability,releas,release-notes,91,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:110,deployability,releas,release-,110,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:142,deployability,Instal,Install,142,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:182,deployability,instal,install,182,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:0,safety,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-30-06:0,security,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3006). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-06
https://github.com/root-project/root/releases/tag/v6-26-16:0,deployability,Patch,Patch,0,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:6,deployability,releas,release,6,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:48,deployability,Releas,Release,48,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:90,deployability,releas,release-notes,90,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:109,deployability,releas,release-,109,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:141,deployability,Instal,Install,141,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:181,deployability,instal,install,181,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:0,safety,Patch,Patch,0,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-26-16:0,security,Patch,Patch,0,Patch release of v6.26series. [:spiral_notepad: Release notes](https://root.cern/doc/v616/release-notes.html#release-6.2616). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-16
https://github.com/root-project/root/releases/tag/v6-30-04:0,deployability,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:6,deployability,releas,release,6,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:49,deployability,Releas,Release,49,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:91,deployability,releas,release-notes,91,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:110,deployability,releas,release-,110,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:142,deployability,Instal,Install,142,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:182,deployability,instal,install,182,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:0,safety,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-30-04:0,security,Patch,Patch,0,Patch release of v6.30 series. [:spiral_notepad: Release notes](https://root.cern/doc/v630/release-notes.html#release-6.3004). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-30-04
https://github.com/root-project/root/releases/tag/v6-26-10:0,deployability,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:6,deployability,releas,release,6,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:49,deployability,Releas,Release,49,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:91,deployability,releas,release-notes,91,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:110,deployability,releas,release-,110,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:142,deployability,Instal,Install,142,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:182,deployability,instal,install,182,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:0,safety,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-10:0,security,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2610). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-10
https://github.com/root-project/root/releases/tag/v6-26-04:0,deployability,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:6,deployability,releas,release,6,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:49,deployability,Releas,Release,49,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:91,deployability,releas,release-notes,91,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:110,deployability,releas,release-,110,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:142,deployability,Instal,Install,142,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:182,deployability,instal,install,182,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:0,safety,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-26-04:0,security,Patch,Patch,0,Patch release of v6.26 series. [:spiral_notepad: Release notes](https://root.cern/doc/v626/release-notes.html#release-6.2604). [:floppy_disk: Install instructions](https://root.cern/install/),MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-26-04
https://github.com/root-project/root/releases/tag/v6-20-06:0,deployability,Patch,Patch,0,Patch release of v6.20 series,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-06
https://github.com/root-project/root/releases/tag/v6-20-06:6,deployability,releas,release,6,Patch release of v6.20 series,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-06
https://github.com/root-project/root/releases/tag/v6-20-06:0,safety,Patch,Patch,0,Patch release of v6.20 series,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-06
https://github.com/root-project/root/releases/tag/v6-20-06:0,security,Patch,Patch,0,Patch release of v6.20 series,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-06
https://github.com/root-project/root/releases/tag/v6-20-04:0,deployability,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-04:6,deployability,releas,release,6,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-04:70,deployability,releas,release-,70,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-04:62,performance,content,content,62,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-04:0,safety,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-04:0,security,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62004,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-04
https://github.com/root-project/root/releases/tag/v6-20-02:0,deployability,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-02:6,deployability,releas,release,6,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-02:70,deployability,releas,release-,70,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-02:62,performance,content,content,62,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-02:0,safety,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-02:0,security,Patch,Patch,0,Patch release of the v6.20 series. See also https://root.cern/content/release-62002,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-02
https://github.com/root-project/root/releases/tag/v6-20-00:6,deployability,releas,release,6,First release of the v6.20 series. See also https://root.cern/content/release-62000,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-00
https://github.com/root-project/root/releases/tag/v6-20-00:70,deployability,releas,release-,70,First release of the v6.20 series. See also https://root.cern/content/release-62000,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-00
https://github.com/root-project/root/releases/tag/v6-20-00:62,performance,content,content,62,First release of the v6.20 series. See also https://root.cern/content/release-62000,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-20-00
https://github.com/root-project/root/releases/tag/v6-18-04:30,deployability,releas,release-,30,See https://root.cern/content/release-61804,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-04
https://github.com/root-project/root/releases/tag/v6-18-04:22,performance,content,content,22,See https://root.cern/content/release-61804,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-04
https://github.com/root-project/root/releases/tag/v6-18-02:0,deployability,Patch,Patch,0,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-02:6,deployability,releas,release,6,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-02:71,deployability,releas,release-,71,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-02:63,performance,content,content,63,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-02:0,safety,Patch,Patch,0,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-02:0,security,Patch,Patch,0,Patch release for the v6.18 series. See also https://root.cern/content/release-61802,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-02
https://github.com/root-project/root/releases/tag/v6-18-00:30,deployability,releas,release-,30,See https://root.cern/content/release-61800 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-00
https://github.com/root-project/root/releases/tag/v6-18-00:81,deployability,releas,release,81,See https://root.cern/content/release-61800 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-00
https://github.com/root-project/root/releases/tag/v6-18-00:22,performance,content,content,22,See https://root.cern/content/release-61800 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-18-00
https://github.com/root-project/root/releases/tag/v6-16-00:30,deployability,releas,release-,30,See https://root.cern/content/release-61600 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-16-00
https://github.com/root-project/root/releases/tag/v6-16-00:81,deployability,releas,release,81,See https://root.cern/content/release-61600 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-16-00
https://github.com/root-project/root/releases/tag/v6-16-00:22,performance,content,content,22,See https://root.cern/content/release-61600 for the highlights and a link to the release notes.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-16-00
https://github.com/root-project/root/releases/tag/v6-14-00:6,deployability,releas,release,6,First release of the v6-14 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-14-00
https://github.com/root-project/root/releases/tag/v6-10-08:0,deployability,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-08
https://github.com/root-project/root/releases/tag/v6-10-08:6,deployability,releas,release,6,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-08
https://github.com/root-project/root/releases/tag/v6-10-08:0,safety,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-08
https://github.com/root-project/root/releases/tag/v6-10-08:0,security,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-08
https://github.com/root-project/root/releases/tag/v6-11-02:163,availability,avail,available,163,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:22,deployability,releas,release,22,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,deployability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:903,deployability,releas,release-,903,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,integrability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:588,integrability,interfac,interface,588,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,interoperability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:535,interoperability,format,format,535,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:588,interoperability,interfac,interface,588,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,modifiability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:588,modifiability,interfac,interface,588,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:860,modifiability,scal,scalable,860,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:294,performance,parallel,parallelism,294,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:333,performance,parallel,parallelised,333,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:367,performance,parallel,parallel,367,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:478,performance,cach,cache,478,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:496,performance,memor,memory,496,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:700,performance,disk,disk,700,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:805,performance,parallel,parallel,805,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:860,performance,scalab,scalable,860,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:895,performance,content,content,895,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,reliability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:163,reliability,availab,available,163,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:163,safety,avail,available,163,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:48,security,expos,expose,48,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,security,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:163,security,availab,available,163,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:132,testability,integr,integrated,132,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:58,usability,user,users,58,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:422,usability,support,support,422,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-11-02:496,usability,memor,memory,496,"This is a development release. We created it to expose to users part of the enourmous amount of new functionalities which have been integrated in ROOT and will be available in ROOT 6.12/00. These are some of the highlights of the new features you can find in ROOT 6.11/02:. * Even more endemic parallelism - Among the many things, a parallelised hadd (hadd -j) and a parallel enabled prompt: just try it root -t! * XCode9 support. * An enhanced TDataFrame. Now it's possible to cache datasets in memory, to create readers for any data format (not just ROOT) thanks to the new TDataSource interface, much faster type inference via an improved jitting, a plethora of new options for saving datasets on disk. * The LZ4 compression algorithm can be now used for faster reading and writing. * Writing files in parallel with TBufferMerger has become much faster and scalable. See https://root.cern.ch/content/release-61102",MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-11-02
https://github.com/root-project/root/releases/tag/v6-10-06:0,deployability,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-06
https://github.com/root-project/root/releases/tag/v6-10-06:6,deployability,releas,release,6,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-06
https://github.com/root-project/root/releases/tag/v6-10-06:0,safety,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-06
https://github.com/root-project/root/releases/tag/v6-10-06:0,security,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-06
https://github.com/root-project/root/releases/tag/v6-10-04:0,deployability,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-04
https://github.com/root-project/root/releases/tag/v6-10-04:6,deployability,releas,release,6,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-04
https://github.com/root-project/root/releases/tag/v6-10-04:0,safety,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-04
https://github.com/root-project/root/releases/tag/v6-10-04:0,security,Patch,Patch,0,Patch release of the v6-10 series.,MatchSource.RELEASES,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/releases/tag/v6-10-04
