id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/9608:50,performance,content,content,50,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9608:34,safety,Updat,Update,34,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9608:34,security,Updat,Update,34,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9608:117,security,auth,authored-by,117,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9608:180,security,auth,authored-by,180,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9608:19,usability,document,documentation,19,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
https://github.com/root-project/root/pull/9610:630,deployability,instal,installed,630,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:723,deployability,updat,updated,723,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:795,deployability,updat,updated,795,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:131,interoperability,Standard,Standard,131,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:658,interoperability,compatib,compatible,658,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:10,modifiability,refact,refactor,10,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:94,modifiability,refact,refactor,94,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:10,performance,refactor,refactor,10,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:94,performance,refactor,refactor,94,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:215,performance,memor,memory,215,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:423,performance,memor,memory,423,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:460,performance,time,time,460,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:465,performance,memor,memory,465,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:328,reliability,doe,does,328,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:723,safety,updat,updated,723,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:765,safety,test,tested,765,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:795,safety,updat,updated,795,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:723,security,updat,updated,723,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:795,security,updat,updated,795,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:765,testability,test,tested,765,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:166,usability,user,user-provided,166,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:215,usability,memor,memory,215,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:344,usability,behavi,behaviour,344,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:423,usability,memor,memory,423,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9610:465,usability,memor,memory,465,"Cc tgraph refactor; # This Pull request:. ## Changes or fixes:. This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610
https://github.com/root-project/root/pull/9611:88,deployability,updat,update,88,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:556,energy efficiency,model,model,556,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:475,integrability,sub,subsection,475,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:627,interoperability,Distribut,Distributed,627,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:754,interoperability,Distribut,Distributed,754,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:331,reliability,doe,does,331,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:88,safety,updat,update,88,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:88,security,updat,update,88,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:556,security,model,model,556,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:33,usability,document,documentation,33,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:117,usability,document,documentation,117,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9611:949,usability,guid,guide,949,"[Doc][RDF] Changes to the Python documentation of RDataFrame; This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611
https://github.com/root-project/root/pull/9612:0,integrability,Translat,Translate,0,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9612:214,integrability,translat,translate,214,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9612:343,integrability,translat,translate,343,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9612:0,interoperability,Translat,Translate,0,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9612:214,interoperability,translat,translate,214,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9612:343,interoperability,translat,translate,343,"Translate `multifit.C` and `fitConvolution.C` to Python, add comments from manual on website to `multifit.C` and use C++ types instead of ROOT types in fit tutorials; * replace ROOT types with regular C++ types. * translate `fitConvolution.C` to Python. * add comments to `multifit.C` that were originally in the ROOT manual on the website. * translate `multifit.C` to Python. * capitalize spelling of ""Gaussian"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9612
https://github.com/root-project/root/pull/9613:16,availability,error,errors,16,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:123,availability,error,errors,123,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:209,availability,error,error,209,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:501,availability,error,error,501,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:807,availability,error,error,807,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1129,availability,error,error,1129,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1305,availability,error,error,1305,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:382,integrability,messag,message,382,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:440,integrability,messag,message,440,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:678,integrability,messag,message,678,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:740,integrability,messag,message,740,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:990,integrability,messag,message,990,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1058,integrability,messag,message,1058,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:382,interoperability,messag,message,382,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:440,interoperability,messag,message,440,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:678,interoperability,messag,message,678,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:740,interoperability,messag,message,740,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:990,interoperability,messag,message,990,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1058,interoperability,messag,message,1058,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:16,performance,error,errors,16,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:123,performance,error,errors,123,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:209,performance,error,error,209,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:501,performance,error,error,501,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:807,performance,error,error,807,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1129,performance,error,error,1129,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1305,performance,error,error,1305,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:16,safety,error,errors,16,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:34,safety,permiss,permissive,34,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:123,safety,error,errors,123,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:147,safety,permiss,permissive,147,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:209,safety,error,error,209,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:501,safety,error,error,501,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:807,safety,error,error,807,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1129,safety,error,error,1129,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1305,safety,error,error,1305,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:16,usability,error,errors,16,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:123,usability,error,errors,123,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:209,usability,error,error,209,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:501,usability,error,error,501,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:807,usability,error,error,807,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1129,usability,error,error,1129,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9613:1305,usability,error,error,1305,"Fix compilation errors with the `/permissive-` compiler flag on Windo…; …ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:. ```. hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\inc\TF1.h(463,1): message : could be 'TString'. hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'. hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types. gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'. gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9613
https://github.com/root-project/root/pull/9614:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9614:166,deployability,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9614:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9614:166,safety,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9614:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9614:166,security,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 2; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784. 2. https://github.com/root-project/root/pull/9177. 3. https://github.com/root-project/root/pull/8595. 4. https://github.com/root-project/root/pull/9444.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9614
https://github.com/root-project/root/pull/9615:188,deployability,updat,updated,188,Doxygen warnings math io html mc net; # This Pull request:. ## Changes or fixes:. Several warnings and inconsistencies found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9615
https://github.com/root-project/root/pull/9615:158,safety,test,tested,158,Doxygen warnings math io html mc net; # This Pull request:. ## Changes or fixes:. Several warnings and inconsistencies found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9615
https://github.com/root-project/root/pull/9615:188,safety,updat,updated,188,Doxygen warnings math io html mc net; # This Pull request:. ## Changes or fixes:. Several warnings and inconsistencies found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9615
https://github.com/root-project/root/pull/9615:188,security,updat,updated,188,Doxygen warnings math io html mc net; # This Pull request:. ## Changes or fixes:. Several warnings and inconsistencies found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9615
https://github.com/root-project/root/pull/9615:158,testability,test,tested,158,Doxygen warnings math io html mc net; # This Pull request:. ## Changes or fixes:. Several warnings and inconsistencies found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9615
https://github.com/root-project/root/pull/9616:16,usability,user,user,16,[io] Remove non-user related doc from TFile class. [skip-ci]; Also preparing for new IO group doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9616
https://github.com/root-project/root/pull/9618:718,deployability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:273,interoperability,prox,proxy,273,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:726,interoperability,platform,platform,726,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:886,interoperability,prox,proxy,886,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:969,interoperability,prox,proxy,969,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:843,performance,I/O,I/O,843,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:718,reliability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:253,testability,emul,emulated,253,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:812,testability,emul,emulated,812,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:479,usability,prefer,prefers,479,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:605,usability,prefer,prefers,605,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:926,usability,prefer,prefer,926,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9618:1059,usability,prefer,prefer,1059,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9618
https://github.com/root-project/root/pull/9619:139,deployability,version,version,139,Remove the Primer in Markdown format; The [Primer is now on the ROOT website](https://github.com/root-project/web/pull/724). This Markdown version is obsolete. We remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9619
https://github.com/root-project/root/pull/9619:139,integrability,version,version,139,Remove the Primer in Markdown format; The [Primer is now on the ROOT website](https://github.com/root-project/web/pull/724). This Markdown version is obsolete. We remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9619
https://github.com/root-project/root/pull/9619:30,interoperability,format,format,30,Remove the Primer in Markdown format; The [Primer is now on the ROOT website](https://github.com/root-project/web/pull/724). This Markdown version is obsolete. We remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9619
https://github.com/root-project/root/pull/9619:139,modifiability,version,version,139,Remove the Primer in Markdown format; The [Primer is now on the ROOT website](https://github.com/root-project/web/pull/724). This Markdown version is obsolete. We remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9619
https://github.com/root-project/root/pull/9620:718,deployability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:273,interoperability,prox,proxy,273,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:726,interoperability,platform,platform,726,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:886,interoperability,prox,proxy,886,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:969,interoperability,prox,proxy,969,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:843,performance,I/O,I/O,843,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:718,reliability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:253,testability,emul,emulated,253,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:812,testability,emul,emulated,812,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:479,usability,prefer,prefers,479,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:605,usability,prefer,prefers,605,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:926,usability,prefer,prefer,926,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9620:1059,usability,prefer,prefer,1059,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9620
https://github.com/root-project/root/pull/9621:703,availability,down,down,703,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:737,deployability,observ,observed,737,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1109,deployability,fail,failed,1109,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1258,deployability,build,build,1258,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1292,deployability,build,build,1292,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:171,energy efficiency,load,loadable,171,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:390,energy efficiency,load,loadLazySpecializationsImpl,390,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:430,energy efficiency,load,load,430,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:676,energy efficiency,load,loaded,676,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:971,energy efficiency,load,load,971,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1119,energy efficiency,load,loadLazySpecializationsImpl,1119,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:171,performance,load,loadable,171,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:390,performance,load,loadLazySpecializationsImpl,390,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:430,performance,load,load,430,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:676,performance,load,loaded,676,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:971,performance,load,load,971,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1119,performance,load,loadLazySpecializationsImpl,1119,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1109,reliability,fail,failed,1109,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:286,security,hash,hash,286,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:933,security,ident,identify,933,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:95,testability,assert,assert,95,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:578,testability,assert,asserting,578,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:737,testability,observ,observed,737,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1099,testability,Assert,Assertion,1099,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:840,usability,hint,hint,840,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1243,usability,User,Users,1243,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/pull/9621:1324,usability,tool,tools,1324,"[clang] Do not assume uniqueness of ODRHash:; When registering a new specialization, we cannot assert that the. specialization is new, as in: has not been registered as a loadable. specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e. different specialization template arguments might map to the same. ODRHash value. loadLazySpecializationsImpl() will thus load something,. and claim that the ""Specialization is already registered as lazy"",. but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will. be loaded is causing problems down the road; so far we have not observed. such problems in the wild. If so, the ODRHash must not be the lookup key,. but a mere lookup hint into a multimap or similar, where the search compares. the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g. ```. roottest/cling/threading/clinglock.C... Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253. ```. on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9621
https://github.com/root-project/root/issues/9624:570,availability,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1268,availability,Operat,Operating,1268,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1343,availability,down,download,1343,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1411,availability,Operat,Operating,1411,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1464,availability,down,download,1464,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:904,deployability,build,build,904,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1256,deployability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1325,deployability,instal,install,1325,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1390,deployability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:61,energy efficiency,model,model,61,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1150,energy efficiency,model,model,1150,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1172,integrability,Batch,BatchSize,1172,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1256,integrability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1390,integrability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1256,modifiability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1390,modifiability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:570,performance,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1172,performance,Batch,BatchSize,1172,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:570,safety,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:858,safety,input,input,858,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:61,security,model,model,61,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1150,security,model,model,1150,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1489,testability,context,context,1489,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1518,testability,context,context,1518,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:20,usability,Learn,LearningRateSchedule,20,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:511,usability,Learn,LearningRateSchedule,511,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:570,usability,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:602,usability,behavi,behavior,602,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:713,usability,behavi,behavior,713,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:858,usability,input,input,858,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:951,usability,Learn,LearningRateSchedule,951,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9624:1185,usability,Learn,LearningRateSchedule,1185,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9624
https://github.com/root-project/root/issues/9625:570,availability,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1268,availability,Operat,Operating,1268,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1343,availability,down,download,1343,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1411,availability,Operat,Operating,1411,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1464,availability,down,download,1464,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:904,deployability,build,build,904,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1256,deployability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1325,deployability,instal,install,1325,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1390,deployability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:61,energy efficiency,model,model,61,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1150,energy efficiency,model,model,1150,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1172,integrability,Batch,BatchSize,1172,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1256,integrability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1390,integrability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1256,modifiability,version,version,1256,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1390,modifiability,version,version,1390,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:570,performance,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1172,performance,Batch,BatchSize,1172,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:570,safety,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:858,safety,input,input,858,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:61,security,model,model,61,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1150,security,model,model,1150,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1489,testability,context,context,1489,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1518,testability,context,context,1518,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:20,usability,Learn,LearningRateSchedule,20,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:511,usability,Learn,LearningRateSchedule,511,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:570,usability,error,error,570,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:602,usability,behavi,behavior,602,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:713,usability,behavi,behavior,713,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:858,usability,input,input,858,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:951,usability,Learn,LearningRateSchedule,951,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9625:1185,usability,Learn,LearningRateSchedule,1185,"Crash when setting `LearningRateSchedule` for training Keras model on TMVA; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior. Just fix it? Make it work? Or something like these... ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:. ```python. factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.24.06. 2. Operating system: Ubuntu20.04. 3. Obtain way: binary download. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9625
https://github.com/root-project/root/issues/9626:490,deployability,Stack,Stack,490,THStack docu broken link and TSpectrum TGeoMatrix; - [x] Checked for duplicates. ### Describe the bug. THStack::Paint function documentation has a broken link:. https://root.cern/doc/master/classTHStack.html#HS00. I guess this was overlooked when reformatting here: https://github.com/root-project/root/commit/830ba5364ad60f287932f002c1c676dd8d6e2aa6#diff-82b523bd29fb2b8da2dc50dfdb01386a70504d8de4b2dc71fd8d6ac14354b5a6. ### Expected behavior. Fix link using this:. ```. \anchor HS00. ### Stack painting. ... /// [Paint the list of histograms.](\ref HS00). ```. ### To Reproduce. Go to . https://root.cern/doc/master/classTHStack.html#a6294f58bebce2f1ce5d6dced8e22bc1e. and click on `Paint list of histograms`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9626
https://github.com/root-project/root/issues/9626:127,usability,document,documentation,127,THStack docu broken link and TSpectrum TGeoMatrix; - [x] Checked for duplicates. ### Describe the bug. THStack::Paint function documentation has a broken link:. https://root.cern/doc/master/classTHStack.html#HS00. I guess this was overlooked when reformatting here: https://github.com/root-project/root/commit/830ba5364ad60f287932f002c1c676dd8d6e2aa6#diff-82b523bd29fb2b8da2dc50dfdb01386a70504d8de4b2dc71fd8d6ac14354b5a6. ### Expected behavior. Fix link using this:. ```. \anchor HS00. ### Stack painting. ... /// [Paint the list of histograms.](\ref HS00). ```. ### To Reproduce. Go to . https://root.cern/doc/master/classTHStack.html#a6294f58bebce2f1ce5d6dced8e22bc1e. and click on `Paint list of histograms`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9626
https://github.com/root-project/root/issues/9626:435,usability,behavi,behavior,435,THStack docu broken link and TSpectrum TGeoMatrix; - [x] Checked for duplicates. ### Describe the bug. THStack::Paint function documentation has a broken link:. https://root.cern/doc/master/classTHStack.html#HS00. I guess this was overlooked when reformatting here: https://github.com/root-project/root/commit/830ba5364ad60f287932f002c1c676dd8d6e2aa6#diff-82b523bd29fb2b8da2dc50dfdb01386a70504d8de4b2dc71fd8d6ac14354b5a6. ### Expected behavior. Fix link using this:. ```. \anchor HS00. ### Stack painting. ... /// [Paint the list of histograms.](\ref HS00). ```. ### To Reproduce. Go to . https://root.cern/doc/master/classTHStack.html#a6294f58bebce2f1ce5d6dced8e22bc1e. and click on `Paint list of histograms`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9626
https://github.com/root-project/root/pull/9628:0,integrability,Translat,Translate,0,"Translate some `ROOT::Fit` tutorials referenced in the manual to Python; The combinedFit.C tutorial is a good example for the `ROOT::Fitter` functionality, so we also want to have it in Python. The fitNormSum.C tutorial explains a feature that is often asked about in the forum.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9628
https://github.com/root-project/root/pull/9628:0,interoperability,Translat,Translate,0,"Translate some `ROOT::Fit` tutorials referenced in the manual to Python; The combinedFit.C tutorial is a good example for the `ROOT::Fitter` functionality, so we also want to have it in Python. The fitNormSum.C tutorial explains a feature that is often asked about in the forum.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9628
https://github.com/root-project/root/pull/9629:176,availability,servic,services,176,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:176,deployability,servic,services,176,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:514,deployability,updat,updated,514,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:1,energy efficiency,core,core,1,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:176,integrability,servic,services,176,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:350,interoperability,Bind,Bindings,350,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:176,modifiability,servic,services,176,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:274,modifiability,concern,concerning,274,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:350,modifiability,Bind,Bindings,350,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:136,safety,Prevent,Prevents,136,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:484,safety,test,tested,484,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:514,safety,updat,updated,514,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:61,security,expos,expose,61,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:136,security,Preven,Prevents,136,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:384,security,expos,exposes,384,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:514,security,updat,updated,514,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:274,testability,concern,concerning,274,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:484,testability,test,tested,484,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:77,usability,document,documentation,77,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9629:361,usability,document,documentation,361,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation; # This Pull request:. ## Changes or fixes:. Prevents 181 warnings in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull when running Doxygen concerning the ::Streamer functions. And 4 or 5 warnings are solved also in Bindings/R documentation. It also exposes some parts of ClassDef macro that were not included in doxygen before. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9596.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629
https://github.com/root-project/root/pull/9630:16,availability,error,error,16,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:81,availability,error,error,81,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:192,availability,error,error,192,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:306,energy efficiency,alloc,allocator,306,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:16,performance,error,error,16,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:81,performance,error,error,81,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:192,performance,error,error,192,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:16,safety,error,error,16,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:33,safety,permiss,permissive,33,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:81,safety,error,error,81,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:98,safety,permiss,permissive,98,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:192,safety,error,error,192,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:16,usability,error,error,16,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:81,usability,error,error,81,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9630:192,usability,error,error,192,"Fix compilation error with the `/permissive-` flag on Windows; Fix the following error with the `/permissive-` compiler flag on Windows. ```. gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9630
https://github.com/root-project/root/pull/9631:83,deployability,Updat,Update,83,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:83,safety,Updat,Update,83,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:83,security,Updat,Update,83,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:23,usability,document,documentation,23,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:161,usability,document,documentation,161,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:183,usability,Minim,Minimizer,183,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/pull/9631:216,usability,Minim,MinimizerOptions,216,"[Skip-ci][Doc] Improve documentation for fitting in TH1::Fit, TGraph::Fit and …; . Update and improve description for fitting histograms ans graphs. Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9631
https://github.com/root-project/root/issues/9632:570,availability,error,error,570,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:777,availability,error,errors,777,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:604,deployability,modul,module,604,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:604,modifiability,modul,module,604,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:570,performance,error,error,570,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:777,performance,error,errors,777,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:428,safety,except,exception,428,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:476,safety,except,exception,476,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:570,safety,error,error,570,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:604,safety,modul,module,604,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:712,safety,except,exception,712,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:777,safety,error,errors,777,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:488,testability,Trace,Traceback,488,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:570,usability,error,error,570,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/issues/9632:777,usability,error,errors,777,"Iteration on `std.vector['char']` is broken; - [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python. #!/usr/bin/env python3. import ROOT. vec = ROOT.std.vector['char'](['a','b','c']). for _ in vec:. pass. ```. produces:. ```. TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):. File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>. for _ in vec:. SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set. ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9632
https://github.com/root-project/root/pull/9633:29,availability,operat,operator,29,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:92,availability,operat,operator,92,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:191,availability,operat,operator,191,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:234,availability,error,error,234,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:503,availability,error,error,503,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:551,availability,operat,operator,551,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:823,availability,operat,operator,823,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:947,availability,operat,operator,947,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:1010,availability,error,error,1010,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:977,integrability,pub,public,977,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:234,performance,error,error,234,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:503,performance,error,error,503,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:1010,performance,error,error,1010,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:234,safety,error,error,234,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:503,safety,error,error,503,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:1010,safety,error,error,1010,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:234,usability,error,error,234,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:503,usability,error,error,503,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9633:1010,usability,error,error,1010,"v6-26: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9633
https://github.com/root-project/root/pull/9634:29,availability,operat,operator,29,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:92,availability,operat,operator,92,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:191,availability,operat,operator,191,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:234,availability,error,error,234,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:503,availability,error,error,503,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:551,availability,operat,operator,551,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:823,availability,operat,operator,823,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:947,availability,operat,operator,947,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:1010,availability,error,error,1010,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:977,integrability,pub,public,977,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:234,performance,error,error,234,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:503,performance,error,error,503,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:1010,performance,error,error,1010,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:234,safety,error,error,234,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:503,safety,error,error,503,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:1010,safety,error,error,1010,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:234,usability,error,error,234,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:503,usability,error,error,503,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9634:1010,usability,error,error,1010,"v6-24: MakeProject: generate operator=; This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```. SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:. SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’. 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];. | ^. In file included from KKceex.h:21,. from KKhh2f.h:22,. from SRChh_ROOT6_mcgenProjectHeaders.h:1,. from SRChh_ROOT6_mcgenProjectSource.cxx:3:. KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator. 15 | class KKpart : public TObject {. | ^~~~~~. c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9634
https://github.com/root-project/root/pull/9635:75,deployability,version,version,75,"Veto fitConvolution.py without FFTW; Commit 88665b9cde introduced a Python version of fitConvolution.C, but did not add it to the list of vetoed tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9635
https://github.com/root-project/root/pull/9635:75,integrability,version,version,75,"Veto fitConvolution.py without FFTW; Commit 88665b9cde introduced a Python version of fitConvolution.C, but did not add it to the list of vetoed tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9635
https://github.com/root-project/root/pull/9635:75,modifiability,version,version,75,"Veto fitConvolution.py without FFTW; Commit 88665b9cde introduced a Python version of fitConvolution.C, but did not add it to the list of vetoed tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9635
https://github.com/root-project/root/pull/9635:145,safety,test,tests,145,"Veto fitConvolution.py without FFTW; Commit 88665b9cde introduced a Python version of fitConvolution.C, but did not add it to the list of vetoed tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9635
https://github.com/root-project/root/pull/9635:145,testability,test,tests,145,"Veto fitConvolution.py without FFTW; Commit 88665b9cde introduced a Python version of fitConvolution.C, but did not add it to the list of vetoed tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9635
https://github.com/root-project/root/issues/9636:1401,deployability,version,version,1401,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1401,integrability,version,version,1401,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:123,interoperability,distribut,distribution,123,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:556,interoperability,distribut,distribution,556,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:621,interoperability,distribut,distribution,621,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:844,interoperability,distribut,distribution,844,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1559,interoperability,distribut,distribution,1559,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1401,modifiability,version,version,1401,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:32,safety,test,test,32,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:108,safety,test,test,108,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:245,safety,test,testStat,245,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1297,safety,test,test,1297,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1415,safety,test,test,1415,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:32,testability,test,test,32,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:108,testability,test,test,108,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:245,testability,test,testStat,245,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1297,testability,test,test,1297,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1415,testability,test,test,1415,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:255,usability,behavi,behaving,255,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9636:1082,usability,effectiv,effective,1082,"Issue with Kolmogorov - Smirnov test in ROOT::Math::GoFTest; Dear all,. I have found the Kolmogorov-Smirnov test between a distribution function and a dataset implemented in ROOT::Math::GoFTest::KolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) behaving incorrectly at low statistics (n~10). In those cases, the calculated Kolmogorov distance D acummulates at value 1/n. After investigation, I suspect the line . https://github.com/root-project/root/blob/master/math/mathcore/src/GoFTest.cxx#L937. calculates D as EITHER the distance between the distribution function and the ""top of the step"" in the empirical distribution constructed from data OR the height of that step, whichever is greater. The correct way - also given in the reference (Numerical recipes, page 737) - would be to calculate it as EITHER the distance between the distribution function and the top of the step OR between the function and the bottom of the step, whichever is greater. Additionally, this method later calculates the KS p-value using TMath::KolmogorovProb(), adopting a correction on the effective number of entries from the reference book, i.e. sqrt(n) --> (sqrt(n) + 0.12 + 0.11/sqrt(n)). This correction is however not used in other appearances of TMath::KolmogorovProb(), such as in the 2-sample KS test:. https://github.com/root-project/root/blob/master/math/mathcore/src/TMath.cxx#L839. or in the TH1 version of KS test:. https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L8175. Is it therefore possible that the implementation of the KS distribution in ROOT is different from that in the reference book (Numerical recipes), and therefore the correction may not be relevant here? Thank you,. Best wishes,. Ondrej Kovanda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9636
https://github.com/root-project/root/issues/9637:871,deployability,version,version,871,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/issues/9637:904,deployability,version,version,904,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/issues/9637:871,integrability,version,version,871,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/issues/9637:904,integrability,version,version,904,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/issues/9637:871,modifiability,version,version,871,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/issues/9637:904,modifiability,version,version,904,"`TGraph::Add(TF1 *f)` method like for `TH1`'s; ### Explain what you would like to see improved. There is not a `TGraph::Add(TF1 *f)` like in `TH1::Add(TF1 *f)` to add the value of the function f evaluated in each point to the y value of the TGraphErrors. It surely would be useful especially to compute ratios and residuals for `TGraph`'s, other than `TH1`'s. For example if there is a `TGrapherror *graph` object, and a `TF1 *fit` function fitted on this very data. To create the residual graph, or the data - bkg graph the only thing needed is `TGraphErrors *residuals = (TGraphErrors*)graph->Clone();` then `residual->Add(fit, -1);` will make residual graph with fitted funtion removed. . Also for data-bkg case (here the TF1 function is `bkg`):. ```cpp. TGraphErrors *data_bkg = (TGraphErrors*)graph->Clone();. data_bkg->Add(bkg, -1);. ```. ### Setup. I'm using ROOT version 6.24/02 on macOS mojave, version 10.14.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9637
https://github.com/root-project/root/pull/9638:53,deployability,version,version,53,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:97,deployability,releas,release,97,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:137,deployability,version,version,137,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:460,deployability,Upgrad,Upgrade,460,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:34,energy efficiency,Current,Current,34,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:204,energy efficiency,Reduc,Reduce,204,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:326,energy efficiency,draw,draw,326,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:53,integrability,version,version,53,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:137,integrability,version,version,137,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:389,interoperability,standard,standard,389,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:53,modifiability,version,version,53,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:137,modifiability,version,version,137,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:460,modifiability,Upgrad,Upgrade,460,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:152,safety,avoid,avoids,152,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:211,security,sign,significantly,211,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:298,usability,support,support,298,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9638:416,usability,support,support,416,"Latest JSROOT with three.js r136; Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version. Fully avoids jQuery in the GUI, replace it by HTML5 code. Reduce significantly used code from d3.js (factor 3). Improve flexible layout in the GUI. Add support of many new classes/draw options. Like CANDLE/VIOLIN plots, TEfficiency,. Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9638
https://github.com/root-project/root/pull/9639:57,usability,support,supported,57,"[webgui] add TSpline to TWebCanvas, 6.26; Add TSpline as supported class in TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9639
https://github.com/root-project/root/pull/9640:37,availability,error,error,37,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:85,availability,error,error,85,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:131,availability,error,error,131,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:571,availability,error,error,571,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:244,energy efficiency,alloc,allocator,244,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:365,energy efficiency,alloc,allocator,365,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:413,integrability,pub,public,413,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:37,performance,error,error,37,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:85,performance,error,error,85,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:131,performance,error,error,131,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:571,performance,error,error,571,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:9,safety,test,testHistFactory,9,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:37,safety,error,error,37,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:85,safety,error,error,85,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:109,safety,test,testHistFactory,109,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:131,safety,error,error,131,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:474,safety,Test,TestBody,474,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:492,safety,Test,TestBody,492,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:543,safety,test,testHistFactory,543,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:571,safety,error,error,571,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:9,testability,test,testHistFactory,9,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:109,testability,test,testHistFactory,109,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:474,testability,Test,TestBody,474,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:492,testability,Test,TestBody,492,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:543,testability,test,testHistFactory,543,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:37,usability,error,error,37,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:85,usability,error,error,85,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:131,usability,error,error,131,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9640:571,usability,error,error,571,"[RF] Fix testHistFactory compilation error on Windows; Fix the following compilation error on Windows:. ```. testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ). testHistFactory.exe : fatal error LNK1120: 1 unresolved externals. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9640
https://github.com/root-project/root/pull/9641:19,deployability,build,builds,19,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9641:181,deployability,version,version,181,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9641:181,integrability,version,version,181,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9641:181,modifiability,version,version,181,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9641:173,performance,perform,perform,173,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9641:173,usability,perform,perform,173,"Try fixing the LCG builds.; This commit reverts:. ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19. ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9641
https://github.com/root-project/root/pull/9642:143,usability,Support,Support,143,"Backport changes related to XZ, ZY, nad ZX in eve-7 to 6.24 branch; # This Pull request:. * Include missing commit in REveProjectionManager. * Support the new projections in REveJetCone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9642
https://github.com/root-project/root/pull/9643:115,integrability,messag,message,115,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:115,interoperability,messag,message,115,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:33,performance,content,content,33,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:152,performance,content,content,152,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:14,safety,except,exception,14,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:65,safety,except,exceptions,65,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9643:179,usability,support,support,179,Eve-7: Handle exception in table content streaming ; * Try/catch exceptions in steaming of table. * Stream REveLog message conent in the the end-change content form server. * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643
https://github.com/root-project/root/pull/9644:549,deployability,contain,contains,549,"[RF] Modernize RooCmdConfig; This PR suggests some modernization of the RooCmdConfig class, which has no effect on the functionality but saves many lines of code and bad patterns like friend classes. This development was made many months ago, and it was taken from the still open PR https://github.com/root-project/root/pull/8427. The linked PR combines the modernization with fixing the JIRA issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), but I think it's better to separate code refactoring from changing functionality. This PR contains the first five commits from the linked PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9644
https://github.com/root-project/root/pull/9644:500,modifiability,refact,refactoring,500,"[RF] Modernize RooCmdConfig; This PR suggests some modernization of the RooCmdConfig class, which has no effect on the functionality but saves many lines of code and bad patterns like friend classes. This development was made many months ago, and it was taken from the still open PR https://github.com/root-project/root/pull/8427. The linked PR combines the modernization with fixing the JIRA issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), but I think it's better to separate code refactoring from changing functionality. This PR contains the first five commits from the linked PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9644
https://github.com/root-project/root/pull/9644:500,performance,refactor,refactoring,500,"[RF] Modernize RooCmdConfig; This PR suggests some modernization of the RooCmdConfig class, which has no effect on the functionality but saves many lines of code and bad patterns like friend classes. This development was made many months ago, and it was taken from the still open PR https://github.com/root-project/root/pull/8427. The linked PR combines the modernization with fixing the JIRA issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), but I think it's better to separate code refactoring from changing functionality. This PR contains the first five commits from the linked PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9644
https://github.com/root-project/root/issues/9645:908,testability,context,context,908,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:209,usability,cursor,cursor,209,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:266,usability,cursor,cursor,266,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:369,usability,behavi,behavior,369,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:415,usability,responsiv,responsive,415,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:463,usability,command,command,463,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:540,usability,tool,tools,540,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:546,usability,command,command,546,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9645:972,usability,command,command,972,"Pyroot TCanvas unresponsive [6.24/06 precompiled, Win11, VStudio 2019 or 2022, python 3.8.10 (32-bit)]; - [X] Checked for duplicates. ### Describe the bug. After creating a new TCanvas with Pyroot, moving the cursor over the TCanvas window displays the Windows wait-cursor, and clicking the window makes it hang and show ""Not Responding"" in the title bar. ### Expected behavior. The newly created TCanvas should be responsive, as it is when created from the ROOT command prompt instead of in Pyroot. ### To Reproduce (in VStudio x86 native tools command window). > c:\root_v6.24.06\bin\thisroot.bat. > python. >>> import ROOT. >>> c1 = ROOT.TCanvas(""blah"", ""blah blah"", 800, 600). (canvas opens but is unresponsive). ### Setup. ROOT 6.24.06 precompiled binaries (built Sep 02 2021, 14:20:23). Windows 11 Pro. Python 3.8.10 (32-bit) . VStudio 2019 (16.11.9) or 2022 (17.0.5) Community edition. ### Additional context. ROOT appears to behave properly when launched from the command prompt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9645
https://github.com/root-project/root/issues/9646:255,deployability,stack,stackoverflow,255,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:52,integrability,discover,discovered,52,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:580,integrability,sub,subtraction,580,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:52,interoperability,discover,discovered,52,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:434,testability,simpl,simplicity,434,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:52,usability,discov,discovered,52,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:229,usability,document,documented,229,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:434,usability,simpl,simplicity,434,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:558,usability,cancel,cancellation,558,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/issues/9646:900,usability,cancel,cancellation,900,"Numerically stable computation of invariant mass; I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:. https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity). `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`. one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:. https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD. The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9646
https://github.com/root-project/root/pull/9647:113,deployability,version,version,113,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:247,deployability,version,version,247,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:113,integrability,version,version,113,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:247,integrability,version,version,247,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:113,modifiability,version,version,113,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:247,modifiability,version,version,247,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:69,safety,test,tested,69,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9647:69,testability,test,tested,69,[jsroot] dev 21/01/2022 with WebGL embeding in Chrome [skip-ci]; CEF tested with 4692 branch (Chromium 97). This version allows correct embeding of WebGL canvas into SVG. This solves long-standing problem with Chrome-based browsers. Starting from version 96 Chrome works as good as Firefox. in that respect. Checked that latest CEF works as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9647
https://github.com/root-project/root/pull/9648:19,availability,error,errors,19,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:79,availability,error,errors,79,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:171,deployability,updat,updated,171,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:1,interoperability,bind,bindings,1,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:110,interoperability,bind,bindings,110,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:1,modifiability,bind,bindings,1,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:110,modifiability,bind,bindings,110,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:19,performance,error,errors,19,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:79,performance,error,errors,79,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:19,safety,error,errors,19,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:79,safety,error,errors,79,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:141,safety,test,tested,141,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:171,safety,updat,updated,171,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:171,security,updat,updated,171,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:141,testability,test,tested,141,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:19,usability,error,errors,19,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:79,usability,error,errors,79,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9648:93,usability,document,documentation,93,[bindings] doxygen errors; # This Pull request:. ## Changes or fixes:. Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9648
https://github.com/root-project/root/pull/9650:91,availability,error,errors,91,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:167,deployability,updat,updated,167,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:91,performance,error,errors,91,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:91,safety,error,errors,91,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:137,safety,test,tested,137,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:167,safety,updat,updated,167,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:167,security,updat,updated,167,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:137,testability,test,tested,137,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:77,usability,document,documentation,77,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9650:91,usability,error,errors,91,[tree] doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650
https://github.com/root-project/root/pull/9651:221,deployability,updat,updated,221,[TMVA] fix some inconsistencies and warnings found by doxygen; # This Pull request:. ## Changes or fixes:. Several doxygen warnings found by doxygen in the TMVA classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9651
https://github.com/root-project/root/pull/9651:191,safety,test,tested,191,[TMVA] fix some inconsistencies and warnings found by doxygen; # This Pull request:. ## Changes or fixes:. Several doxygen warnings found by doxygen in the TMVA classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9651
https://github.com/root-project/root/pull/9651:221,safety,updat,updated,221,[TMVA] fix some inconsistencies and warnings found by doxygen; # This Pull request:. ## Changes or fixes:. Several doxygen warnings found by doxygen in the TMVA classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9651
https://github.com/root-project/root/pull/9651:221,security,updat,updated,221,[TMVA] fix some inconsistencies and warnings found by doxygen; # This Pull request:. ## Changes or fixes:. Several doxygen warnings found by doxygen in the TMVA classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9651
https://github.com/root-project/root/pull/9651:191,testability,test,tested,191,[TMVA] fix some inconsistencies and warnings found by doxygen; # This Pull request:. ## Changes or fixes:. Several doxygen warnings found by doxygen in the TMVA classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9651
https://github.com/root-project/root/pull/9653:171,deployability,updat,updated,171,[roofit] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9653
https://github.com/root-project/root/pull/9653:141,safety,test,tested,141,[roofit] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9653
https://github.com/root-project/root/pull/9653:171,safety,updat,updated,171,[roofit] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9653
https://github.com/root-project/root/pull/9653:171,security,updat,updated,171,[roofit] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9653
https://github.com/root-project/root/pull/9653:141,testability,test,tested,141,[roofit] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9653
https://github.com/root-project/root/pull/9654:151,deployability,updat,updated,151,[proof] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Doxygen warnings in docu. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654
https://github.com/root-project/root/pull/9654:121,safety,test,tested,121,[proof] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Doxygen warnings in docu. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654
https://github.com/root-project/root/pull/9654:151,safety,updat,updated,151,[proof] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Doxygen warnings in docu. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654
https://github.com/root-project/root/pull/9654:151,security,updat,updated,151,[proof] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Doxygen warnings in docu. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654
https://github.com/root-project/root/pull/9654:121,testability,test,tested,121,[proof] fix doxygen warnings; # This Pull request:. ## Changes or fixes:. Doxygen warnings in docu. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654
https://github.com/root-project/root/pull/9655:162,deployability,updat,updated,162,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9655:1,energy efficiency,core,core,1,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9655:132,safety,test,tested,132,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9655:162,safety,updat,updated,162,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9655:162,security,updat,updated,162,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9655:132,testability,test,tested,132,[core/misc] fix some more doxygen warnings; # This Pull request:. ## Changes or fixes:. some doxygen warnings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9655
https://github.com/root-project/root/pull/9656:179,deployability,updat,updated,179,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9656:118,modifiability,pac,packages,118,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9656:149,safety,test,tested,149,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9656:179,safety,updat,updated,179,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9656:179,security,updat,updated,179,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9656:149,testability,test,tested,149,[misc] solve doxygen warnings; # This Pull request:. ## Changes or fixes:. some remaining Doxygen warnings across the packages. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9656
https://github.com/root-project/root/pull/9657:233,deployability,updat,updated,233,[roofit] fix doxygen warnings v2; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. Supersedes https://github.com/root-project/root/pull/9653. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9657
https://github.com/root-project/root/pull/9657:203,safety,test,tested,203,[roofit] fix doxygen warnings v2; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. Supersedes https://github.com/root-project/root/pull/9653. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9657
https://github.com/root-project/root/pull/9657:233,safety,updat,updated,233,[roofit] fix doxygen warnings v2; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. Supersedes https://github.com/root-project/root/pull/9653. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9657
https://github.com/root-project/root/pull/9657:233,security,updat,updated,233,[roofit] fix doxygen warnings v2; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. Supersedes https://github.com/root-project/root/pull/9653. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9657
https://github.com/root-project/root/pull/9657:203,testability,test,tested,203,[roofit] fix doxygen warnings v2; # This Pull request:. ## Changes or fixes:. Several warnings found by doxygen in roofit. Supersedes https://github.com/root-project/root/pull/9653. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9657
https://github.com/root-project/root/pull/9660:65,availability,error,errors,65,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:292,availability,Error,Error,292,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:379,availability,Error,Error,379,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:465,availability,error,error,465,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:65,performance,error,errors,65,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:292,performance,Error,Error,292,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:379,performance,Error,Error,379,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:465,performance,error,error,465,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:363,reliability,doe,does,363,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:65,safety,error,errors,65,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:292,safety,Error,Error,292,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:379,safety,Error,Error,379,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:465,safety,error,error,465,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:65,usability,error,errors,65,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:123,usability,User,Users,123,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:292,usability,Error,Error,292,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:325,usability,User,Users,325,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:379,usability,Error,Error,379,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:465,usability,error,error,465,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:508,usability,User,Users,508,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:657,usability,help,help,657,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:715,usability,User,Users,715,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9660:1008,usability,User,Users,1008,Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9660
https://github.com/root-project/root/pull/9661:73,availability,error,errors,73,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:300,availability,Error,Error,300,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:387,availability,Error,Error,387,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:473,availability,error,error,473,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:73,performance,error,errors,73,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:300,performance,Error,Error,300,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:387,performance,Error,Error,387,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:473,performance,error,error,473,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:371,reliability,doe,does,371,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:73,safety,error,errors,73,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:300,safety,Error,Error,300,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:387,safety,Error,Error,387,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:473,safety,error,error,473,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:73,usability,error,errors,73,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:131,usability,User,Users,131,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:300,usability,Error,Error,300,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:333,usability,User,Users,333,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:387,usability,Error,Error,387,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:473,usability,error,error,473,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:516,usability,User,Users,516,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:665,usability,help,help,665,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:723,usability,User,Users,723,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9661:1016,usability,User,Users,1016,[v6-26] Allow expanding wildcard arguments on Windows; Fix the following errors when using wilcards in program arguments:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.*.root. Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist. Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root. hadd exiting due to error in hsimple.*.root. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. Warning in <TApplication::GetOptions>: file *.root not found. root: unrecognized option '*.root'. Try 'root --help' for more information. ```. After this fix:. ```. C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root. hadd Target file: hsimple.root. hadd compression setting for all output: 1. hadd Source file 1: hsimple.1.root. hadd Source file 2: hsimple.2.root. hadd Source file 3: hsimple.3.root. hadd Target path: hsimple.root:/. ```. and. ```. C:\Users\bellenot\rootdev>root -l *.root. root [0]. Attaching file hsimple.1.root as _file0... (TFile *) 0x174a53a6c70. Attaching file hsimple.2.root as _file1... (TFile *) 0x17499413340. Attaching file hsimple.3.root as _file2... (TFile *) 0x174a5ecd910. root [3]. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9661
https://github.com/root-project/root/pull/9662:117,availability,cluster,cluster,117,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:160,availability,cluster,cluster,160,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:209,availability,cluster,cluster,209,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:240,availability,cluster,cluster,240,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:117,deployability,cluster,cluster,117,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:160,deployability,cluster,cluster,160,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:209,deployability,cluster,cluster,209,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:240,deployability,cluster,cluster,240,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:55,energy efficiency,Optim,Optimization,55,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:248,integrability,event,event,248,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:287,integrability,event,events,287,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:9,performance,Cach,Cache,9,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:55,performance,Optimiz,Optimization,55,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9662:316,performance,cach,cache,316,"[ntuple] Cache number of entries in RNTupleDescriptor; Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9662
https://github.com/root-project/root/pull/9663:239,availability,error,errors,239,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:239,performance,error,errors,239,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:458,reliability,doe,does,458,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:133,safety,test,tested,133,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:169,safety,test,test,169,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:239,safety,error,errors,239,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:497,safety,compl,complete,497,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:497,security,compl,complete,497,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:133,testability,test,tested,133,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:169,testability,test,test,169,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/pull/9663:239,usability,error,errors,239,"increase precision using kahan sum; # This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally . I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"". so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9663
https://github.com/root-project/root/issues/9664:137,deployability,patch,patches,137,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:343,deployability,fail,fails,343,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:851,deployability,build,build,851,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1044,deployability,configurat,configuration,1044,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:840,integrability,configur,configure,840,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1044,integrability,configur,configuration,1044,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1061,interoperability,XML,XML,1061,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:840,modifiability,configur,configure,840,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1044,modifiability,configur,configuration,1044,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:343,reliability,fail,fails,343,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:137,safety,patch,patches,137,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:161,safety,test,test,161,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:874,safety,test,tests,874,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:137,security,patch,patches,137,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:840,security,configur,configure,840,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1044,security,configur,configuration,1044,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:20,testability,regress,regression,20,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:161,testability,test,test,161,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:874,testability,test,tests,874,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:940,testability,context,context,940,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:469,usability,behavi,behavior,469,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/issues/9664:1066,usability,indicat,indicates,1066,"[Cling] Interpreter regression 6.24/06 -> 6.25/02; - [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer . passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases. * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed. * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below). - Ensure you are using CMake >= 3.22.0. - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7. * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664
https://github.com/root-project/root/pull/9665:481,deployability,updat,update,481,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:881,deployability,updat,update,881,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:175,integrability,interfac,interface,175,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:704,integrability,coupl,couplings,704,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:868,integrability,interfac,interface,868,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:175,interoperability,interfac,interface,175,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:621,interoperability,format,formatting,621,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:868,interoperability,interfac,interface,868,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:175,modifiability,interfac,interface,175,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:704,modifiability,coupl,couplings,704,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:868,modifiability,interfac,interface,868,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:481,safety,updat,update,481,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:794,safety,avoid,avoid,794,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:881,safety,updat,update,881,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:943,safety,test,tested,943,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:481,security,updat,update,481,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:881,security,updat,update,881,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:704,testability,coupl,couplings,704,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9665:943,testability,test,tested,943,"[RF] add tutorials for RooLagrangianMorphFunc; Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also. add an example for the factory interface. The are some accompanying fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9665
https://github.com/root-project/root/pull/9666:35,availability,Operat,Operator,35,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:136,energy efficiency,model,models,136,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:106,modifiability,layer,layers,106,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:215,modifiability,Layer,Layers,215,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:260,safety,valid,valid,260,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:311,safety,Test,Tests,311,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:339,safety,test,tested,339,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:136,security,model,models,136,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:311,testability,Test,Tests,311,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:339,testability,test,tested,339,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:18,usability,support,support,18,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:74,usability,support,support,74,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:169,usability,Progress,Progress,169,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:185,usability,Support,Support,185,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:238,usability,Support,Support,238,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9666:275,usability,Support,Support,275,"[TMVA][SOFIE] Add support for Conv Operator in Keras parser; This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress. - [x] Support for Keras Convolution Layers(Conv2D) . - [x] Support for `padding=""valid""`. - [x] Support for `padding=""same""`. - [x] Tests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9666
https://github.com/root-project/root/pull/9669:141,safety,Avoid,Avoid,141,Fix several warnings in Windows compilation; 1. Remove no-longer existing warnings codes. 2. Copy sehmap.h used in dictionary generation. 3. Avoid warnings in `TQObject.h`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9669
https://github.com/root-project/root/issues/9670:586,availability,error,error,586,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:40,deployability,modul,modules,40,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:422,deployability,modul,modules,422,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:543,deployability,build,build-foo,543,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:568,deployability,modul,modulemap,568,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:593,deployability,modul,module,593,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:663,deployability,modul,module,663,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:808,deployability,modul,module,808,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:785,integrability,sub,submodule,785,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:617,interoperability,incompatib,incompatible,617,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:40,modifiability,modul,modules,40,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:422,modifiability,modul,modules,422,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:568,modifiability,modul,modulemap,568,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:593,modifiability,modul,module,593,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:663,modifiability,modul,module,663,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:808,modifiability,modul,module,808,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:586,performance,error,error,586,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:40,safety,modul,modules,40,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:422,safety,modul,modules,422,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:568,safety,modul,modulemap,568,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:586,safety,error,error,586,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:593,safety,modul,module,593,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:663,safety,modul,module,663,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:808,safety,modul,module,808,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/issues/9670:586,usability,error,error,586,"Cannot import <filesystem> with runtime modules; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. With runtime modules, `<filesystem>` can't be included:. ```. $ root -l. root [0] #include <filesystem>. /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'. module ""codecvt"" {. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <codecvt>. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9670
https://github.com/root-project/root/pull/9671:84,deployability,build,build,84,Remove the source dir from compiler flags on Windows; Remove `-I${CMAKE_SOURCE_DIR}/build/win` from `ROOT_CXX_FLAGS`. To be merged after #9669.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9671
https://github.com/root-project/root/issues/9672:532,availability,error,error,532,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:733,availability,echo,echo,733,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:418,deployability,modul,modules,418,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:769,deployability,modul,modules,769,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:418,modifiability,modul,modules,418,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:769,modifiability,modul,modules,769,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:532,performance,error,error,532,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:418,safety,modul,modules,418,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:532,safety,error,error,532,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:769,safety,modul,modules,769,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:532,usability,error,error,532,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/issues/9672:739,usability,statu,status,739,"Crash when value-printing `path` objects; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```. $ root -l. root [0] #include <filesystem>. root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");. root [2] std::cout << p << '\n';. ""/some/path/foo.cpp"". root [3] p. /tmp echo $status. 11. ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9672
https://github.com/root-project/root/pull/9673:86,usability,document,document,86,Typos and params declaration (doxygen); - Some classes data member where not properly document (doxygen). - many typos.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9673
https://github.com/root-project/root/pull/9674:123,availability,error,errors,123,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:136,deployability,updat,update,136,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:123,performance,error,errors,123,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:123,safety,error,errors,123,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:136,safety,updat,update,136,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:136,security,updat,update,136,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:32,usability,document,documentation,32,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:123,usability,error,errors,123,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:172,usability,clear,clearly,172,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:189,usability,help,help,189,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9674:206,usability,document,documentation,206,"Fix compilation, improve Oracle documentation; After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9674
https://github.com/root-project/root/pull/9677:17,deployability,build,build,17,Backport windows build fixes to 6.26 branch; * copy `sehmap.h` file into build directory. * remove no longer existing warnings codes. * exclude source directory from exported cxx flags,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9677
https://github.com/root-project/root/pull/9677:73,deployability,build,build,73,Backport windows build fixes to 6.26 branch; * copy `sehmap.h` file into build directory. * remove no longer existing warnings codes. * exclude source directory from exported cxx flags,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9677
https://github.com/root-project/root/pull/9678:109,availability,error,errors,109,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:244,deployability,updat,updated,244,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:109,performance,error,errors,109,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:109,safety,error,errors,109,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:214,safety,test,tested,214,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:244,safety,updat,updated,244,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:244,security,updat,updated,244,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:214,testability,test,tested,214,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:11,usability,document,documentation,11,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:95,usability,document,documentation,95,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9678:109,usability,error,errors,109,[tree] fix documentation doxygen warnings; # This Pull request:. ## Changes or fixes:. Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9678
https://github.com/root-project/root/pull/9679:33,deployability,patch,patches,33,Eve-7 Backport of #9643 to v6-26 patches branch; This is a backport of 9643.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9679
https://github.com/root-project/root/pull/9679:33,safety,patch,patches,33,Eve-7 Backport of #9643 to v6-26 patches branch; This is a backport of 9643.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9679
https://github.com/root-project/root/pull/9679:33,security,patch,patches,33,Eve-7 Backport of #9643 to v6-26 patches branch; This is a backport of 9643.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9679
https://github.com/root-project/root/pull/9680:694,deployability,updat,update,694,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1094,deployability,updat,update,1094,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:62,integrability,interfac,interface,62,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:254,integrability,messag,message,254,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:386,integrability,interfac,interface,386,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:917,integrability,coupl,couplings,917,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1081,integrability,interfac,interface,1081,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:62,interoperability,interfac,interface,62,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:254,interoperability,messag,message,254,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:386,interoperability,interfac,interface,386,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:834,interoperability,format,formatting,834,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1081,interoperability,interfac,interface,1081,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:62,modifiability,interfac,interface,62,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:386,modifiability,interfac,interface,386,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:917,modifiability,coupl,couplings,917,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1081,modifiability,interfac,interface,1081,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:144,performance,perform,performing,144,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:694,safety,updat,update,694,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1007,safety,avoid,avoid,1007,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1094,safety,updat,update,1094,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1156,safety,test,tested,1156,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:694,security,updat,update,694,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1094,security,updat,update,1094,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:917,testability,coupl,couplings,917,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:1156,testability,test,tested,1156,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:144,usability,perform,performing,144,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9680:266,usability,clarit,clarity,266,"[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface ; ## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). . Stating the PR message for clarity. The pull request add the tutorials for the lagrangian . morphing class and also add an example for the factory interface. The are some accompanying . fixes as listed below. Please take a look and let me know if this looks good ! ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate . the usage of the `RooLagrangianMorphFunc` class. - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new. options of `taylorexpand` and `lagrangianmorph`. . ## Changes or fixes:. - formatting of `tutorials/roofit/rf710_roopoly.py`. - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed . from `NP` to `NewPhysics` to avoid confusion with other abbreviations. - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,. Rahul.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9680
https://github.com/root-project/root/pull/9681:0,deployability,Updat,Update,0,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:368,deployability,patch,patches,368,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:0,safety,Updat,Update,0,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:178,safety,review,review,178,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:368,safety,patch,patches,368,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:0,security,Updat,Update,0,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:368,security,patch,patches,368,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9681:178,testability,review,review,178,"Update warning flag for bidi characters (6.26); Backport of #9532. -Wbidirectional= was RedHat's initial proposal that they also shipped. in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed. to -Wbidi-chars= which will appear in GCC 12 and was backported to the. next gcc-8.5.0-5.el8. See the mailing list thread at. https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031. for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9681
https://github.com/root-project/root/pull/9682:58,modifiability,variab,variables,58,Fix some windows warnings in gui/webgui classes; * unused variables. * mixing `int` and `bool` in comparison,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9682
https://github.com/root-project/root/pull/9683:36,modifiability,Refact,Refactor,36,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:36,performance,Refactor,Refactor,36,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:131,safety,Valid,Validated,131,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:131,security,Validat,Validated,131,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:5,usability,Support,Support,5,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:30,usability,tool,tool,30,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:72,usability,support,support,72,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9683:108,usability,user,user-defined,108,[RF] Support ShapeSys in JSON tool; Refactor ParamHistFunc treatment to support both MC stat (BB-lite). and user-defined ShapeSys. Validated on ATLAS VHbb workspace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9683
https://github.com/root-project/root/pull/9684:55,deployability,log,logic,55,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:468,deployability,patch,patch,468,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:372,performance,time,time,372,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:55,safety,log,logic,55,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:256,safety,avoid,avoids,256,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:468,safety,patch,patch,468,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:55,security,log,logic,55,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:126,security,hash,hash-map,126,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:350,security,sign,significantly,350,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:468,security,patch,patch,468,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:531,security,sign,significantly,531,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:55,testability,log,logic,55,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:495,usability,tool,tool,495,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9684:647,usability,workflow,workflows,647,"[RF] Include RooAbsData objects in the RooNameReg; The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList. for RooAbsData objects, as the namePtr mechanism allows to track. renaming and therefore avoids false negatives that result in. linear scans of the collection. In turn, this improves significantly the run-time of large workspace. imports (x2 to x4), which were dominated by embeddedData() calls. This patch is based on the JSON tool use-case, but presumably will. significantly also improve other heavy uses of workspace import, such. as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low. price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9684
https://github.com/root-project/root/pull/9685:238,availability,slo,slow,238,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:393,availability,slo,slow,393,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:560,availability,down,downlinks,560,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:446,deployability,log,logic,446,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:607,deployability,log,logical,607,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:669,deployability,log,logic,669,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:729,deployability,patch,patch,729,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:269,energy efficiency,CPU,CPU,269,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:521,interoperability,client-serv,client-server,521,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:269,performance,CPU,CPU,269,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:273,performance,time,time,273,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:238,reliability,slo,slow,238,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:393,reliability,slo,slow,393,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:12,safety,safe,safeDeleteList,12,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:102,safety,safe,safeDeleteList,102,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:446,safety,log,logic,446,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:607,safety,log,logical,607,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:654,safety,safe,safeDeleteList,654,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:669,safety,log,logic,669,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:707,safety,test,tests,707,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:729,safety,patch,patch,729,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:446,security,log,logic,446,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:607,security,log,logical,607,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:669,security,log,logic,669,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:729,security,patch,patch,729,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:446,testability,log,logic,446,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:607,testability,log,logical,607,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:669,testability,log,logic,669,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:707,testability,test,tests,707,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9685:311,usability,workflow,workflows,311,"[RF] Remove safeDeleteList functionality of RooAbsCollection; This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,. starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace. manipulation workflows, as it takes place at each workspace::import. call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all. ~RooAbsArg takes care of properly breaking all the client-server links,. both uplinks and downlinks, for every object. I couldn't find a logical. case where a crash would occur if the safeDeleteList logic were to be. removed. All RooFit tests pass after this patch. No problem for my heavy. workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9685
https://github.com/root-project/root/pull/9686:112,availability,error,errors,112,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:183,availability,error,error,183,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:65,deployability,configurat,configurations,65,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:65,integrability,configur,configurations,65,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:65,modifiability,configur,configurations,65,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:112,performance,error,errors,112,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:183,performance,error,error,183,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:112,safety,error,errors,112,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:183,safety,error,error,183,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:65,security,configur,configurations,65,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:112,usability,error,errors,112,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/pull/9686:183,usability,error,error,183,"Suppress windows warning 4596 in TVirtualStreamerInfo.h; On some configurations such warning causes compilation errors like:. ```. C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9686
https://github.com/root-project/root/issues/9687:400,availability,error,error,400,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1375,availability,avail,availability-new,1375,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1727,availability,error,error,1727,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1838,availability,Error,Error,1838,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1875,availability,Error,Error,1875,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:8,deployability,build,building,8,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:474,deployability,log,log,474,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:553,deployability,fail,failed,553,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:653,deployability,Build,Build,653,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:800,deployability,build,build,800,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:837,deployability,build,build,837,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:844,deployability,Build,Building,844,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:944,deployability,Toolchain,Toolchains,944,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1915,deployability,fail,fails,1915,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:62,integrability,configur,configuring,62,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:322,integrability,configur,configuring,322,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:2027,integrability,configur,configuring,2027,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1222,interoperability,convers,conversion,1222,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1468,interoperability,Platform,Platforms,1468,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1485,interoperability,platform,platform,1485,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:62,modifiability,configur,configuring,62,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:322,modifiability,configur,configuring,322,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:2027,modifiability,configur,configuring,2027,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:400,performance,error,error,400,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:492,performance,Perform,Performing,492,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:739,performance,Content,Contents,739,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:925,performance,Content,Contents,925,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1449,performance,Content,Contents,1449,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1727,performance,error,error,1727,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1838,performance,Error,Error,1838,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1875,performance,Error,Error,1875,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:154,reliability,doe,does,154,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:553,reliability,fail,failed,553,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1375,reliability,availab,availability-new,1375,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1753,reliability,doe,does,1753,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1915,reliability,fail,fails,1915,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:400,safety,error,error,400,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:474,safety,log,log,474,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:519,safety,Test,Test,519,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1375,safety,avail,availability-new,1375,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1727,safety,error,error,1727,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1838,safety,Error,Error,1838,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1875,safety,Error,Error,1875,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:62,security,configur,configuring,62,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:322,security,configur,configuring,322,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:474,security,log,log,474,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1375,security,availab,availability-new,1375,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:2027,security,configur,configuring,2027,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:474,testability,log,log,474,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:519,testability,Test,Test,519,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:400,usability,error,error,400,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:492,usability,Perform,Performing,492,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:601,usability,User,Users,601,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:659,usability,Command,Command,659,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:944,usability,Tool,Toolchains,944,"Problem building ROOT on new Apple M1 Max with -Dall=On; When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1664,usability,User,Users,1664,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1727,usability,error,error,1727,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1762,usability,support,support,1762,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1838,usability,Error,Error,1838,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/issues/9687:1875,usability,Error,Error,1875,"2.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`. By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang. When configuring:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```. Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:. Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build. Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx. clang: error: the clang compiler does not support '-march=native'. make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1. make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```. cmake ../root -Dall=On -Dbuiltin_glew=On. ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9687
https://github.com/root-project/root/pull/9688:42,availability,cluster,cluster,42,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:241,availability,cluster,clusters,241,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:265,availability,cluster,cluster,265,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:511,availability,cluster,cluster,511,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:648,availability,cluster,cluster,648,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:817,availability,cluster,cluster,817,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:42,deployability,cluster,cluster,42,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:241,deployability,cluster,clusters,241,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:265,deployability,cluster,cluster,265,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:511,deployability,cluster,cluster,511,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:648,deployability,cluster,cluster,648,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:792,deployability,automat,automatically,792,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:817,deployability,cluster,cluster,817,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:683,energy efficiency,current,currently,683,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:703,integrability,event,event,703,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:729,integrability,sub,subject,729,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:73,modifiability,paramet,parameter,73,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:598,performance,memor,memory,598,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:613,performance,time,time,613,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:792,testability,automat,automatically,792,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:13,usability,support,support,13,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9688:598,usability,memor,memory,598,"[ntuple] Add support for writing multiple cluster groups; Adds a boolean parameter to `RNTupleWriter::Commit(bool commitClusterGroup)` that, if set to `true`, writes a new page list envelope with page locations corresponding to the bunch of clusters since the last cluster group commit. This allows to split the page location meta-data into several blocks during writing. Along the way, this PR also factors out some duplicated code in the page sink implementations (file, daos). The goal is to make use of the cluster groups during _reading_, such that not all of the page locations need to be in memory all the time but only the locations of the cluster group corresponding to the currently processed event range. This will be subject to a follow-up PR. Another PR should also take care of automatically committing cluster groups when a reasonable amount of page location meta-data has been accumulated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9688
https://github.com/root-project/root/pull/9690:72,deployability,manag,management,72,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:394,deployability,releas,release,394,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:72,energy efficiency,manag,management,72,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:161,energy efficiency,alloc,allocation,161,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:502,integrability,messag,messages,502,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:502,interoperability,messag,messages,502,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:9,performance,memor,memory,9,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:65,performance,memor,memory,65,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:106,performance,memor,memory,106,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:154,performance,memor,memory,154,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:38,safety,compl,completely,38,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:49,safety,avoid,avoiding,49,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:72,safety,manag,management,72,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:421,safety,avoid,avoid,421,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:38,security,compl,completely,38,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:9,usability,memor,memory,9,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:65,usability,memor,memory,65,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:106,usability,memor,memory,106,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9690:154,usability,memor,memory,154,"[RF] Fix memory leaks in RooFitHS3 by completely avoiding manual memory management; This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9690
https://github.com/root-project/root/pull/9691:168,integrability,event,eventually,168,"[cling] Fix AutoSynthesizer on CXXTryStmt; This was an oversight in commit 34590aeef4: After fixing the handler blocks, the code needs to create new `CXXCatchStmt`s to eventually construct the `CXXTryStmt`. Fixes #9664",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9691
https://github.com/root-project/root/pull/9693:0,interoperability,Format,Formatting,0,Formatting [skip-ci]; - Remove tabs. - typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9693
https://github.com/root-project/root/pull/9694:7,deployability,upgrad,upgrade,7,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9694:96,integrability,repositor,repository,96,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9694:96,interoperability,repositor,repository,96,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9694:7,modifiability,upgrad,upgrade,7,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9694:161,security,SSL,SSL,161,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9694:150,usability,support,support,150,[http] upgrade civetweb from 1.12 to 1.15; See [civetweb](https://github.com/civetweb/civetweb) repository for list of new features. Can be important support of SSL 3.0 library,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9694
https://github.com/root-project/root/pull/9695:117,availability,redund,redundant,117,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:680,availability,mask,masked,680,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:759,availability,mask,mask,759,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:117,deployability,redundan,redundant,117,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:595,integrability,Filter,FilteringDiagConsumer,595,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:861,integrability,interfac,interface,861,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:784,interoperability,specif,specified,784,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:861,interoperability,interfac,interface,861,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:338,modifiability,exten,extended,338,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:627,modifiability,exten,extended,627,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:861,modifiability,interfac,interface,861,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:117,reliability,redundan,redundant,117,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:656,reliability,diagno,diagnostics,656,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:747,reliability,diagno,diagnostics,747,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:52,safety,input,input,52,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:117,safety,redund,redundant,117,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:199,safety,except,except,199,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:206,safety,input,input,206,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:266,safety,input,input,266,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:916,safety,except,except,916,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:970,safety,test,tested,970,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:656,testability,diagno,diagnostics,656,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:747,testability,diagno,diagnostics,747,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:970,testability,test,tested,970,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:52,usability,input,input,52,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:206,usability,input,input,206,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9695:266,usability,input,input,266,"[cling] Only enable `-Wredundant-parens` for prompt input (fixes SPI-2064) ; This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:. - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag. - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`. - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9695
https://github.com/root-project/root/pull/9696:56,safety,input,input,56,"[cling,v6-26] Only enable -Wredundant-parens for prompt input (fixes SPI-2064); This pull-request is a backport of #9695 (see details there). This PR fixes SPI-2064.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9696
https://github.com/root-project/root/pull/9696:56,usability,input,input,56,"[cling,v6-26] Only enable -Wredundant-parens for prompt input (fixes SPI-2064); This pull-request is a backport of #9695 (see details there). This PR fixes SPI-2064.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9696
https://github.com/root-project/root/issues/9697:70,availability,Error,Error,70,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:86,availability,Error,Error,86,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:104,energy efficiency,Load,LoadPCM,104,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:227,energy efficiency,load,loaded,227,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:501,energy efficiency,Load,Load,501,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:76,integrability,messag,message,76,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:76,interoperability,messag,message,76,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:70,performance,Error,Error,70,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:86,performance,Error,Error,86,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:104,performance,Load,LoadPCM,104,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:227,performance,load,loaded,227,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:501,performance,Load,Load,501,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:173,reliability,doe,does,173,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:70,safety,Error,Error,70,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:86,safety,Error,Error,86,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:70,usability,Error,Error,70,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:86,usability,Error,Error,86,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/issues/9697:355,usability,behavi,behavior,355,"PCM file not found; [x] Checked for duplicates. ### Describe the bug. Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior. ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce. Load a dynamic library with . `gROOT->ProcessLine("".L path_to_library.dylib"")`. or equivalent. ### Setup. 1. ROOT 6.27/01. 2. macOS 11.4. 3. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9697
https://github.com/root-project/root/pull/9698:257,availability,operat,operation,257,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:319,deployability,updat,updated,319,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:289,safety,test,tested,289,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:319,safety,updat,updated,319,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:195,security,sign,signature,195,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:319,security,updat,updated,319,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9698:289,testability,test,tested,289,TChain:: add AddFilelist (AddFile loop over a filelist); # This Pull request:. ## Changes or fixes:. Add TChain::AddFilelist which will call AddFile for each member in filelist. It hase the same signature of AddFile and will return the sum of each AddFile. operation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary) .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9698
https://github.com/root-project/root/pull/9699:5,safety,Avoid,Avoid,5,"[DF] Avoid duplicates in list of columns returned by GetColumnNames; The same column name can appear as a Redefine'd column and as the. original column in the data source. This fixes the ""repeated column names"" part of #9240.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9699
https://github.com/root-project/root/pull/9700:361,performance,time,time,361,"[RF][PyROOT] Correctly transfer properties from python mirror classes; Unlike instance methods, a `property` object in Python 2 has no. `__func__` attribute and can be reassigned to a new class directly. This fixes a bug introduced by https://github.com/root-project/root/pull/8784, where `property` objects in the Python mirror classes were used for the first time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9700
https://github.com/root-project/root/pull/9701:9,safety,Avoid,Avoid,9,"[netxng] Avoid XRootD warnings in generated source [v6.26]; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. (cherry picked from commit ba967d99356de37949833c97935cea9a66ba9b77). Backport of PR #9582",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9701
https://github.com/root-project/root/pull/9702:111,deployability,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:163,deployability,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:189,performance,deadlock,deadlock,189,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:111,safety,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:163,safety,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:111,security,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9702:163,security,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.26); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible. Backported from future PR to master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9702
https://github.com/root-project/root/pull/9703:111,deployability,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:163,deployability,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:189,performance,deadlock,deadlock,189,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:111,safety,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:163,safety,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:111,security,Updat,Update,111,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9703:163,security,updat,update,163,"[webgui6] do not call blocking methods from ProcessData (6.24); If during processing of incoming data TCanvas::Update() invoked,. do not block caller until actual update is done. Otherwise deadlock is. possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9703
https://github.com/root-project/root/pull/9704:142,deployability,updat,updated,142,[cling] Only add NullPtrChk if enabled (6-26); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9704
https://github.com/root-project/root/pull/9704:112,safety,test,tested,112,[cling] Only add NullPtrChk if enabled (6-26); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9704
https://github.com/root-project/root/pull/9704:142,safety,updat,updated,142,[cling] Only add NullPtrChk if enabled (6-26); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9704
https://github.com/root-project/root/pull/9704:142,security,updat,updated,142,[cling] Only add NullPtrChk if enabled (6-26); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9704
https://github.com/root-project/root/pull/9704:112,testability,test,tested,112,[cling] Only add NullPtrChk if enabled (6-26); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9704
https://github.com/root-project/root/pull/9705:238,availability,sli,slight,238,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:80,deployability,automat,automatically,80,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:255,deployability,API,API,255,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:57,integrability,configur,configured,57,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:151,integrability,event,events,151,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:255,integrability,API,API,255,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:255,interoperability,API,API,255,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:57,modifiability,configur,configured,57,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:238,reliability,sli,slight,238,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:57,security,configur,configured,57,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:191,security,sign,signal,191,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:80,testability,automat,automatically,80,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:10,usability,support,support,10,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9705:69,usability,tool,tooltip,69,"[webgui6] support HighlightConnect with TWebCanvas; When configured, tooltip is automatically enabled on web canvas. And client delivers correspondent events, which are used to invoke canvas signal. Require some adjustment in examples or slight change in API that `TH1::SetHighlight()` works also without painter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9705
https://github.com/root-project/root/pull/9706:170,deployability,contain,containing,170,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:291,deployability,patch,patch,291,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:164,safety,input,input,164,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:291,safety,patch,patch,291,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:455,safety,test,tested,455,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:291,security,patch,patch,291,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:455,testability,test,tested,455,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:164,usability,input,input,164,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9706:426,usability,close,closed,426,"[cling] Revert ""[cling] Enable `-Wredundant-parens`""; This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code. The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:. - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9706
https://github.com/root-project/root/pull/9710:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9710:166,deployability,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9710:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9710:166,safety,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9710:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9710:166,security,patch,patches,166,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 3; This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456. 2. https://github.com/root-project/root/pull/9640. 3. https://github.com/root-project/root/pull/9482. 4. https://github.com/root-project/root/pull/9690. 5. https://github.com/root-project/root/pull/9700. 6. https://github.com/root-project/root/pull/9680. 7. https://github.com/root-project/root/pull/9685. 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9710
https://github.com/root-project/root/pull/9711:51,usability,Prefer,Prefer,51,[DF] Make internal naming convention more uniform; Prefer calling the previous nodes of in the computation graph and. their types fPrevNode/PrevNode instead of fPrevData and PrevDataFrame.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9711
https://github.com/root-project/root/pull/9713:85,deployability,Updat,Update,85,[webgui6] provide async mode for TWebCanvas (6.26); Fully avoid blocking in TCanvas::Update(). Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9713
https://github.com/root-project/root/pull/9713:58,safety,avoid,avoid,58,[webgui6] provide async mode for TWebCanvas (6.26); Fully avoid blocking in TCanvas::Update(). Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9713
https://github.com/root-project/root/pull/9713:85,safety,Updat,Update,85,[webgui6] provide async mode for TWebCanvas (6.26); Fully avoid blocking in TCanvas::Update(). Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9713
https://github.com/root-project/root/pull/9713:85,security,Updat,Update,85,[webgui6] provide async mode for TWebCanvas (6.26); Fully avoid blocking in TCanvas::Update(). Only for expert use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9713
https://github.com/root-project/root/pull/9714:180,availability,state,state,180,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:98,energy efficiency,draw,draw,98,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:180,integrability,state,state,180,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:190,integrability,configur,configure,190,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:190,modifiability,configur,configure,190,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:117,performance,time,time,117,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:168,safety,detect,detect,168,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:213,safety,avoid,avoid,213,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:168,security,detect,detect,168,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9714:190,security,configur,configure,190,"Adjust tutorials with `TCanvas::HighlightConnect`; Call `TCanvas::HighlightConnect` before canvas draw for the first time. This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order. Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9714
https://github.com/root-project/root/pull/9715:152,deployability,releas,release,152,"[relnotes][skip-ci] Add information on RooLagrangianMorphFunc; ## This Pull request:. Hi @guitargeek , this PR adds the `RooLagrangianMorphFunc` to the release note as noted by you [here](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v626/index.md#creating-roofit-datasets-from-rdataframe). . Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9715
https://github.com/root-project/root/pull/9715:244,deployability,Releas,ReleaseNotes,244,"[relnotes][skip-ci] Add information on RooLagrangianMorphFunc; ## This Pull request:. Hi @guitargeek , this PR adds the `RooLagrangianMorphFunc` to the release note as noted by you [here](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v626/index.md#creating-roofit-datasets-from-rdataframe). . Cheers,. Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9715
https://github.com/root-project/root/pull/9716:31,interoperability,format,formatting,31,[RF][skip-ci] HistFactory code formatting; - remove tab. - spell check. - doxygen comments,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9716
https://github.com/root-project/root/pull/9717:1294,deployability,updat,updated,1294,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:104,energy efficiency,load,loads,104,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:640,energy efficiency,load,loaded,640,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:739,energy efficiency,load,loadFromFileResidentFolder,739,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:868,energy efficiency,load,loading,868,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1161,energy efficiency,reduc,reduced,1161,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:839,modifiability,refact,refactoring,839,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:13,performance,memor,memory,13,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:104,performance,load,loads,104,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:288,performance,memor,memory,288,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:640,performance,load,loaded,640,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:739,performance,load,loadFromFileResidentFolder,739,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:839,performance,refactor,refactoring,839,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:868,performance,load,loading,868,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:940,performance,perform,performed,940,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1043,performance,memor,memory,1043,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:114,safety,input,input,114,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:282,safety,avoid,avoid,282,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1035,safety,prevent,prevent,1035,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1106,safety,test,tested,1106,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1178,safety,test,testing,1178,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1193,safety,test,test,1193,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1294,safety,updat,updated,1294,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1035,security,preven,prevent,1035,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1063,security,access,access,1063,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1294,security,updat,updated,1294,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1347,security,access,accessible,1347,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1106,testability,test,tested,1106,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1178,testability,test,testing,1178,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1193,testability,test,test,1193,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:13,usability,memor,memory,13,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:114,usability,input,input,114,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:288,usability,memor,memory,288,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:509,usability,help,helper,509,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:940,usability,perform,performed,940,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1043,usability,memor,memory,1043,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1131,usability,confirm,confirmed,1131,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1342,usability,user,user-accessible,1342,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9717:1379,usability,document,documentation,1379,"[RF] Address memory leaks in RooLagrangianMorphFunc; # This Pull request:. The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. . This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:. - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up . - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes. - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9717
https://github.com/root-project/root/pull/9718:248,modifiability,paramet,parameter,248,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:41,usability,minim,minimizer,41,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:105,usability,minim,minimizer,105,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:129,usability,Minim,Minimizer,129,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:191,usability,Minim,MinimizerOptions,191,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:273,usability,Minim,Minimizer,273,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:350,usability,Minim,MinimizerOptions,350,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:428,usability,Minim,MinimizerOptions,428,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:544,usability,minim,minimizer,544,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9718:595,usability,Minim,MinimizerOptions,595,"[Math] Fix a bug in creating the Default minimizer options ; Fix a bug when creating and setting default minimizer options for a Minimizer. The bug was when using the function . `ROOT::Math::MinimizerOptions::Default`. These code , to increase the parameter ""Steps"" of the Minimizer Genetic, before was causing a crash. ```. auto & opt = ROOT::Math::MinimizerOptions::Default(""Genetic""). opt.SetValue(""Steps"",1000). ROOT::Math::MinimizerOptions::PrintDefault(""Genetic""). ```. The PR also add the possibility to print all default options for ll minimizer. Now this can be done:. ```. ROOT::Math::MinimizerOptions::PrintDefault(). ```. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9718
https://github.com/root-project/root/pull/9720:171,deployability,manag,management,171,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:171,energy efficiency,manag,management,171,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:23,performance,memor,memory-safe,23,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:164,performance,memor,memory,164,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:30,safety,safe,safe,30,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:171,safety,manag,management,171,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:214,testability,simpl,simplified,214,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:23,usability,memor,memory-safe,23,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:164,usability,memor,memory,164,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9720:214,usability,simpl,simplified,214,"[RF] Add overloads for memory-safe `RooAbsCollection::addOwned` and `RooAbsArg::addOwnedComponents`; More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9720
https://github.com/root-project/root/pull/9721:66,availability,error,errors,66,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:183,availability,error,error,183,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:386,availability,Error,ErrorType,386,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:66,performance,error,errors,66,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:183,performance,error,error,183,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:386,performance,Error,ErrorType,386,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:44,safety,avoid,avoid,44,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:66,safety,error,errors,66,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:183,safety,error,error,183,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:386,safety,Error,ErrorType,386,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:583,safety,avoid,avoid,583,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:248,security,obfusc,obfuscating,248,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:66,usability,error,errors,66,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:183,usability,error,error,183,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9721:386,usability,Error,ErrorType,386,"[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors; In Python 3, you can't do this because `None` is special:. ```Python. DataError=ROOT.RooAbsArg.None # syntax error! ```. The tutorials used some workarounds that were either obfuscating `None`. by using the enum value directly, or used the more verbose `getattr`. approach:. ```Python. DataError=ROOT.RooAbsData.ErrorType(2). DataError=getattr(ROOT.RooAbsData, ""None""). ```. This commit pythonizes DataError with the usual string-to-enum. pythonization pattern already used for `LineColor` or `LineStyle` to. avoid this uglieness. One can do now:. ```Python. DataError=""None"". DataError=None. ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9721
https://github.com/root-project/root/pull/9722:98,deployability,contain,contain,98,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:484,deployability,updat,updated,484,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:412,energy efficiency,adapt,adapted,412,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:412,integrability,adapt,adapted,412,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:412,interoperability,adapt,adapted,412,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:412,modifiability,adapt,adapted,412,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:144,safety,test,test,144,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:406,safety,Test,Tests,406,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:454,safety,test,tested,454,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:484,safety,updat,updated,484,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:484,security,updat,updated,484,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:144,testability,test,test,144,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:406,testability,Test,Tests,406,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:454,testability,test,tested,454,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:207,usability,custom,custom,207,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:331,usability,clear,clearly,331,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:339,usability,indicat,indicated,339,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:384,usability,clear,clearly,384,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9722:392,usability,indicat,indicated,392,"[DF] Improve SaveGraph. Apply suggestions from #9556; # This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);. * Label nodes now use html, allowing for more custom fonts;. * Colors of different element types were changed to be easier to. distinguish;. * Empty RLoopManager is more clearly indicated;. * Actions which has run are more clearly indicated;. * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9722
https://github.com/root-project/root/pull/9723:321,deployability,version,versions,321,"[RF] Small fixes for RooLagrangianMorphFunc tutorials; # This Pull request:. Hi @guitargeek, the x-tick label in [rf712](https://root.cern.ch/doc/master/rf712__lagrangianmorphfit_8C.html) tutorial is in a wrong inverted order and the tick labels can be made a bit bigger. This has been addressed in this PR. . The python versions of two recent tutorials [rf710](https://root.cern.ch/doc/master/rf710__roopoly_8py.html), [rf711](https://root.cern.ch/doc/master/rf711__lagrangianmorph_8py.html) are missing the relevant doxygen tags needed to display the images and this has been added. . ## Changes or fixes:. - [x] Correct order for xtick labels in `rf712`. - [x] Correct size for tick labels in `rf712`. - [x] add missing doxygen tags for `rf711` and `rf710`. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9723
https://github.com/root-project/root/pull/9723:321,integrability,version,versions,321,"[RF] Small fixes for RooLagrangianMorphFunc tutorials; # This Pull request:. Hi @guitargeek, the x-tick label in [rf712](https://root.cern.ch/doc/master/rf712__lagrangianmorphfit_8C.html) tutorial is in a wrong inverted order and the tick labels can be made a bit bigger. This has been addressed in this PR. . The python versions of two recent tutorials [rf710](https://root.cern.ch/doc/master/rf710__roopoly_8py.html), [rf711](https://root.cern.ch/doc/master/rf711__lagrangianmorph_8py.html) are missing the relevant doxygen tags needed to display the images and this has been added. . ## Changes or fixes:. - [x] Correct order for xtick labels in `rf712`. - [x] Correct size for tick labels in `rf712`. - [x] add missing doxygen tags for `rf711` and `rf710`. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9723
https://github.com/root-project/root/pull/9723:321,modifiability,version,versions,321,"[RF] Small fixes for RooLagrangianMorphFunc tutorials; # This Pull request:. Hi @guitargeek, the x-tick label in [rf712](https://root.cern.ch/doc/master/rf712__lagrangianmorphfit_8C.html) tutorial is in a wrong inverted order and the tick labels can be made a bit bigger. This has been addressed in this PR. . The python versions of two recent tutorials [rf710](https://root.cern.ch/doc/master/rf710__roopoly_8py.html), [rf711](https://root.cern.ch/doc/master/rf711__lagrangianmorph_8py.html) are missing the relevant doxygen tags needed to display the images and this has been added. . ## Changes or fixes:. - [x] Correct order for xtick labels in `rf712`. - [x] Correct size for tick labels in `rf712`. - [x] add missing doxygen tags for `rf711` and `rf710`. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9723
https://github.com/root-project/root/pull/9723:782,safety,test,tested,782,"[RF] Small fixes for RooLagrangianMorphFunc tutorials; # This Pull request:. Hi @guitargeek, the x-tick label in [rf712](https://root.cern.ch/doc/master/rf712__lagrangianmorphfit_8C.html) tutorial is in a wrong inverted order and the tick labels can be made a bit bigger. This has been addressed in this PR. . The python versions of two recent tutorials [rf710](https://root.cern.ch/doc/master/rf710__roopoly_8py.html), [rf711](https://root.cern.ch/doc/master/rf711__lagrangianmorph_8py.html) are missing the relevant doxygen tags needed to display the images and this has been added. . ## Changes or fixes:. - [x] Correct order for xtick labels in `rf712`. - [x] Correct size for tick labels in `rf712`. - [x] add missing doxygen tags for `rf711` and `rf710`. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9723
https://github.com/root-project/root/pull/9723:782,testability,test,tested,782,"[RF] Small fixes for RooLagrangianMorphFunc tutorials; # This Pull request:. Hi @guitargeek, the x-tick label in [rf712](https://root.cern.ch/doc/master/rf712__lagrangianmorphfit_8C.html) tutorial is in a wrong inverted order and the tick labels can be made a bit bigger. This has been addressed in this PR. . The python versions of two recent tutorials [rf710](https://root.cern.ch/doc/master/rf710__roopoly_8py.html), [rf711](https://root.cern.ch/doc/master/rf711__lagrangianmorph_8py.html) are missing the relevant doxygen tags needed to display the images and this has been added. . ## Changes or fixes:. - [x] Correct order for xtick labels in `rf712`. - [x] Correct size for tick labels in `rf712`. - [x] add missing doxygen tags for `rf711` and `rf710`. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9723
https://github.com/root-project/root/pull/9725:637,availability,servic,services,637,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:357,deployability,version,versioned,357,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:577,deployability,version,version,577,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:637,deployability,servic,services,637,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:44,energy efficiency,load,load,44,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:158,energy efficiency,load,loading,158,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:313,energy efficiency,load,load,313,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:463,energy efficiency,load,loading,463,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:357,integrability,version,versioned,357,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:577,integrability,version,version,577,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:637,integrability,servic,services,637,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:357,modifiability,version,versioned,357,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:577,modifiability,version,version,577,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:637,modifiability,servic,services,637,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:44,performance,load,load,44,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:158,performance,load,loading,158,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:313,performance,load,load,313,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:463,performance,load,loading,463,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9725:194,reliability,doe,does,194,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…; …h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is. not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9725
https://github.com/root-project/root/pull/9727:35,interoperability,format,formatting,35,[RF][skip-ci] RooBatchCompute code formatting ; - spell check. - doxygen formatting.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9727
https://github.com/root-project/root/pull/9727:73,interoperability,format,formatting,73,[RF][skip-ci] RooBatchCompute code formatting ; - spell check. - doxygen formatting.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9727
https://github.com/root-project/root/pull/9728:307,deployability,updat,updated,307,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:122,integrability,interfac,interface,122,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:122,interoperability,interfac,interface,122,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:71,modifiability,refact,refactors,71,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:122,modifiability,interfac,interface,122,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:15,performance,perform,performance,15,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:71,performance,refactor,refactors,71,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:141,performance,performance issu,performance issues,141,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:135,safety,avoid,avoid,135,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:277,safety,test,tested,277,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:307,safety,updat,updated,307,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:307,security,updat,updated,307,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:277,testability,test,tested,277,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:15,usability,perform,performance,15,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9728:141,usability,perform,performance,141,[RF] RooFitHS3 performance improvements; # This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9728
https://github.com/root-project/root/pull/9729:26,availability,error,error,26,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:97,availability,error,error,97,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:61,deployability,fail,fails,61,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:141,deployability,fail,fails,141,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:32,integrability,messag,message,32,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:103,integrability,messag,message,103,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:153,integrability,inject,injected,153,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:32,interoperability,messag,message,32,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:103,interoperability,messag,message,103,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:26,performance,error,error,26,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:97,performance,error,error,97,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:61,reliability,fail,fails,61,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:141,reliability,fail,fails,141,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:26,safety,error,error,26,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:97,safety,error,error,97,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:153,security,inject,injected,153,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:26,usability,error,error,26,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:45,usability,user,user,45,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/pull/9729:97,usability,error,error,97,[PyROOT] Print meaningful error message when user pythonizor fails; This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9729
https://github.com/root-project/root/issues/9730:479,deployability,fail,fails,479,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:579,deployability,log,logic,579,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:430,energy efficiency,core,core,430,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:542,energy efficiency,current,currently,542,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:705,energy efficiency,core,core,705,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:242,interoperability,platform,platform,242,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:479,reliability,fail,fails,479,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:503,reliability,doe,does,503,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:579,safety,log,logic,579,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:579,security,log,logic,579,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/issues/9730:579,testability,log,logic,579,"When working on a Windows partition from Linux, rootcling is not able to rename an output file; See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9730
https://github.com/root-project/root/pull/9731:218,deployability,fail,failing,218,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:208,energy efficiency,current,currently,208,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:5,interoperability,Compatib,Compatibility,5,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:268,interoperability,compatib,compatibility,268,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:218,reliability,fail,failing,218,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:42,safety,except,exceptions,42,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:82,safety,except,exceptions,82,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:198,safety,test,tests,198,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:250,safety,except,exceptions,250,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:183,testability,context,context,183,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9731:198,testability,test,tests,198,"[DF] Compatibility in RDataSource without exceptions; As ROOT cannot catch JITted exceptions on Apple Silicon (see the bug report https://github.com/root-project/root/issues/7541 for context), some tests are currently failing there due to the use of exceptions in the compatibility code for `RDataSource`. Implement this with a boolean flag and a pattern inspired by `errno`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9731
https://github.com/root-project/root/pull/9732:32,usability,close,closed,32,"Make sure the temporary file is closed before renaming it. Fixes #9730; As reported [on the forun](https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580), make sure the temporary file is closed before renaming it. Should fix #9730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9732
https://github.com/root-project/root/pull/9732:210,usability,close,closed,210,"Make sure the temporary file is closed before renaming it. Fixes #9730; As reported [on the forun](https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580), make sure the temporary file is closed before renaming it. Should fix #9730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9732
https://github.com/root-project/root/pull/9733:355,availability,error,error,355,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:922,availability,error,error,922,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:17,deployability,updat,update,17,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:196,deployability,updat,updating,196,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:418,deployability,contain,contains,418,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:536,deployability,fail,fails,536,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1610,deployability,contain,contains,1610,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1857,deployability,updat,updated,1857,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:2001,deployability,continu,continuation,2001,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:289,interoperability,Specif,Specifically,289,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:344,modifiability,paramet,parameter,344,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:936,modifiability,paramet,parameter,936,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:355,performance,error,error,355,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:527,performance,time,time,527,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:922,performance,error,error,922,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:536,reliability,fail,fails,536,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:17,safety,updat,update,17,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:52,safety,input,input,52,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:196,safety,updat,updating,196,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:239,safety,input,input,239,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:355,safety,error,error,355,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:387,safety,input,input,387,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:612,safety,input,input,612,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:890,safety,input,input,890,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:922,safety,error,error,922,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:992,safety,compl,complete,992,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1001,safety,input,input,1001,"nt] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1090,safety,input,input,1090,"Line()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1107,safety,Input,InputValidator,1107,"quest fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1455,safety,Input,InputValidator,1455,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1571,safety,input,input,1571,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1857,safety,updat,updated,1857,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1966,safety,input,input,1966,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:2043,safety,test,tested,2043,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:17,security,updat,update,17,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:196,security,updat,updating,196,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:992,security,compl,complete,992,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1684,security,token,token,1684,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1857,security,updat,updated,1857,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:2043,testability,test,tested,2043,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:52,usability,input,input,52,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:239,usability,input,input,239,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:355,usability,error,error,355,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:387,usability,input,input,387,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:612,usability,input,input,612,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:761,usability,cancel,cancel,761,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:890,usability,input,input,890,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:922,usability,error,error,922,"[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1001,usability,input,input,1001,"nt] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1090,usability,input,input,1090,"Line()`; This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1107,usability,Input,InputValidator,1107,"quest fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1210,usability,cancel,cancel,1210,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1249,usability,behavi,behavior,1249,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1375,usability,cancel,cancel,1375,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1455,usability,Input,InputValidator,1455,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1571,usability,input,input,1571,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9733:1966,usability,input,input,1966,"T-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:. ```c++. $ root -l -b. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""). (long) 0. root [1] 12. root (cont'ed, cancel with .@) [2].@. root [3] .q. ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:. ```c++. root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");. root (cont'ed, cancel with .@) [0]);. the inner is printing. ```. ## Changes or fixes:. - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`). - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly). - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9733
https://github.com/root-project/root/pull/9734:193,deployability,updat,updated,193,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:163,safety,test,tested,163,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:193,safety,updat,updated,193,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:193,security,updat,updated,193,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:163,testability,test,tested,163,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:15,usability,document,documentation,15,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9734:97,usability,document,documentation,97,[RF] RooFitHS3 documentation and fix clang compiler warnings; # This Pull request:. This PR adds documentation for the new RooFitHS3 library. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9734
https://github.com/root-project/root/pull/9735:79,deployability,observ,observed,79,"[Math] Disable a warning when compiling unuran code on Fedora; The warning was observed on fedora32 with gcc 10.3.1. Warning:. ```. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. ```. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. Since it is not critical, it is enough to disable it by passing the corresponding compiler flag. : `-Wno-alloc-size-larger-than`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9735
https://github.com/root-project/root/pull/9735:565,energy efficiency,alloc,alloc-size-larger-than,565,"[Math] Disable a warning when compiling unuran code on Fedora; The warning was observed on fedora32 with gcc 10.3.1. Warning:. ```. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. ```. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. Since it is not critical, it is enough to disable it by passing the corresponding compiler flag. : `-Wno-alloc-size-larger-than`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9735
https://github.com/root-project/root/pull/9735:399,safety,input,input,399,"[Math] Disable a warning when compiling unuran code on Fedora; The warning was observed on fedora32 with gcc 10.3.1. Warning:. ```. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. ```. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. Since it is not critical, it is enough to disable it by passing the corresponding compiler flag. : `-Wno-alloc-size-larger-than`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9735
https://github.com/root-project/root/pull/9735:79,testability,observ,observed,79,"[Math] Disable a warning when compiling unuran code on Fedora; The warning was observed on fedora32 with gcc 10.3.1. Warning:. ```. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. ```. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. Since it is not critical, it is enough to disable it by passing the corresponding compiler flag. : `-Wno-alloc-size-larger-than`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9735
https://github.com/root-project/root/pull/9735:399,usability,input,input,399,"[Math] Disable a warning when compiling unuran code on Fedora; The warning was observed on fedora32 with gcc 10.3.1. Warning:. ```. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. ```. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. Since it is not critical, it is enough to disable it by passing the corresponding compiler flag. : `-Wno-alloc-size-larger-than`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9735
https://github.com/root-project/root/issues/9736:437,deployability,modul,modules,437,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:480,deployability,build,build,480,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:173,energy efficiency,Current,Currently,173,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:421,integrability,sub,subtle,421,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:118,modifiability,pac,packages,118,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:437,modifiability,modul,modules,437,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:287,performance,time,time,287,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:458,performance,time,time,458,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:8,reliability,Diagno,Diagnose,8,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:370,reliability,doe,does,370,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:490,reliability,diagno,diagnose,490,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:710,reliability,diagno,diagnostic,710,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:437,safety,modul,modules,437,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:8,testability,Diagno,Diagnose,8,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:490,testability,diagno,diagnose,490,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:710,testability,diagno,diagnostic,710,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/issues/9736:344,usability,person,person,344,"[cmake] Diagnose missing header (and include path) for externally built libraries.; ROOT has several externally built packages which end up in the dictionaries, such as Vc. Currently, if the Vc is externally built, the MathCore dictionary needs to know its include location at rootcling-time but also when running ROOT (ROOT's runtime). If the person uses that approach does not pass this information, this leads to very subtle crash in modules and it takes time to setup a debug build and diagnose. Instead, the dictionary which has an include to an externally built library (in ROOT_GENERATE_DICTIONARY) should be able to check if this include path is also passed in ROOT for its runtime. Otherwise, issue a diagnostic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9736
https://github.com/root-project/root/pull/9737:9,interoperability,format,formatting,9,Roostats formatting; - spell check. - indentation. - comment ins doxygen format. - remove dead code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9737
https://github.com/root-project/root/pull/9737:73,interoperability,format,format,73,Roostats formatting; - spell check. - indentation. - comment ins doxygen format. - remove dead code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9737
https://github.com/root-project/root/pull/9738:15,interoperability,plug,plugin,15,Simplify PgSQL plugin; Replace real PgSQL includes in header files by forward declarations. No need to present them to cling. Make PgSQL include private in cmake. More use of `nullptr` for pointers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9738
https://github.com/root-project/root/pull/9738:0,testability,Simpl,Simplify,0,Simplify PgSQL plugin; Replace real PgSQL includes in header files by forward declarations. No need to present them to cling. Make PgSQL include private in cmake. More use of `nullptr` for pointers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9738
https://github.com/root-project/root/pull/9738:0,usability,Simpl,Simplify,0,Simplify PgSQL plugin; Replace real PgSQL includes in header files by forward declarations. No need to present them to cling. Make PgSQL include private in cmake. More use of `nullptr` for pointers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9738
https://github.com/root-project/root/pull/9739:9,deployability,patch,patch,9,[jsroot] patch WebWindowHandle code [skip-ci]; Bugfix,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9739
https://github.com/root-project/root/pull/9739:9,safety,patch,patch,9,[jsroot] patch WebWindowHandle code [skip-ci]; Bugfix,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9739
https://github.com/root-project/root/pull/9739:9,security,patch,patch,9,[jsroot] patch WebWindowHandle code [skip-ci]; Bugfix,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9739
https://github.com/root-project/root/issues/9740:7283,availability,Down,Download,7283,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:893,deployability,stack,stack,893,"Crash after zoom and unzoom with secondary axes; - [x] Checked for duplicates. ### Describe the bug. This is a histogram I have with some extra axes:. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1467,deployability,Stack,StackTrace,1467,"the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4632,deployability,stack,stack,4632,"chOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1188,energy efficiency,optim,optimized,1188,"tent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1393,energy efficiency,core,core,1393,"53970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1517,energy efficiency,core,core,1517,":. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1677,energy efficiency,core,core,1677,"and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1798,energy efficiency,core,core,1798,"=========================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1895,energy efficiency,core,core,1895,"k trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2092,energy efficiency,core,core,2092,"ntry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2258,energy efficiency,core,core,2258,"in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2470,energy efficiency,core,core,2470,"Trace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2610,energy efficiency,core,core,2610,"=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:3704,energy efficiency,core,core,3704,"=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. tha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:3824,energy efficiency,core,core,3824,"b91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:3933,energy efficiency,core,core,3933,"i/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4060,energy efficiency,core,core,4060,"src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4186,energy efficiency,core,core,4186,"t /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4930,energy efficiency,core,core,4930,"/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:5070,energy efficiency,core,core,5070,"c/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6164,energy efficiency,core,core,6164,"=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-6141",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6284,energy efficiency,core,core,6284,"b91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Dow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6393,energy efficiency,core,core,6393,"i/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6520,energy efficiency,core,core,6520,"src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6646,energy efficiency,core,core,6646,"t /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2890,integrability,event,event,2890,"c/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:3027,integrability,event,event,3027,"t::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:3165,integrability,event,event,3165,"6 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4566,integrability,sub,submit,4566,"rc/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:5350,integrability,event,event,5350,"======================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:5487,integrability,event,event,5487,"ern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:5625,integrability,event,event,5625,"IRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:654. #17 0x00007fab917fac6e in TGClient::HandleInput (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:1188,performance,optimiz,optimized,1188,"tent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2064,security,sign,signum,2064,"00bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2230,security,sign,signum,2230,"149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:2318,security,sign,signal,2318,"43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007faba5b67146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6 in TGClient::ProcessOneEvent (this=0x5569340f5f50) at /opt/root_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:7558,security,Team,Team,7558,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:899,testability,trace,trace,899,"Crash after zoom and unzoom with secondary axes; - [x] Checked for duplicates. ### Describe the bug. This is a histogram I have with some extra axes:. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4638,testability,trace,trace,4638,"vent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:168,usability,user,user-images,168,"Crash after zoom and unzoom with secondary axes; - [x] Checked for duplicates. ### Describe the bug. This is a histogram I have with some extra axes:. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:358,usability,user,user-images,358,"Crash after zoom and unzoom with secondary axes; - [x] Checked for duplicates. ### Describe the bug. This is a histogram I have with some extra axes:. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:539,usability,user,user-images,539,"Crash after zoom and unzoom with secondary axes; - [x] Checked for duplicates. ### Describe the bug. This is a histogram I have with some extra axes:. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:. ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc. entry=0x7ffd300bf178, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4399,usability,hint,hint,4399,"t (this=0x5569340f5f50) at /opt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4443,usability,help,help,4443,"/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:4714,usability,help,help,4714,"c/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007faba5b538c3 in TContextMenu::Action (this=0x5569344ccc70, object=0x556932dbe648, method=0x33dc19b0) at /opt/root_src/core/gui/src/TContextMenu.cxx:100. #11 0x00007fab9194bc4b in TContextMenu::Action (this=0x5569344ccc70, method=0x33dc19b0) at /opt/root_src/core/gui/inc/TContextMenu.h:74. #12 0x00007fab9194b3e6 in TRootContextMenu::ProcessMessage (this=0x5569344debf0, msg=257, parm1=7, parm2=870062512) at /opt/root_src/gui/gui/src/TRootContextMenu.cxx:712. #13 0x00007fab91849a21 in TGFrame::HandleClientMessage (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:675. #14 0x00007fab918494d5 in TGFrame::HandleEvent (this=0x5569344debf0, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGFrame.cxx:551. #15 0x00007fab917fb1f0 in TGClient::HandleEvent (this=0x5569340f5f50, event=0x7ffd300c1db0) at /opt/root_src/gui/gui/src/TGClient.cxx:844. #16 0x00007fab917faac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:6905,usability,user,user-images,6905,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:7085,usability,user,user-images,7085,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:7194,usability,behavi,behavior,7194,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9740:7763,usability,help,help,7763,"pt/root_src/gui/gui/src/TGClient.cxx:701. #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055. #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. ```. Here is where QtCreator says the problem is:. ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:. ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior. Zooming and unzooming works without crashing or artefacts. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |. | From heads/master@v6-25-01-3005-g36dc424df9 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9740
https://github.com/root-project/root/issues/9741:406,deployability,contain,containing,406,"[RF] RooPlot::pullHist only uses upper range ; Reported in https://root-forum.cern.ch/t/pullhist-only-uses-upper-range/48582. When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. . Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. . Example code from Forum post:. ```Python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). x.setRange(""lo"", -10, -5). x.setRange(""hi"", 5, 10). pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""). ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(). ds.plotOn(fr). pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")). pull = fr.pullHist(). c = r.TCanvas(). fr2 = x.frame(). fr2.addPlotable(pull, ""P""). fr2.Draw(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9741
https://github.com/root-project/root/issues/9741:937,energy efficiency,Draw,Draw,937,"[RF] RooPlot::pullHist only uses upper range ; Reported in https://root-forum.cern.ch/t/pullhist-only-uses-upper-range/48582. When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. . Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. . Example code from Forum post:. ```Python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). x.setRange(""lo"", -10, -5). x.setRange(""hi"", 5, 10). pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""). ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(). ds.plotOn(fr). pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")). pull = fr.pullHist(). c = r.TCanvas(). fr2 = x.frame(). fr2.addPlotable(pull, ""P""). fr2.Draw(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9741
https://github.com/root-project/root/issues/9741:272,security,access,accessing,272,"[RF] RooPlot::pullHist only uses upper range ; Reported in https://root-forum.cern.ch/t/pullhist-only-uses-upper-range/48582. When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. . Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. . Example code from Forum post:. ```Python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). x.setRange(""lo"", -10, -5). x.setRange(""hi"", 5, 10). pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""). ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(). ds.plotOn(fr). pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")). pull = fr.pullHist(). c = r.TCanvas(). fr2 = x.frame(). fr2.addPlotable(pull, ""P""). fr2.Draw(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9741
https://github.com/root-project/root/issues/9741:387,security,access,access,387,"[RF] RooPlot::pullHist only uses upper range ; Reported in https://root-forum.cern.ch/t/pullhist-only-uses-upper-range/48582. When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. . Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. . Example code from Forum post:. ```Python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). x.setRange(""lo"", -10, -5). x.setRange(""hi"", 5, 10). pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""). ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(). ds.plotOn(fr). pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")). pull = fr.pullHist(). c = r.TCanvas(). fr2 = x.frame(). fr2.addPlotable(pull, ""P""). fr2.Draw(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9741
https://github.com/root-project/root/issues/9742:1105,availability,failur,failure,1105,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:9,deployability,fail,failed,9,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:69,deployability,releas,release,69,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:87,deployability,configurat,configuration,87,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:155,deployability,fail,failed,155,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:216,deployability,releas,release,216,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:234,deployability,configurat,configuration,234,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:726,deployability,instal,install,726,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:813,deployability,Releas,Release,813,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:933,deployability,Configurat,Configuration,933,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1085,deployability,Releas,Release,1085,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1105,deployability,fail,failure,1105,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1236,deployability,log,log,1236,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1305,deployability,log,log,1305,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:986,energy efficiency,power,powershell,986,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:87,integrability,configur,configuration,87,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:234,integrability,configur,configuration,234,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:933,integrability,Configur,Configuration,933,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:915,interoperability,Platform,Platform,915,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:87,modifiability,configur,configuration,87,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:234,modifiability,configur,configuration,234,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:933,modifiability,Configur,Configuration,933,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1105,performance,failur,failure,1105,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:9,reliability,fail,failed,9,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:155,reliability,fail,failed,155,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1105,reliability,fail,failure,1105,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:39,safety,except,exception-nullderef-e,39,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:61,safety,test,test,61,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:185,safety,except,exception-nullderef-e,185,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:208,safety,test,test,208,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:412,safety,except,exception-nullderef-e,412,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:435,safety,test,test,435,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1236,safety,log,log,1236,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1305,safety,log,log,1305,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:87,security,configur,configuration,87,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:234,security,configur,configuration,234,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:933,security,Configur,Configuration,933,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1236,security,log,log,1236,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1305,security,log,log,1305,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:61,testability,test,test,61,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:208,testability,test,test,208,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:435,testability,test,test,435,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1211,testability,context,context,1211,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1236,testability,log,log,1236,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1305,testability,log,log,1305,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:287,usability,help,help,287,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:370,usability,behavi,behavior,370,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/issues/9742:1043,usability,tool,tools,1043,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.; **Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**. For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**. 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_x86. 3. cd F:\gitP\root-project\root\build_x86. 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 5. python.exe -m pip install pytest. 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. . 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild. 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1"". 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**. VS 2019 + Windows Server 2019. **Additional context**. [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9742
https://github.com/root-project/root/pull/9743:40,usability,close,closed,40,"[v6.26] Make sure the temporary file is closed before renaming it. Fi…; …xes #9730. As reported [on the forun](https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580), make sure the temporary file is closed before renaming it. Should fix #9730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9743
https://github.com/root-project/root/pull/9743:222,usability,close,closed,222,"[v6.26] Make sure the temporary file is closed before renaming it. Fi…; …xes #9730. As reported [on the forun](https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580), make sure the temporary file is closed before renaming it. Should fix #9730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9743
https://github.com/root-project/root/issues/9744:532,availability,error,error-with-define,532,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1345,availability,servic,service-spi,1345,"or instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1369,availability,servic,service-spi,1369," exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1930,availability,servic,service-spi,1930,"to Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <trian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1954,availability,servic,service-spi,1954,"ms, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:5,deployability,modul,module,5,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:644,deployability,modul,modules,644,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:897,deployability,manag,managed,897,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1212,deployability,version,version,1212,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <positio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1345,deployability,servic,service-spi,1345,"or instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1369,deployability,servic,service-spi,1369," exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1385,deployability,releas,releases,1385,"ay's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1707,deployability,version,version,1707,"efine/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1796,deployability,version,version,1796,"essellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1930,deployability,servic,service-spi,1930,"to Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <trian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1954,deployability,servic,service-spi,1954,"ms, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1970,deployability,releas,releases,1970,"ad me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3651,deployability,version,version,3651,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3835,deployability,Version,Version,3835,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3866,deployability,build,build,3866,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3971,deployability,version,versions,3971,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:897,energy efficiency,manag,managed,897,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:908,energy efficiency,load,load,908,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1048,energy efficiency,load,load,1048,"[x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1104,energy efficiency,load,load,1104,"itHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1212,integrability,version,version,1212,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <positio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1345,integrability,servic,service-spi,1345,"or instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1369,integrability,servic,service-spi,1369," exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1399,integrability,schema,schema,1399," -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <posi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1707,integrability,version,version,1707,"efine/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1796,integrability,version,version,1796,"essellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1930,integrability,servic,service-spi,1930,"to Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <trian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1954,integrability,servic,service-spi,1954,"ms, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1984,integrability,schema,schema,1984,"eve it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3651,integrability,version,version,3651,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3835,integrability,Version,Version,3835,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3971,integrability,version,versions,3971,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1208,interoperability,xml,xml,1208,"ira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1252,interoperability,xml,xmlns,1252,"ng reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1286,interoperability,XML,XMLSchema-instance,1286,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1792,interoperability,xml,xml,1792,"is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1836,interoperability,xml,xmlns,1836,"with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1870,interoperability,XML,XMLSchema-instance,1870,"op of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:5,modifiability,modul,module,5,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:644,modifiability,modul,modules,644,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1212,modifiability,version,version,1212,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <positio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1345,modifiability,servic,service-spi,1345,"or instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1369,modifiability,servic,service-spi,1369," exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1707,modifiability,version,version,1707,"efine/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1796,modifiability,version,version,1796,"essellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1930,modifiability,servic,service-spi,1930,"to Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <trian",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1954,modifiability,servic,service-spi,1954,"ms, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3651,modifiability,version,version,3651,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3835,modifiability,Version,Version,3835,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:3971,modifiability,version,versions,3971,"ema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tessellated>. </solids>. <structure>. <volume name=""child"">. <materialref ref=""G4_Pb""/>. <solidref ref=""child_solid""/>. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""child""/>. </setup>. </gdml>. ```. Both files should be at the same directory and the ROOT REPL should be initialized in this directory too. ### Setup. ROOT Version: 6.25/01. OS: Linux. I build root myself from the GitHub source. I think this issue should be reproducible from all recent root versions though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:532,performance,error,error-with-define,532,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:908,performance,load,load,908,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1048,performance,load,load,1048,"[x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1104,performance,load,load,1104,"itHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:823,reliability,doe,does,823,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:5,safety,modul,module,5,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:532,safety,error,error-with-define,532,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:644,safety,modul,modules,644,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:897,safety,manag,managed,897,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1073,safety,except,exception,1073,"<!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:759,security,access,accessed,759,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:846,testability,simpl,simple,846,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2038,testability,unit,unit,2038," should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2104,testability,unit,unit,2104,"ad the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2168,testability,unit,unit,2168,".gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" ver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2233,testability,unit,unit,2233,"""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2296,testability,unit,unit,2296,"stance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2360,testability,unit,unit,2360,"ern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2422,testability,unit,unit,2422,"e />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:2487,testability,unit,unit,2487,">. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v1"" unit=""mm"" x=""10.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v2"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""10.0""/>. <position name=""cube_v3"" unit=""mm"" x=""0.0"" y=""0.0"" z=""10.0""/>. <position name=""cube_v4"" unit=""mm"" x=""0.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v5"" unit=""mm"" x=""0.0"" y=""0.0"" z=""0.0""/>. <position name=""cube_v6"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""0.0""/>. <position name=""cube_v7"" unit=""mm"" x=""10.0"" y=""0.0"" z=""0.0""/>. </define>. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100""/>. <tessellated name=""child_solid"" aunit=""deg"" lunit=""mm"">. <triangular vertex1=""cube_v0"" vertex2=""cube_v1"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v1"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v4"" vertex2=""cube_v5"" vertex3=""cube_v6""/>. <triangular vertex1=""cube_v6"" vertex2=""cube_v5"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v5"" vertex3=""cube_v2""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v5"" vertex3=""cube_v4""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v7"" vertex3=""cube_v3""/>. <triangular vertex1=""cube_v3"" vertex2=""cube_v7"" vertex3=""cube_v5""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v6"" vertex3=""cube_v1""/>. <triangular vertex1=""cube_v1"" vertex2=""cube_v6"" vertex3=""cube_v7""/>. <triangular vertex1=""cube_v2"" vertex2=""cube_v4"" vertex3=""cube_v0""/>. <triangular vertex1=""cube_v0"" vertex2=""cube_v4"" vertex3=""cube_v6""/>. </tesse",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:532,usability,error,error-with-define,532,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:846,usability,simpl,simple,846,"GDML module not working with Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9744:1022,usability,behavi,behavior,1022,"th Tessellated solid; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```. TGeoManager::Import(""mother.gdml"");. ```. `mother.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define />. <solids>. <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />. </solids>. <structure>. <volume name=""world"">. <physvol>. <file name=""child.gdml"" />. </physvol>. <materialref ref=""world_material"" />. <solidref ref=""world_solid"" />. </volume>. </structure>. <setup name=""Default"" version=""1.0"">. <world ref=""world"" />. </setup>. </gdml>. ```. `child.gdml`:. ```. <?xml version=""1.0"" encoding=""UTF-8""?>. <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"". xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">. <define>. <position nam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9744
https://github.com/root-project/root/issues/9745:120,availability,error,error,120,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1079,availability,error,error,1079,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1187,deployability,modul,module,1187,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:442,modifiability,paramet,parameters,442,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:474,modifiability,paramet,parameters,474,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:512,modifiability,paramet,parameters,512,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:541,modifiability,paramet,parameters,541,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:571,modifiability,paramet,parameters,571,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:600,modifiability,paramet,parameters,600,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1187,modifiability,modul,module,1187,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:120,performance,error,error,120,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1079,performance,error,error,1079,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:120,safety,error,error,120,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1079,safety,error,error,1079,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1187,safety,modul,module,1187,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1109,testability,Trace,Traceback,1109,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:120,usability,error,error,120,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/issues/9745:1079,usability,error,error,1079,"problem fitting 2d function with pyroot; I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function. This is the function I have:. ```. class gauss2d_function:. def __init__(self):. self.n1 = 1.0 # normalization 1. self.m1 = 60. # mean 1. self.s1 = 1.0 # sigma 1. self.m2 = 60.0 # mean 2. self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):. import math. n1 = parameters[0] # normalization 1. m1 = parameters[1] # mean 1. s1 = parameters[2] # sigma 1. m2 = parameters[3] # mean 2. s2 = parameters[4] # sigma 2. x1 = x[0]. y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.). x2 = x[1]. y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)). . return retval. ```. and here it is the code:. ```. hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \. tmin, tmax). . . . . func2d = gauss2d_function(). gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5). hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```. the error is the following:. ```. Traceback (most recent call last):. File ""python/crosstalk.py"", line 447, in <module>. main(). File ""python/crosstalk.py"", line 436, in main. doAnalysis(dbcon, path, filename, channel, photon). File ""python/crosstalk.py"", line 216, in doAnalysis. hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: could not convert argument 1. TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>. TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```. I'm using ROOT 6.24.06 on CentOS 8. Thank you very much. Roberto.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9745
https://github.com/root-project/root/pull/9746:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9746:159,deployability,patch,patches,159,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9746:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9746:159,safety,patch,patches,159,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9746:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9746:159,security,patch,patches,159,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 4; This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716. 2. https://github.com/root-project/root/pull/9727. 3. https://github.com/root-project/root/pull/9715. 4. https://github.com/root-project/root/pull/9720. 5. https://github.com/root-project/root/pull/9723. 6. https://github.com/root-project/root/pull/9717. 7. https://github.com/root-project/root/pull/9728.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9746
https://github.com/root-project/root/pull/9747:160,integrability,pub,public,160,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9747:174,integrability,interfac,interfaces,174,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9747:174,interoperability,interfac,interfaces,174,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9747:441,interoperability,specif,specific,441,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9747:174,modifiability,interfac,interfaces,174,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9747:283,security,access,accessors,283,"[RF] New RooStringView class for passing std::strings to functions; A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747
https://github.com/root-project/root/pull/9748:11,interoperability,format,formatting,11,roofitcore formatting; - spell check. - indentation. - comments in doxygen format. - remove dead code. - remove trailing spaces. - remove tabs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9748
https://github.com/root-project/root/pull/9748:75,interoperability,format,format,75,roofitcore formatting; - spell check. - indentation. - comments in doxygen format. - remove dead code. - remove trailing spaces. - remove tabs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9748
https://github.com/root-project/root/pull/9749:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9749:154,deployability,patch,patches,154,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9749:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9749:154,safety,patch,patches,154,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9749:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9749:154,security,patch,patches,154,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 5; This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683. 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9749
https://github.com/root-project/root/pull/9750:20,interoperability,Prox,Proxy,20,Emulated Collection Proxy need to always use the VectorLooper for the StreamerInfoActions; This fixes #9136.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9750
https://github.com/root-project/root/pull/9750:0,testability,Emul,Emulated,0,Emulated Collection Proxy need to always use the VectorLooper for the StreamerInfoActions; This fixes #9136.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9750
https://github.com/root-project/root/pull/9751:34,deployability,modul,module,34,[v626][cxxmodules] Use the global module index only when no rootmap candida…; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9751
https://github.com/root-project/root/pull/9751:34,modifiability,modul,module,34,[v626][cxxmodules] Use the global module index only when no rootmap candida…; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9751
https://github.com/root-project/root/pull/9751:34,safety,modul,module,34,[v626][cxxmodules] Use the global module index only when no rootmap candida…; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9751
https://github.com/root-project/root/pull/9752:34,deployability,modul,module,34,[v624][cxxmodules] Use the global module index only when no rootmap candidate is found; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9752
https://github.com/root-project/root/pull/9752:34,modifiability,modul,module,34,[v624][cxxmodules] Use the global module index only when no rootmap candidate is found; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9752
https://github.com/root-project/root/pull/9752:34,safety,modul,module,34,[v624][cxxmodules] Use the global module index only when no rootmap candidate is found; Fixes #9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9752
https://github.com/root-project/root/pull/9753:368,interoperability,bind,bindings,368,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:509,interoperability,bind,binding,509,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:368,modifiability,bind,bindings,368,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:509,modifiability,bind,binding,509,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:322,safety,input,inputrc,322,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:471,safety,input,inputrc,471,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:555,safety,test,tested,555,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:555,testability,test,tested,555,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:201,usability,user,users,201,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:291,usability,user,users,291,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:322,usability,input,inputrc,322,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9753:471,usability,input,inputrc,471,"[textinput] Enable Xterm-like movement between words, i.e. using Ctrl+{Left,Right}; This pull-request enables fast word movement in the ROOT prompt à la Xterm (by using Ctrl+Left and Ctrl+Right). Most users coming from a GUI (GTK+, Win32, etc.) will find this convenient, but also Archlinux users, given that the default `inputrc` file for GNU Readline provides these bindings (see https://wiki.archlinux.org/title/Readline#Fast_word_movement). EDIT: it seems that `/etc/inputrc` in Fedora also provides this binding by default. :-). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9753
https://github.com/root-project/root/pull/9754:14,integrability,event,event,14,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/pull/9754:144,integrability,event,event,144,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/pull/9754:197,integrability,event,event,197,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/pull/9754:247,security,modif,modifications,247,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/pull/9754:8,usability,mous,mouse,8,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/pull/9754:40,usability,Minim,Minimal,40,Replace mouse event with pointer ones.; Minimal changes that make REve GlViewerThree work again. There is still the mystery of:. - pointerleave event being generated before pointerdown. - dblclick event not making it through. I was suspecting SAP modifications to jQuery to be bugged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9754
https://github.com/root-project/root/issues/9757:700,availability,Error,Error,700,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:785,availability,recov,recover,785,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:816,availability,Error,Error,816,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:906,availability,recov,recover,906,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:937,availability,Error,Error,937,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:785,deployability,recov,recover,785,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:906,deployability,recov,recover,906,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:94,energy efficiency,current,current,94,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:167,energy efficiency,load,loading-root-file,167,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:167,performance,load,loading-root-file,167,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:700,performance,Error,Error,700,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:816,performance,Error,Error,816,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:937,performance,Error,Error,937,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:785,reliability,recov,recover,785,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:906,reliability,recov,recover,906,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:700,safety,Error,Error,700,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:785,safety,recov,recover,785,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:816,safety,Error,Error,816,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:906,safety,recov,recover,906,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:937,safety,Error,Error,937,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:785,security,recov,recover,785,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:906,security,recov,recover,906,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:700,usability,Error,Error,700,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:816,usability,Error,Error,816,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9757:937,usability,Error,Error,937,"Reading entries on a cloned TNtuple broken if cloning happened when an unrelated file was the current file; First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp. #include <TFile.h>. #include <TNtuple.h>. #include <iostream>. int main() {. TFile f0(""o1.root"");. TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");. std::cout << ""No clone:\n"";. B2L->GetEntry(0);. std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue. TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());. f1.cd();. std::cout << ""Clone:\n"";. B2Lc->GetEntry(0);. std::cout << ""done\n"";. return 0;. }. ```. prints. ```. No clone:. done. Clone:. Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero. Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero. Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0. done. ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9757
https://github.com/root-project/root/issues/9758:547,availability,error,error,547,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:568,availability,Error,Error,568,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:553,integrability,messag,message,553,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:553,interoperability,messag,message,553,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:895,modifiability,variab,variables,895,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:547,performance,error,error,547,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:568,performance,Error,Error,568,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:434,reliability,doe,does,434,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:547,safety,error,error,547,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:568,safety,Error,Error,568,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:547,usability,error,error,547,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/issues/9758:568,usability,Error,Error,568,"TTreeReaderArray can't read leafs of ULong64_t type (but branches are fine); ```cpp. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderArray.h>. int main() {. {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. ULong64_t x[3] = {1ull, 2ull, 3ull};. t.Branch(""x"", &x, ""x[3]/l"");. t.Fill();. t.Write();. }. TFile f(""f.root"");. TTreeReader r(""t"", &f);. // this works:. TTreeReaderArray<ULong64_t> x(r, ""x"");. // this does not:. TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;. }. ```. produces the following (bad) error message:. ```. Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>. ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9758
https://github.com/root-project/root/pull/9760:359,deployability,updat,updated,359,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:259,integrability,Interfac,InterfaceUtils,259,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:259,interoperability,Interfac,InterfaceUtils,259,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:259,modifiability,Interfac,InterfaceUtils,259,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:329,safety,test,tested,329,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:359,safety,updat,updated,359,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:359,security,updat,updated,359,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9760:329,testability,test,tested,329,"[DF] Add GraphAsymmErrors member (apply #8363); # This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph. GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to. be passed to it. Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9760
https://github.com/root-project/root/pull/9761:64,safety,avoid,avoid,64,[clingutils] Modernize C++ casting in generated dictionaries to avoid potential warnings in derived applications; # This Pull request:. ## Changes or fixes:. Improves cast safety by using static_cast instead of old C-style cast. ## Checklist:. - [x] tested changes locally. This PR fixes # . ## Additional context. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1992/WG21%201992/X3J16_92-0122%20WG21_N0199.pdf.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9761
https://github.com/root-project/root/pull/9761:172,safety,safe,safety,172,[clingutils] Modernize C++ casting in generated dictionaries to avoid potential warnings in derived applications; # This Pull request:. ## Changes or fixes:. Improves cast safety by using static_cast instead of old C-style cast. ## Checklist:. - [x] tested changes locally. This PR fixes # . ## Additional context. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1992/WG21%201992/X3J16_92-0122%20WG21_N0199.pdf.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9761
https://github.com/root-project/root/pull/9761:250,safety,test,tested,250,[clingutils] Modernize C++ casting in generated dictionaries to avoid potential warnings in derived applications; # This Pull request:. ## Changes or fixes:. Improves cast safety by using static_cast instead of old C-style cast. ## Checklist:. - [x] tested changes locally. This PR fixes # . ## Additional context. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1992/WG21%201992/X3J16_92-0122%20WG21_N0199.pdf.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9761
https://github.com/root-project/root/pull/9761:250,testability,test,tested,250,[clingutils] Modernize C++ casting in generated dictionaries to avoid potential warnings in derived applications; # This Pull request:. ## Changes or fixes:. Improves cast safety by using static_cast instead of old C-style cast. ## Checklist:. - [x] tested changes locally. This PR fixes # . ## Additional context. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1992/WG21%201992/X3J16_92-0122%20WG21_N0199.pdf.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9761
https://github.com/root-project/root/pull/9761:306,testability,context,context,306,[clingutils] Modernize C++ casting in generated dictionaries to avoid potential warnings in derived applications; # This Pull request:. ## Changes or fixes:. Improves cast safety by using static_cast instead of old C-style cast. ## Checklist:. - [x] tested changes locally. This PR fixes # . ## Additional context. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/1992/WG21%201992/X3J16_92-0122%20WG21_N0199.pdf.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9761
https://github.com/root-project/root/issues/9763:1144,availability,sli,slightly,1144,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1349,availability,Down,Download,1349,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:6,deployability,artifact,artifact,6,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:427,deployability,releas,release,427,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:451,deployability,artifact,artifact,451,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:579,deployability,artifact,artifact,579,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:651,deployability,artifact,artifact,651,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:753,deployability,artifact,artifact,753,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1310,deployability,artifact,artifact,1310,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1144,reliability,sli,slightly,1144,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1693,reliability,doe,does,1693,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1684,security,ssh,ssh,1684,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1759,security,ssh,ssh,1759,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1795,security,ssh,ssh,1795,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1816,testability,context,context,1816,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:137,usability,user,user-images,137,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:479,usability,user,user-images,479,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:886,usability,user,user-images,886,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1015,usability,user,user-images,1015,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1182,usability,user,user-images,1182,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1291,usability,behavi,behavior,1291,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/issues/9763:1497,usability,mous,mouse,1497,"Image artifact with zoombox on 1D hist if SetFillStyle 0 on Ubuntu; - [x] Checked for duplicates. ### Describe the bug. ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:. ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:. ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior. No image artifact is shown. ### To Reproduce. - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip). - root -l test_zoom.cpp+. - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup. The issue appears with:. - [x] Master / Ubuntu 18 and 20. - [x] 6.20.06 / Ubuntu 20. - [x] 6.13.08 / Ubuntu 18. - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:. - [x] MacOS. - [x] 5.34.18/Ubuntu 14 (over ssh). - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context. https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5. https://github.com/root-project/root/issues/9740.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763
https://github.com/root-project/root/pull/9764:257,energy efficiency,alloc,allocator,257,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:26,interoperability,Prox,Proxy,26,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:203,interoperability,prox,proxy,203,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:349,interoperability,prox,proxy,349,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:506,safety,compl,complaining,506,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:506,security,compl,complaining,506,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:6,testability,Emul,Emulated,6,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:194,testability,emul,emulated,194,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:457,testability,emul,emulated,457,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:499,testability,assert,assert,499,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:250,usability,custom,custom,250,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9764:299,usability,usab,usable,299,"v626: Emulated Collection Proxy always need the VectorLooper for the StreamerInfoActions; This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'. in the case of an emulated proxy for STL collection with (in the. name) a custom allocator. However the GenericLooper only usable. for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which. is not defined for vector ... and emulated collection. Using. it lead to an assert complaining (right fully so) that an. 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9764
https://github.com/root-project/root/pull/9767:241,deployability,updat,updated,241,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:211,safety,test,tested,211,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:241,safety,updat,updated,241,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:241,security,updat,updated,241,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:211,testability,test,tested,211,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:21,usability,document,documentation,21,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:75,usability,document,documentation,75,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:99,usability,help,helper,99,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9767:175,usability,document,documentation,175,[RF] RooFitHS3 latex documentation generator; # This Pull request:. Adds a documentation generator helper function to RooJSONFactoryWSTool and explains its usage in the class documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9767
https://github.com/root-project/root/pull/9770:161,deployability,contain,container,161,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:179,deployability,contain,container,179,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:327,deployability,updat,updated,327,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:128,energy efficiency,Current,Currently,128,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:248,modifiability,variab,variable,248,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:210,safety,test,tests,210,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:297,safety,test,tested,297,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:327,safety,updat,updated,327,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:327,security,updat,updated,327,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:210,testability,test,tests,210,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9770:297,testability,test,tested,297,"[DF] Fix FillTGraphHelper Exec method; # This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9770
https://github.com/root-project/root/pull/9771:165,energy efficiency,current,currently,165,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:264,integrability,sub,subobject,264,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:6,modifiability,Exten,Extend,6,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:88,modifiability,Exten,Extend,88,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:16,usability,custom,customization,16,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:30,usability,support,support,30,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9771:99,usability,support,support,99,"v626: Extend io customization support: whole obj rule in split obj.; Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9771
https://github.com/root-project/root/pull/9773:155,deployability,updat,updated,155,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:17,integrability,schema,schema,17,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:24,interoperability,convers,conversion,24,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:125,safety,test,tested,125,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:155,safety,updat,updated,155,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:155,security,updat,updated,155,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9773:125,testability,test,tested,125,[io] Enable auto schema conversion for vector<ARITH_TYPE>:; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9773
https://github.com/root-project/root/pull/9774:10,deployability,artifact,artifact,10,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:115,deployability,artifact,artifact,115,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:318,deployability,updat,updated,318,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:288,safety,test,tested,288,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:318,safety,updat,updated,318,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:318,security,updat,updated,318,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9774:288,testability,test,tested,288,"Fix image artifact in X11 without alpha after zoom; # This Pull request:. ## Changes or fixes:. There was an image artifact with the zoombox in X11 (Ubuntu) since ROOT 5.34.19, only appearing if c->SetFillStyle(0) and GL was disabled, and on Ubuntu only, apparently. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9763.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9774
https://github.com/root-project/root/pull/9775:153,interoperability,format,format,153,[skip-ci][win][v626] Revert changes of commit #051b2ace27 (drag-and-drop) (…; …#9769). * [skip-ci][win] Revert changes of commit #051b2ace27. * Fix clan-format.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9775
https://github.com/root-project/root/pull/9776:9,deployability,Updat,Update,9,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:21,deployability,releas,release,21,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:46,deployability,Updat,Update,46,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:9,safety,Updat,Update,9,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:46,safety,Updat,Update,46,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:9,security,Updat,Update,9,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9776:46,security,Updat,Update,46,[skip-ci]Update 6.26 release notes for SOFIE; Update also contributor list adding the GSOC and summer student of 2021. that have contributed to the TMVA developments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9776
https://github.com/root-project/root/pull/9779:252,deployability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:291,deployability,Updat,Update,291,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:132,energy efficiency,Optim,Optimize,132,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:204,energy efficiency,optim,optimized,204,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:267,energy efficiency,optim,optimized,267,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,integrability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,interoperability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,modifiability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:132,performance,Optimiz,Optimize,132,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:204,performance,optimiz,optimized,204,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:267,performance,optimiz,optimized,267,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,reliability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:50,safety,Compl,Complete,50,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:291,safety,Updat,Update,291,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:50,security,Compl,Complete,50,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,security,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:291,security,Updat,Update,291,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:252,testability,integr,integrated,252,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9779:113,usability,clear,clear,113,"[jsroot] use JS classes for JSROOT functionality; Complete code reformatted to use JS classes. Makes layout more clear and compact. Optimize io code - use more internal constants, which. very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script. Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9779
https://github.com/root-project/root/pull/9780:273,interoperability,format,format,273,[v626] Fix drag and drop on Linux (#9768); * Fix drag and drop on Linux. Add a work-around to make sure the action is no null in `HandleDNDPosition()`. This fixes an issue reported [on the forum](https://root-forum.cern.ch/t/drag-and-drop-in-root-6-24/47789). * Make clang-format happy. * clang-format again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9780
https://github.com/root-project/root/pull/9780:295,interoperability,format,format,295,[v626] Fix drag and drop on Linux (#9768); * Fix drag and drop on Linux. Add a work-around to make sure the action is no null in `HandleDNDPosition()`. This fixes an issue reported [on the forum](https://root-forum.cern.ch/t/drag-and-drop-in-root-6-24/47789). * Make clang-format happy. * clang-format again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9780
https://github.com/root-project/root/pull/9781:300,availability,avail,available,300,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:300,reliability,availab,available,300,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:231,safety,prevent,preventing,231,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:300,safety,avail,available,300,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:485,safety,test,tested,485,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:231,security,preven,preventing,231,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:300,security,availab,available,300,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9781:485,testability,test,tested,485,[cling] Make enumerators in a scopeless `enum` visible in the enclosing scope; This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:. - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:. - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9781
https://github.com/root-project/root/pull/9782:592,availability,slo,sloc,592,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:608,availability,slo,sloc,608,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:212,integrability,Translat,TranslationUnitDecl,212,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:375,integrability,Translat,TranslationUnitDecl,375,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:212,interoperability,Translat,TranslationUnitDecl,212,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:375,interoperability,Translat,TranslationUnitDecl,375,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:592,reliability,slo,sloc,592,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:608,reliability,slo,sloc,608,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:294,safety,prevent,prevents,294,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:1114,safety,test,tested,1114,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:294,security,preven,prevents,294,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:192,testability,context,context,192,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9782:1114,testability,test,tested,1114,"[cling] Extracted decls should be unconditionally moved to the parent DeclContext; Declarations extracted by DeclExtractor, regardless of their type, should be moved to the parent declaration context (be it the `TranslationUnitDecl` or a `NamespaceDecl` if DefinitionShadower is enabled). This prevents the following situation (i.e., the CXXRecordDecl becomes a child of the TranslationUnitDecl instead of the internal namespace used by the definition shadower):. ```c++. root [] struct X {} foo. (struct X &) @0x7f545a5ff018. root [] .stats asttree. |-NamespaceDecl 0x5647ecc93780 <<invalid sloc>> <invalid sloc> __cling_N50 inline. | |-VarDecl 0x5647ecc89f10 <ROOT_prompt_0:1:1, col:13> col:13 used foo 'struct X':'X' callinit. | | `-CXXConstructExpr 0x5647ecc8a420 <col:13> 'struct X':'X' 'void () noexcept'. | `-FunctionDecl 0x5647ecc89bc8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'. ... |-CXXRecordDecl 0x5647ecc89c98 <line:1:1, col:11> col:8 struct X definition. ```. Sibling PR in roottest: https://github.com/root-project/roottest/pull/819. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9782
https://github.com/root-project/root/pull/9785:7,interoperability,format,formatting,7,Unuran formatting; - spell check. - indentation. - comment ins doxygen format. - remove dead code. - remove trailing spaces. - remove tab.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9785
https://github.com/root-project/root/pull/9785:71,interoperability,format,format,71,Unuran formatting; - spell check. - indentation. - comment ins doxygen format. - remove dead code. - remove trailing spaces. - remove tab.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9785
https://github.com/root-project/root/pull/9787:13,interoperability,format,formatting,13,Mathcore-fit formatting; - spell check. - comment ins doxygen format. - remove trailing spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9787
https://github.com/root-project/root/pull/9787:62,interoperability,format,format,62,Mathcore-fit formatting; - spell check. - comment ins doxygen format. - remove trailing spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9787
https://github.com/root-project/root/pull/9788:1099,availability,avail,available,1099,"ps://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1538,availability,slo,slower,1538,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:975,deployability,Updat,Update,975,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1312,integrability,wrap,wrapper,1312,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1312,interoperability,wrapper,wrapper,1312,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1279,modifiability,variab,variables,1279,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:943,performance,content,contents,943,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1415,performance,perform,performance,1415,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1599,performance,overhead,overhead,1599,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1833,performance,Time,Time,1833,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:8,reliability,Diagno,Diagnose,8,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:187,reliability,diagno,diagnosing,187,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1099,reliability,availab,available,1099,"ps://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1155,reliability,diagno,diagnostic,1155," improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](http",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1538,reliability,slo,slower,1538,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:975,safety,Updat,Update,975,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1099,safety,avail,available,1099,"ps://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1201,safety,input,input,1201,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:2085,safety,test,tested,2085,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:975,security,Updat,Update,975,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1099,security,availab,available,1099,"ps://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:8,testability,Diagno,Diagnose,8,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:187,testability,diagno,diagnosing,187,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:717,testability,context,context,717,"[cling] Diagnose shadowing of decls in the `std` namespace; Related to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1155,testability,diagno,diagnostic,1155," improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](http",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:2085,testability,test,tested,2085,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1201,usability,input,input,1201,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9788:1415,usability,perform,performance,1415,"hadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`. See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:. - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file. - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use. ```. +-------------------------+-------------------------------+. | Redeclaration kind | Time (us) for 1000000 lookups |. +-------------------------+-------------------------------+. | ForVisibleRedeclaration | 27617 |. | NotForRedeclaration | 717458 |. +-------------------------+-------------------------------+. ```. ## Checklist:. - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9788
https://github.com/root-project/root/pull/9789:243,availability,avail,available,243,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:243,reliability,availab,available,243,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:174,safety,prevent,preventing,174,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:243,safety,avail,available,243,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:295,safety,test,tested,295,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:174,security,preven,preventing,174,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:243,security,availab,available,243,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9789:295,testability,test,tested,295,"[cling,v6-26] Make enumerators in a scopeless enum visible in the enclosing scope; This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:. - [X] tested changes locally. This PR fixes ROOT-6095.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9789
https://github.com/root-project/root/pull/9790:139,deployability,contain,container,139,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:157,deployability,contain,container,157,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:305,deployability,updat,updated,305,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:106,energy efficiency,Current,Currently,106,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:226,modifiability,variab,variable,226,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:188,safety,test,tests,188,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:275,safety,test,tested,275,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:305,safety,updat,updated,305,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:305,security,updat,updated,305,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:188,testability,test,tests,188,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9790:275,testability,test,tested,275,"[DF] Fix FillTGraphHelper Exec method; Previously, the Exec method of the FillTGraphHelper was ambiguous. Currently, Exec properly handles container and non-container types. Corresponding tests added. Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9790
https://github.com/root-project/root/pull/9791:9,interoperability,format,formatting,9,mathcore formatting; - spell check. - comment ins doxygen format. - remove trailing spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9791
https://github.com/root-project/root/pull/9791:58,interoperability,format,format,58,mathcore formatting; - spell check. - comment ins doxygen format. - remove trailing spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9791
https://github.com/root-project/root/issues/9792:303,availability,consist,consistent,303,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1389,availability,servic,service,1389,er. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! messa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:193,deployability,log,log,193,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:389,deployability,log,logger,389,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:460,deployability,log,logger,460,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:538,deployability,log,logger,538,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:620,deployability,log,logger,620,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:693,deployability,log,logger,693,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:765,deployability,log,logger,765,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:842,deployability,log,logger,842,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:914,deployability,log,logger,914,"should fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1001,deployability,log,logger,1001,"ld fLogger be persistant ?; In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! mes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1076,deployability,log,logger,1076,"in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! messa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1157,deployability,log,logger,1157,"d sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1239,deployability,log,logger,1239,t may be it should be ? ... at least the current code is not consistent: . ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1313,deployability,log,logger,1313, ```. tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1381,deployability,log,logging,1381,age logger. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1389,deployability,servic,service,1389,er. tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! messa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1412,deployability,Modul,ModulekNN,1412,.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1464,deployability,log,logger,1464, tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1553,deployability,log,logger,1553,MVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1626,deployability,log,logger,1626,mva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logg,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1710,deployability,log,logger,1710,A/DataSetFactory.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1793,deployability,log,logger,1793,fo.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1862,deployability,log,logger,1862,ataSetManager.h: MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:1935,deployability,log,logger,1935,pectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger. tmva/inc/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:2009,deployability,log,logger,2009,a/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger. tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger. tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:2082,deployability,log,logger,2082,mva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger. tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logge,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:2153,deployability,log,logger,2153, logger. tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger. tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! messag,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
https://github.com/root-project/root/issues/9792:2226,deployability,log,logger,2226,/ message logger. tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service. tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger. tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger. tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger. tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger. tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9792
