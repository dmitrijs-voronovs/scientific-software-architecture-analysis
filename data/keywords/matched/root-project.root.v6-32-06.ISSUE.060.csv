id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10107:832,security,soc,sockopt,832,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:889,security,patch,patches,889,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:961,security,soc,sockopt,961,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:993,security,soc,socket,993,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1010,security,soc,sockopt,1010,"patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1065,security,patch,patches,1065,"ted [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1155,security,patch,patches,1155,"-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1423,security,patch,patches,1423,"tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1633,security,patch,patches,1633,"r()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1716,security,patch,patches,1716,"eroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1800,security,patch,patches,1800,"an ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2472,security,patch,patches,2472,"03:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2558,security,patch,patches,2558,"per<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2635,security,patch,patches,2635,"s/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2789,security,patch,patches,2789,"-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the sy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:3823,security,configur,configuration,3823,"mq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`. and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2955,testability,depend,dependencies,2955,"cv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPAT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:3193,testability,depend,dependencies,3193,"mq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`. and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:123,usability,error,error-in-the-,123,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:368,usability,error,error,368,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:738,usability,error,error,738,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:948,usability,error,error,948,"[RF] v6-26-00-patches branch fails to build on ubuntu 18.04; As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):. This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1214,usability,error,error,1214,".04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):. ```. (...). In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:1482,usability,error,error,1482,"pp:14:0:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’? socket->set(zmq::sockopt::linger, PERIOD);. ^~~. send. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared. socket->set(zmq::sockopt::linger, PERIOD);. ^~~~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type. using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;. ^~~~~~~~~~. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:2689,usability,error,error,2689,"from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int). inline size_t recv (void *buf_, size_t len_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:3458,usability,Error,Error,3458,"mq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`. and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:3555,usability,error,errors,3555,"mq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`. and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/issues/10107:3726,usability,Error,Error,3726,"mq::message_t>’ to ‘void*’. /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int). inline bool recv (message_t *msg_, int flags_ = 0). ^~~~. /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’. In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,. from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:. (...). /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope. auto it = m_fds.find(fd);. ^~~~~. /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’. auto it = m_fds.find(fd);. ^~~~~. m_free. Consolidate compiler generated dependencies of target obj.clingInterpreter. [ 73%] Built target obj.clingInterpreter. [ 73%] Built target clingInterpreter. [ 73%] Built target CLING. [ 73%] Built target clad. [ 73%] Built target LLVMRES. Consolidate compiler generated dependencies of target ClingUtils. roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed. make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1. make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors. CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed. make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2. (...). ```. It seems that the problem is related to the system provided ""`libzmq`"". The configuration step says:. `-- ZeroMQ not found. Switching on builtin_zeromq option`. but it also finds:. `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`. and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10107
https://github.com/root-project/root/pull/10108:294,interoperability,specif,specifically,294,"[rint] Add boolean flag to exit on unknown arguments; This addresses second part of https://github.com/root-project/root/issues/10090 . A boolean flag is added to the `TRint` constructor. `false` by default, if `true` it forces exit on unknown arguments supplied by the user. This behaviour is specifically intended for the usage of `TRint` as the result of calling the `root` command. Other use cases may actually need to pass arguments unknown to `TRint` but known to some derived class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10108:270,usability,user,user,270,"[rint] Add boolean flag to exit on unknown arguments; This addresses second part of https://github.com/root-project/root/issues/10090 . A boolean flag is added to the `TRint` constructor. `false` by default, if `true` it forces exit on unknown arguments supplied by the user. This behaviour is specifically intended for the usage of `TRint` as the result of calling the `root` command. Other use cases may actually need to pass arguments unknown to `TRint` but known to some derived class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10108:281,usability,behavi,behaviour,281,"[rint] Add boolean flag to exit on unknown arguments; This addresses second part of https://github.com/root-project/root/issues/10090 . A boolean flag is added to the `TRint` constructor. `false` by default, if `true` it forces exit on unknown arguments supplied by the user. This behaviour is specifically intended for the usage of `TRint` as the result of calling the `root` command. Other use cases may actually need to pass arguments unknown to `TRint` but known to some derived class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10108:377,usability,command,command,377,"[rint] Add boolean flag to exit on unknown arguments; This addresses second part of https://github.com/root-project/root/issues/10090 . A boolean flag is added to the `TRint` constructor. `false` by default, if `true` it forces exit on unknown arguments supplied by the user. This behaviour is specifically intended for the usage of `TRint` as the result of calling the `root` command. Other use cases may actually need to pass arguments unknown to `TRint` but known to some derived class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10109:202,energy efficiency,load,load,202,"[rbrowser] check classes hierarchy when browsing TFile; If class name in TKey not directly match with registered classes,. try to call `TClass::GetClass()` to check base classes - but without trying to load library. Should allow to handle user-derived classes for TTree, histograms, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10109
https://github.com/root-project/root/pull/10109:202,performance,load,load,202,"[rbrowser] check classes hierarchy when browsing TFile; If class name in TKey not directly match with registered classes,. try to call `TClass::GetClass()` to check base classes - but without trying to load library. Should allow to handle user-derived classes for TTree, histograms, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10109
https://github.com/root-project/root/pull/10109:239,usability,user,user-derived,239,"[rbrowser] check classes hierarchy when browsing TFile; If class name in TKey not directly match with registered classes,. try to call `TClass::GetClass()` to check base classes - but without trying to load library. Should allow to handle user-derived classes for TTree, histograms, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10109
https://github.com/root-project/root/pull/10110:23,usability,custom,custom,23,[rbrowser] let browser custom trees (6.26); Backport of #10109,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10110
https://github.com/root-project/root/pull/10111:90,deployability,version,version,90,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:254,deployability,version,version,254,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:347,deployability,version,version,347,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:90,integrability,version,version,90,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:254,integrability,version,version,254,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:347,integrability,version,version,347,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:90,modifiability,version,version,90,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:254,modifiability,version,version,254,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:347,modifiability,version,version,347,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:335,usability,usab,usable,335,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/pull/10111:397,usability,close,closes,397,"[cmake] Don't use ZMQ C++ headers from the system if ZMQ is too old; If the ZeroMQ system version is too old, we can't use the system C++. headers either (note that `find_package(ZeroMQ)` not only checks if the. library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ. version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10111
https://github.com/root-project/root/issues/10112:50,deployability,releas,release,50,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:100,deployability,releas,releases,100,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:258,deployability,patch,patch,258,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:264,deployability,releas,release,264,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:1589,deployability,patch,patches,1589,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:258,safety,patch,patch,258,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:1589,safety,patch,patches,1589,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:258,security,patch,patch,258,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:1589,security,patch,patches,1589,[RF] RooFit open issues and backports for 6.26.02 release; The related issues for the previous 6.26 releases:. 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984. - [x] https://github.com/root-project/root/pull/9981. - [x] https://github.com/root-project/root/pull/10053. - [x] https://github.com/root-project/root/pull/10051. - [x] https://github.com/root-project/root/pull/9986. - [x] https://github.com/root-project/root/pull/10070. - [x] https://github.com/root-project/root/pull/10093. - [x] https://github.com/root-project/root/pull/10082. - [x] https://github.com/root-project/root/pull/10105. - [x] https://github.com/root-project/root/pull/10111. - [x] https://github.com/root-project/root/pull/10158. - [x] https://github.com/root-project/root/pull/10104. - [x] https://github.com/root-project/root/pull/10100. - [x] https://github.com/root-project/root/pull/10229. - [x] https://github.com/root-project/root/pull/10256. - [x] https://github.com/root-project/root/pull/10213. - [x] https://github.com/root-project/root/pull/10270. - [x] https://github.com/root-project/root/pull/10263. - [x] https://github.com/root-project/root/pull/10269. - [x] https://github.com/root-project/root/pull/10352. - [x] https://github.com/root-project/root/pull/10359. - [x] https://github.com/root-project/root/pull/10362. - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10114. 2. https://github.com/root-project/root/pull/10252. 3. https://github.com/root-project/root/pull/10367. 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/pull/10114:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10114:149,deployability,patch,patches,149,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10114:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10114:149,safety,patch,patches,149,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10114:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10114:149,security,patch,patches,149,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 8; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984. 2. https://github.com/root-project/root/pull/9981. 3. https://github.com/root-project/root/pull/10053. 4. https://github.com/root-project/root/pull/10051. 5. https://github.com/root-project/root/pull/9986. 6. https://github.com/root-project/root/pull/10070. 7. https://github.com/root-project/root/pull/10093. 8. https://github.com/root-project/root/pull/10082. 9. https://github.com/root-project/root/pull/10105.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10114
https://github.com/root-project/root/pull/10115:141,integrability,wrap,wrapper,141,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:141,interoperability,wrapper,wrapper,141,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:5,safety,Avoid,Avoid,5,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:108,safety,avoid,avoiding,108,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:238,safety,test,tested,238,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:169,testability,simpl,simple,169,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:238,testability,test,tested,238,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10115:169,usability,simpl,simple,169,"[RF] Avoid using RooTObjWrap, RooDouble, and RooInt in RooCmdConfig; Part of the RooFit code modernization, avoiding the use of unnecessary. wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10115
https://github.com/root-project/root/pull/10116:459,availability,error,error,459,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:745,availability,Error,Error,745,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:68,deployability,build,builddir,68,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:77,deployability,build,build,77,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:83,deployability,BUILD,BUILD,83,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:144,deployability,build,builddir,144,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:153,deployability,build,build,153,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:159,deployability,BUILD,BUILD,159,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:209,deployability,build,builddir,209,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:218,deployability,build,build,218,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:224,deployability,BUILD,BUILD,224,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:381,deployability,build,builddir,381,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:390,deployability,build,build,390,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:396,deployability,BUILD,BUILD,396,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:672,deployability,build,build,672,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:896,deployability,updat,updated,896,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:459,performance,error,error,459,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:745,performance,Error,Error,745,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:459,safety,error,error,459,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:745,safety,Error,Error,745,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:866,safety,test,tested,866,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:896,safety,updat,updated,896,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:896,security,updat,updated,896,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:866,testability,test,tested,866,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:459,usability,error,error,459,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:745,usability,Error,Error,745,"Add #include <cstring> for std::memcpy; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10117:208,deployability,build,build,208,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:318,deployability,updat,updated,318,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:21,safety,test,test,21,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:288,safety,test,tested,288,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:318,safety,updat,updated,318,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:130,security,hardcod,hardcoded,130,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:318,security,updat,updated,318,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:21,testability,test,test,21,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10117:288,testability,test,tested,288,"Fixes for tmva-sofie test compilation; # This Pull request:. ## Changes or fixes:. - Link to the blas library found by cmake, not hardcoded ""blas"". - Set ROOTIGNOREPREFIX=1 when running built binaries during build. - Make sure PCH is created before running emitters. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10117
https://github.com/root-project/root/pull/10120:57,integrability,wrap,wrappers,57,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:248,integrability,wrap,wrapper,248,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:57,interoperability,wrapper,wrappers,57,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:248,interoperability,wrapper,wrapper,248,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:42,reliability,diagno,diagnostics,42,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:232,reliability,diagno,diagnostics,232,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:42,testability,diagno,diagnostics,42,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:232,testability,diagno,diagnostics,232,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10121:191,deployability,updat,updated,191,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:161,safety,test,tested,161,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:191,safety,updat,updated,191,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:191,security,updat,updated,191,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:161,testability,test,tested,161,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:8,usability,document,document,8,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:35,usability,command,commands,35,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:89,usability,document,documents,89,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:112,usability,command,commands,112,[docu]: document more ROOT special commands; # This Pull request:. ## Changes or fixes:. documents ROOT special commands that were missing. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10065.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10123:68,availability,error,error,68,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:145,availability,error,error,145,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:212,availability,error,error,212,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:68,performance,error,error,68,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:145,performance,error,error,145,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:212,performance,error,error,212,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:43,reliability,diagno,diagnostics,43,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:105,reliability,diagno,diagnostics,105,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:68,safety,error,error,68,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:145,safety,error,error,145,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:212,safety,error,error,212,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:371,safety,test,tests,371,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:43,testability,diagno,diagnostics,43,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:105,testability,diagno,diagnostics,105,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:366,testability,unit,unit,366,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:371,testability,test,tests,371,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:68,usability,error,error,68,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:145,usability,error,error,145,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:212,usability,error,error,212,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:248,usability,user,user,248,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:455,usability,close,closes,455,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler; This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10124:250,deployability,updat,updated,250,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:0,interoperability,specif,specify,0,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:94,interoperability,specif,specify,94,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:220,safety,test,tested,220,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:250,safety,updat,updated,250,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:250,security,updat,updated,250,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10124:220,testability,test,tested,220,specify that multiple ROOT files can be opened; . # This Pull request:. ## Changes or fixes:. specify that multiple ROOT files can be opened from CLI args. and point to manual for compilation flags. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10124
https://github.com/root-project/root/pull/10125:217,deployability,updat,updated,217,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10125:158,interoperability,format,format,158,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10125:187,safety,test,tested,187,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10125:217,safety,updat,updated,217,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10125:217,security,updat,updated,217,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10125:187,testability,test,tested,187,"[cling] add missing newline and separating space; # This Pull request:. ## Changes or fixes:. If you type "".typedef"" in the ROOT prompt, it prints with weird format. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10126:96,availability,operat,operation,96,Add RMergeableValue<THnD> to LinkDef.h; The introduction of a mergeable value for the `HistoND` operation did. not add the corresponding instance to the LinkDef.h file. This leads to. warnings issued when using such mergeable value (notably in distributed. mode) that there is no dictionary for that class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10126
https://github.com/root-project/root/pull/10126:244,interoperability,distribut,distributed,244,Add RMergeableValue<THnD> to LinkDef.h; The introduction of a mergeable value for the `HistoND` operation did. not add the corresponding instance to the LinkDef.h file. This leads to. warnings issued when using such mergeable value (notably in distributed. mode) that there is no dictionary for that class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10126
https://github.com/root-project/root/pull/10127:16,deployability,fail,failing,16,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:75,deployability,fail,fails,75,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:251,performance,time,time,251,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:16,reliability,fail,failing,16,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:75,reliability,fail,fails,75,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:70,safety,test,test,70,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:82,security,access,access,82,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:70,testability,test,test,70,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:197,usability,command,command,197,[win64] Disable failing stresshistofit-interpreted on Windows 64; The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10128:103,availability,operat,operation,103,[6.26] Add RMergeableValue<THnD> to LinkDef.h; The introduction of a mergeable value for the `HistoND` operation did. not add the corresponding instance to the LinkDef.h file. This leads to. warnings issued when using such mergeable value (notably in distributed. mode) that there is no dictionary for that class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10128
https://github.com/root-project/root/pull/10128:251,interoperability,distribut,distributed,251,[6.26] Add RMergeableValue<THnD> to LinkDef.h; The introduction of a mergeable value for the `HistoND` operation did. not add the corresponding instance to the LinkDef.h file. This leads to. warnings issued when using such mergeable value (notably in distributed. mode) that there is no dictionary for that class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10128
https://github.com/root-project/root/pull/10129:7,deployability,Updat,Update,7,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:15,deployability,log,logo,15,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:84,deployability,updat,updates,84,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:97,deployability,log,logo,97,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:187,deployability,releas,release,187,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:672,deployability,updat,updated,672,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:751,deployability,build,build,751,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:1,energy efficiency,core,core,1,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:151,energy efficiency,current,currently,151,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:757,reliability,doe,does,757,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:7,safety,Updat,Update,7,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:15,safety,log,logo,15,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:84,safety,updat,updates,84,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:97,safety,log,logo,97,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:642,safety,test,tested,642,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:672,safety,updat,updated,672,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:7,security,Updat,Update,7,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:15,security,log,logo,15,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:84,security,updat,updates,84,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:97,security,log,logo,97,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:343,security,Team,Team,343,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:672,security,updat,updated,672,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:15,testability,log,logo,15,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:97,testability,log,logo,97,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:642,testability,test,tested,642,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:492,usability,help,help,492,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:940,usability,help,helps,940,"[core] Update ""logo"" to 2022 (NFC).; # This Pull request:. ## Changes or fixes:. It updates the ""logo"" to reference `2022` instead of `2021`, which is currently still shown in the latest release:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 03 2022, 06:51:13 |. | From tags/v6-26-00@v6-26-00 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). I realized just now my shiny new ROOT 6.26.00 build does not yet mention 2022 — so this PR essentially repeats the yearly chore:. https://github.com/root-project/root/commit/aeb621a5bc4bf86796598e63d3ceb6e12c94d87c. :wink: . Hope this helps,. Oliver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/issues/10131:28,deployability,version,versioned,28,"Open too many different non-versioned layouts for pair; As reported originally at: https://github.com/cms-sw/cmssw/issues/37113, TClass/TStreamerInfo can complain that they are too many StreamerInfo for an std::class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:28,integrability,version,versioned,28,"Open too many different non-versioned layouts for pair; As reported originally at: https://github.com/cms-sw/cmssw/issues/37113, TClass/TStreamerInfo can complain that they are too many StreamerInfo for an std::class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:28,modifiability,version,versioned,28,"Open too many different non-versioned layouts for pair; As reported originally at: https://github.com/cms-sw/cmssw/issues/37113, TClass/TStreamerInfo can complain that they are too many StreamerInfo for an std::class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:154,safety,compl,complain,154,"Open too many different non-versioned layouts for pair; As reported originally at: https://github.com/cms-sw/cmssw/issues/37113, TClass/TStreamerInfo can complain that they are too many StreamerInfo for an std::class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:154,security,compl,complain,154,"Open too many different non-versioned layouts for pair; As reported originally at: https://github.com/cms-sw/cmssw/issues/37113, TClass/TStreamerInfo can complain that they are too many StreamerInfo for an std::class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/pull/10132:180,availability,consist,consistent,180,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:518,deployability,infrastructur,infrastructure,518,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:640,deployability,infrastructur,infrastructure,640,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:731,deployability,version,version,731,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:746,deployability,version,versioned,746,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:824,deployability,version,version,824,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:95,energy efficiency,core,core,95,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:16,integrability,schema,schema,16,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:700,integrability,schema,schema,700,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:731,integrability,version,version,731,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:746,integrability,version,versioned,746,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:824,integrability,version,version,824,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:994,integrability,schema,schema,994,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:731,modifiability,version,version,731,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:746,modifiability,version,versioned,746,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:824,modifiability,version,version,824,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:1012,reliability,doe,does,1012,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:434,security,sign,signed,434,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:1052,security,checksum,checksum,1052,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:180,usability,consist,consistent,180,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:798,usability,user,user,798,"Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/issues/10133:616,security,Team,Team,616,"[textinput] CTRL+T eats prompt label; ### Describe the bug. Type ""abcdefgh"" in ROOT prompt. Start then pressing repeatedly Ctrl+T (transpose two characters). You will end up ""removing"" the root[1] label. ### Expected behavior. It should stop before the root[1] label. ### To Reproduce. - Type ""abcdefgh"" in ROOT prompt without pressing Enter. - Start then pressing repeatedly Ctrl+T (transpose two characters). - You will end up ""removing"" the root[1] label. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121#discussion_r827699644.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10133
https://github.com/root-project/root/issues/10133:965,testability,context,context,965,"[textinput] CTRL+T eats prompt label; ### Describe the bug. Type ""abcdefgh"" in ROOT prompt. Start then pressing repeatedly Ctrl+T (transpose two characters). You will end up ""removing"" the root[1] label. ### Expected behavior. It should stop before the root[1] label. ### To Reproduce. - Type ""abcdefgh"" in ROOT prompt without pressing Enter. - Start then pressing repeatedly Ctrl+T (transpose two characters). - You will end up ""removing"" the root[1] label. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121#discussion_r827699644.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10133
https://github.com/root-project/root/issues/10133:217,usability,behavi,behavior,217,"[textinput] CTRL+T eats prompt label; ### Describe the bug. Type ""abcdefgh"" in ROOT prompt. Start then pressing repeatedly Ctrl+T (transpose two characters). You will end up ""removing"" the root[1] label. ### Expected behavior. It should stop before the root[1] label. ### To Reproduce. - Type ""abcdefgh"" in ROOT prompt without pressing Enter. - Start then pressing repeatedly Ctrl+T (transpose two characters). - You will end up ""removing"" the root[1] label. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121#discussion_r827699644.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10133
https://github.com/root-project/root/issues/10133:237,usability,stop,stop,237,"[textinput] CTRL+T eats prompt label; ### Describe the bug. Type ""abcdefgh"" in ROOT prompt. Start then pressing repeatedly Ctrl+T (transpose two characters). You will end up ""removing"" the root[1] label. ### Expected behavior. It should stop before the root[1] label. ### To Reproduce. - Type ""abcdefgh"" in ROOT prompt without pressing Enter. - Start then pressing repeatedly Ctrl+T (transpose two characters). - You will end up ""removing"" the root[1] label. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121#discussion_r827699644.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10133
https://github.com/root-project/root/issues/10133:821,usability,help,help,821,"[textinput] CTRL+T eats prompt label; ### Describe the bug. Type ""abcdefgh"" in ROOT prompt. Start then pressing repeatedly Ctrl+T (transpose two characters). You will end up ""removing"" the root[1] label. ### Expected behavior. It should stop before the root[1] label. ### To Reproduce. - Type ""abcdefgh"" in ROOT prompt without pressing Enter. - Start then pressing repeatedly Ctrl+T (transpose two characters). - You will end up ""removing"" the root[1] label. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121#discussion_r827699644.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10133
https://github.com/root-project/root/issues/10135:410,security,Team,Team,410,"[textinput] CTRL+D missing newline after quitting.; ### Describe the bug. Pressing CTRL+D on an empty ROOT prompt exits it, but without adding a newline. ### Expected behavior. A newline is added. ### To Reproduce. Press CTRL+D on an empty ROOT prompt. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10135
https://github.com/root-project/root/issues/10135:759,testability,context,context,759,"[textinput] CTRL+D missing newline after quitting.; ### Describe the bug. Pressing CTRL+D on an empty ROOT prompt exits it, but without adding a newline. ### Expected behavior. A newline is added. ### To Reproduce. Press CTRL+D on an empty ROOT prompt. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10135
https://github.com/root-project/root/issues/10135:167,usability,behavi,behavior,167,"[textinput] CTRL+D missing newline after quitting.; ### Describe the bug. Pressing CTRL+D on an empty ROOT prompt exits it, but without adding a newline. ### Expected behavior. A newline is added. ### To Reproduce. Press CTRL+D on an empty ROOT prompt. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10135
https://github.com/root-project/root/issues/10135:615,usability,help,help,615,"[textinput] CTRL+D missing newline after quitting.; ### Describe the bug. Pressing CTRL+D on an empty ROOT prompt exits it, but without adding a newline. ### Expected behavior. A newline is added. ### To Reproduce. Press CTRL+D on an empty ROOT prompt. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10135
https://github.com/root-project/root/issues/10136:464,security,Team,Team,464,"[textinput] Esc,L and Esc,U not finding word boundary; ### Describe the bug. Esc,L and Esc,U are supposed to lower or upper the word, but they seem to apply on the character. ### Expected behavior. It applies capitalization on the word. ### To Reproduce. - Write AbCd EfGh. - Try to apply Esc,L, and Esc,U. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10136
https://github.com/root-project/root/issues/10136:813,testability,context,context,813,"[textinput] Esc,L and Esc,U not finding word boundary; ### Describe the bug. Esc,L and Esc,U are supposed to lower or upper the word, but they seem to apply on the character. ### Expected behavior. It applies capitalization on the word. ### To Reproduce. - Write AbCd EfGh. - Try to apply Esc,L, and Esc,U. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10136
https://github.com/root-project/root/issues/10136:188,usability,behavi,behavior,188,"[textinput] Esc,L and Esc,U not finding word boundary; ### Describe the bug. Esc,L and Esc,U are supposed to lower or upper the word, but they seem to apply on the character. ### Expected behavior. It applies capitalization on the word. ### To Reproduce. - Write AbCd EfGh. - Try to apply Esc,L, and Esc,U. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10136
https://github.com/root-project/root/issues/10136:669,usability,help,help,669,"[textinput] Esc,L and Esc,U not finding word boundary; ### Describe the bug. Esc,L and Esc,U are supposed to lower or upper the word, but they seem to apply on the character. ### Expected behavior. It applies capitalization on the word. ### To Reproduce. - Write AbCd EfGh. - Try to apply Esc,L, and Esc,U. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10136
https://github.com/root-project/root/issues/10137:370,deployability,stack,stackoverflow,370,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:423,deployability,Updat,Update,423,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:282,interoperability,Bind,Bind,282,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:282,modifiability,Bind,Bind,282,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:423,safety,Updat,Update,423,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:423,security,Updat,Update,423,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:784,security,command-lin,command-line-editing,784,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:741,testability,context,context,741,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:139,usability,command,command,139,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:191,usability,command,command,191,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/issues/10137:784,usability,command,command-line-editing,784,[textinput] forward search; ### Is your feature request related to a problem? Please describe. CTRL+R works great for backward searching a command. Sometimes you click twice and you lose the command you wanted. There is no way to go backwards. ### Describe the solution you'd like. Bind CTRL+S (and/or Ctrl+Shift+R) for forward search. As done usually in Linux: https://stackoverflow.com/a/791800/7471760. Reminder:. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Additional context. https://root-forum.cern.ch/t/root-command-line-editing/13648/15. https://github.com/root-project/root/pull/10121,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10137
https://github.com/root-project/root/pull/10138:228,integrability,buffer,buffers,228,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/pull/10138:335,testability,simpl,simple,335,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/pull/10138:27,usability,help,helpers,27,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/pull/10138:53,usability,help,helper,53,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/pull/10138:216,usability,help,helper,216,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/pull/10138:335,usability,simpl,simple,335,"[DF] Better names for fill helpers; The generic fill helper was called FillParHelper, now it is just. called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers. values and delayes the actual histogram filling to the end of the. processing had the deceptively simple name FillHelper, it is now. called DelayedFillHelper to call out that it is doing something. interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10138
https://github.com/root-project/root/issues/10139:227,integrability,discover,discovered,227,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:227,interoperability,discover,discovered,227,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:44,usability,custom,customization,44,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:109,usability,custom,customize,109,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:227,usability,discov,discovered,227,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:285,usability,custom,customize,285,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:445,usability,document,documentation,445,"TEfficiency: missing doc/example about axis customization; Missing an explicit example or entry about how to customize the axis of a TEfficiency (e.g. xrange, xlabel, label font, etc.). After digging into the ROOT forum I have discovered the GetPaintedGraph method which allowed me to customize my plot. To be honest, I am not even sure this is the right solution but it works well. I think t it would be nice to have a reference/example in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10140:554,deployability,depend,dependent,554,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:577,deployability,fail,failed,577,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:554,integrability,depend,dependent,554,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:268,modifiability,variab,variables,268,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:554,modifiability,depend,dependent,554,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:577,reliability,fail,failed,577,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:554,safety,depend,dependent,554,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:970,security,Team,Team,970,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:502,testability,Assert,Assertion,502,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:554,testability,depend,dependent,554,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1319,testability,context,context,1319,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:375,usability,tool,tools,375,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:603,usability,behavi,behavior,603,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1175,usability,help,help,1175,"[cling] crash with .Class; ### Describe the bug. A crash is produced if you type `.Class` in the ROOT prompt. ```. ===========================================================================. struct std::atomic<_Tp *>. SIZE: (NA) FILE: atomic LINE: -1. List of member variables --------------------------------------------------. root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```. ### Expected behavior. No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce. `.Class. `. or `.Class TTree`. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/pull/10141:26,availability,error,errors,26,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:118,availability,error,error,118,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:149,availability,error,error,149,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:217,availability,error,error,217,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:26,performance,error,errors,26,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:118,performance,error,error,118,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:149,performance,error,error,149,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:217,performance,error,error,217,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:26,safety,error,errors,26,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:118,safety,error,error,118,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:149,safety,error,error,149,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:217,safety,error,error,217,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:26,usability,error,errors,26,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:118,usability,error,error,118,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:149,usability,error,error,149,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:217,usability,error,error,217,Fix potential compilation errors on Windows; Fix either (in `RelWithDebInfo` mode):. ```. datasource_more.cxx : fatal error C1001: Internal compiler error. ```. Or (in `Debug` mode):. ```. datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10142:287,availability,operat,operator,287,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:99,interoperability,bind,binded,99,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:99,modifiability,bind,binded,99,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:446,safety,test,tested,446,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:446,testability,test,tested,446,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:82,usability,command,command,82,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:158,usability,cursor,cursor,158,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:203,usability,behavi,behavior,203,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:233,usability,cursor,cursor,233,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10142:375,usability,behavi,behavior,375,"[textinput] Fix implementation of `kCmdSwapThisAndLeftThenMoveRight`; This editor command (usually binded to Ctrl+T), transposes the character located at the cursor and the one to its left. However, its behavior was incorrect if the cursor was at end of the line, invoking `std::string::operator[]()` passing an index that is out of bounds. In that case, as per GNU Readline behavior, it should swap the two last characters. ## Checklist:. - [X] tested changes locally. This PR fixes #10133.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10142
https://github.com/root-project/root/pull/10143:257,deployability,updat,updated,257,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:227,safety,test,tested,227,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:257,safety,updat,updated,257,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:65,security,session,session,65,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:165,security,session,session,165,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:257,security,updat,updated,257,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:227,testability,test,tested,227,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10143:97,usability,aesthet,aesthetic,97,[textinput] Add a missing new-line after `.q` if quitting a ROOT session via Ctrl+D (EOF); Minor aesthetic fix: add a missing new-line after `.q` if quitting a ROOT session via the Ctrl+D keybinding (EOF). ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10135.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10143
https://github.com/root-project/root/pull/10144:278,deployability,updat,updated,278,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:248,safety,test,tested,248,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:278,safety,updat,updated,278,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:278,security,updat,updated,278,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:248,testability,test,tested,248,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:71,usability,command,commands,71,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10144:87,usability,command,commands,87,"[textinput] Fix implementation of the `kCmdWordTo{Lower,Upper}` editor commands; These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10144
https://github.com/root-project/root/pull/10145:1306,deployability,updat,updated,1306,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:681,energy efficiency,alloc,allocator,681,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:812,energy efficiency,alloc,allocator,812,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:909,energy efficiency,alloc,allocator,909,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:935,energy efficiency,alloc,allocator,935,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1017,energy efficiency,alloc,allocator,1017,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1107,energy efficiency,load,load,1107,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:40,integrability,pub,public,40,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1235,integrability,pub,public,1235,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1130,interoperability,share,shared,1130,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1107,performance,load,load,1107,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1276,safety,test,tested,1276,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1306,safety,updat,updated,1306,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:745,security,hash,hash,745,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1306,security,updat,updated,1306,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:1276,testability,test,tested,1276,"Move private declarations away from the public header file; This fixes warnings such as these:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'! You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&). Maybe you need to load the corresponding shared library? ```. # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/issues/10146:176,availability,error,error,176,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:391,availability,error,error,391,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2724,availability,Operat,Operating,2724,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:102,deployability,build,build,102,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:145,deployability,build,build,145,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:151,deployability,fail,fails,151,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:207,deployability,build,builddir,207,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:216,deployability,build,build,216,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:222,deployability,BUILD,BUILD,222,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:291,deployability,build,builddir,291,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:300,deployability,build,build,300,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:306,deployability,BUILD,BUILD,306,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:338,deployability,build,build,338,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:1614,deployability,build,build,1614,"9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2526,deployability,Build,Build,2526,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2610,deployability,Build,Build,2610,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2616,deployability,fail,fails,2616,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2703,deployability,version,version,2703,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2794,deployability,Build,Build,2794,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2825,deployability,build,build,2825,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2843,deployability,build,build,2843,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2703,integrability,version,version,2703,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:48,interoperability,architectur,architectures,48,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2554,interoperability,architectur,architecture,2554,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2703,modifiability,version,version,2703,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2817,modifiability,pac,package,2817,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:176,performance,error,error,176,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:391,performance,error,error,391,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2359,performance,memor,memory,2359,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:151,reliability,fail,fails,151,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2616,reliability,fail,fails,2616,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:176,safety,error,error,176,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:252,safety,test,test,252,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:257,safety,Test,TestCustomModelsFromROOT,257,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:355,safety,test,test,355,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:391,safety,error,error,391,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:252,testability,test,test,252,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:257,testability,Test,TestCustomModelsFromROOT,257,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:355,testability,test,test,355,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:176,usability,error,error,176,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:391,usability,error,error,391,"Byte swapped floats in TMVA sofie on big endian architectures (s390x); ### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:. /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope. 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2359,usability,memor,memory,2359,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2380,usability,behavi,behavior,2380,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:2512,usability,behavi,behavior,2512,"1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.0659839064, -0.0958536118, 0.0788409114, 0.0107072359, 0.0492983423, -0.02552481, .... Here the numbers vary in a more reasonable manner, and there are no ""nan"". The output on s390x looks like what you would get in case you printed out floats that have been stored in the wrong byte order in memory. ### Expected behavior. The file generated on s390x should look similar to the file generated on x86_64. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for a big endian architecture (e.g. s390x) with -Dtmva-sofie:BOOL=ON. 2. Build fails at the point where it tries to include autogenerated headers. ### Setup. 1. ROOT version: 6.26.00. 2. Operating system: Fedora rawhide for s390x. 3. How you obtained ROOT: Build from source in a package build on Fedora's build server (koji).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10147:961,availability,sla,slashes,961,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:26,deployability,build,build,26,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:599,deployability,automat,automatically,599,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:996,integrability,transform,transforms,996,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:834,interoperability,specif,specific,834,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:996,interoperability,transform,transforms,996,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:1213,interoperability,specif,specified,1213,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:961,reliability,sla,slashes,961,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:1488,reliability,doe,does,1488,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:238,safety,avoid,avoid,238,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:847,safety,avoid,avoid,847,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:797,security,hash,hash-generated,797,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:599,testability,automat,automatically,599,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:1541,testability,context,context,1541,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:1297,usability,user,user-config,1297,"Compile macro inside temp build directory; ### Is your feature request related to a problem? Please describe. Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like. It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:. - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path). - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other. . The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: . `root -l my/full/path/to/folder/my_macro.C+t`. should give:. `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered. Using. `gSystem->SetBuildDir(""/tmp/"");`. in my `rootlogon.C`. But this does not solve the overwrite problem. ### Additional context. https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10148:142,deployability,configurat,configuration,142,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:389,deployability,configurat,configuration,389,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:614,deployability,configurat,configuration,614,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:775,deployability,depend,depending,775,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:108,integrability,configur,configured,108,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:142,integrability,configur,configuration,142,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:389,integrability,configur,configuration,389,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:614,integrability,configur,configuration,614,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:775,integrability,depend,depending,775,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:541,interoperability,share,share,541,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:879,interoperability,platform,platform-specific-notes,879,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:108,modifiability,configur,configured,108,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:142,modifiability,configur,configuration,142,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:389,modifiability,configur,configuration,389,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:614,modifiability,configur,configuration,614,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:775,modifiability,depend,depending,775,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:775,safety,depend,depending,775,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:108,security,configur,configured,108,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:142,security,configur,configuration,142,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:389,security,configur,configuration,389,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:614,security,configur,configuration,614,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:1157,security,Team,Team,1157,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:640,testability,understand,understand,640,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:775,testability,depend,depending,775,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:1362,usability,help,help,1362,"Move ROOT settings files to config/root directory; ### Explain what you would like to see improved. ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved. For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:. - https://github.com/Malvineous/cfgpath. - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes. - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/pull/10151:165,energy efficiency,optim,optimization,165,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:249,energy efficiency,measur,measurably,249,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:310,energy efficiency,profil,profile,310,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:41,interoperability,share,shared,41,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:153,performance,performance optim,performance optimization,153,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:310,performance,profil,profile,310,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:153,usability,perform,performance,153,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:269,usability,workflow,workflows,269,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:350,usability,workflow,workflow,350,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:445,usability,navigat,navigator,445,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10151:547,usability,navigat,navigator,547,"[RF] Use `TUUID` directly as the key for shared property maps; Before, the expensive `TUUID::AsString` function was used to generate. the key. This is a performance optimization that speeds up the RooRealVar. destructor by about a factor ten, which measurably benefits workflows. with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:. * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys. * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10151
https://github.com/root-project/root/pull/10153:17,performance,I/O,I/O,17,"[VecOps] Support I/O of RVec<std::string>; In other words, generate dictionaries for RVec<std::string> as part. of libROOTVecOps. This is to stay in line with std::vector: I/O of. std::vector<std::string> is supported ""out of the box"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10153
https://github.com/root-project/root/pull/10153:172,performance,I/O,I/O,172,"[VecOps] Support I/O of RVec<std::string>; In other words, generate dictionaries for RVec<std::string> as part. of libROOTVecOps. This is to stay in line with std::vector: I/O of. std::vector<std::string> is supported ""out of the box"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10153
https://github.com/root-project/root/pull/10153:9,usability,Support,Support,9,"[VecOps] Support I/O of RVec<std::string>; In other words, generate dictionaries for RVec<std::string> as part. of libROOTVecOps. This is to stay in line with std::vector: I/O of. std::vector<std::string> is supported ""out of the box"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10153
https://github.com/root-project/root/pull/10153:208,usability,support,supported,208,"[VecOps] Support I/O of RVec<std::string>; In other words, generate dictionaries for RVec<std::string> as part. of libROOTVecOps. This is to stay in line with std::vector: I/O of. std::vector<std::string> is supported ""out of the box"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10153
https://github.com/root-project/root/issues/10155:47,availability,error,errors,47,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:212,availability,error,error,212,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:520,availability,error,error,520,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:846,availability,error,error,846,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1074,availability,error,error,1074,"Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1260,availability,error,error,1260,". [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1426,availability,error,error,1426,"/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘Clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1658,availability,error,error,1658,"/Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2134,availability,error,error,2134," *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2356,availability,error,error,2356,"). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2621,availability,error,error,2621,"0/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2831,availability,error,error,2831,"rams, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3061,availability,error,error,3061,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3366,availability,Error,Error,3366,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3458,availability,Error,Error,3458,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3497,availability,Error,Error,3497,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3775,availability,Operat,Operating,3775,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3840,availability,Down,Downloaded,3840,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:17,deployability,fail,fails,17,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:155,deployability,build,build,155,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:161,deployability,fail,fails,161,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:170,deployability,build,build,170,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:272,deployability,Build,Building,272,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1479,deployability,Build,BuildEmulatedRealData,1479,"core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3286,deployability,build,build,3286,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3571,deployability,build,building,3571,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3721,deployability,build,build,3721,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3753,deployability,version,version,3753,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3898,deployability,releas,releases,3898,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3907,deployability,releas,release-,3907,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:490,energy efficiency,core,core,490,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:815,energy efficiency,core,core,815,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1043,energy efficiency,core,core,1043,"n errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1229,energy efficiency,core,core,1229,"`. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1395,energy efficiency,core,core,1395,"t/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1626,energy efficiency,core,core,1626,"reamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1911,energy efficiency,core,core,1911,"72 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2104,energy efficiency,core,core,2104,"mber declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2326,energy efficiency,core,core,2326,"ngptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2590,energy efficiency,core,core,2590," /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2800,energy efficiency,core,core,2800,"const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3030,energy efficiency,core,core,3030,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:218,integrability,messag,messages,218,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:662,integrability,Wrap,Wrapper,662,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3753,integrability,version,version,3753,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:218,interoperability,messag,messages,218,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:662,interoperability,Wrapper,Wrapper,662,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:695,interoperability,convers,conversion,695,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1733,interoperability,conflict,conflicts,1733,"~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3753,modifiability,version,version,3753,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:47,performance,error,errors,47,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:212,performance,error,error,212,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:520,performance,error,error,520,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:846,performance,error,error,846,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1074,performance,error,error,1074,"Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1260,performance,error,error,1260,". [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1426,performance,error,error,1426,"/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘Clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1658,performance,error,error,1658,"/Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2134,performance,error,error,2134," *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2356,performance,error,error,2356,"). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2621,performance,error,error,2621,"0/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2831,performance,error,error,2831,"rams, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3061,performance,error,error,3061,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3366,performance,Error,Error,3366,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3458,performance,Error,Error,3458,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3497,performance,Error,Error,3497,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:17,reliability,fail,fails,17,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:161,reliability,fail,fails,161,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:553,reliability,doe,does,553,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:865,reliability,doe,does,865,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2153,reliability,doe,does,2153,"ongptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2389,reliability,doe,does,2389,".00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2854,reliability,doe,does,2854,"onst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3084,reliability,doe,does,3084,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:47,safety,error,errors,47,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:212,safety,error,error,212,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:520,safety,error,error,520,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:846,safety,error,error,846,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1074,safety,error,error,1074,"Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1260,safety,error,error,1260,". [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1426,safety,error,error,1426,"/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘Clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1658,safety,error,error,1658,"/Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2134,safety,error,error,2134," *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2356,safety,error,error,2356,"). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2621,safety,error,error,2621,"0/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2831,safety,error,error,2831,"rams, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3061,safety,error,error,3061,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3366,safety,Error,Error,3366,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3458,safety,Error,Error,3458,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3497,safety,Error,Error,3497,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:47,usability,error,errors,47,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:212,usability,error,error,212,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:520,usability,error,error,520,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:688,usability,custom,custom,688,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:846,usability,error,error,846,"Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1074,usability,error,error,1074,"Bullseye; - [X] Checked for duplicates. ### Describe the bug. The source code build fails at build target G__Gviz3d with the following error messages:. ```. [ 96%] Built target G__Gviz3d. [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1260,usability,error,error,1260,". [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o. In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1426,usability,error,error,1426,"/TStructNodeEditor.cxx:21:. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘Clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:1658,usability,error,error,1658,"/Wrapper around this class custom conversion Streamer member function. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2134,usability,error,error,2134," *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. | ;. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ~ ^~~~~~. | ). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2356,usability,error,error,2356,"). /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared. 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);. | ^~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2621,usability,error,error,2621,"0/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration. 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:2831,usability,error,error,2831,"rams, Bool_t objectIsConst = kFALSE);. | ^. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3061,usability,error,error,3061,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3366,usability,Error,Error,3366,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3458,usability,Error,Error,3458,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3497,usability,Error,Error,3497,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3552,usability,behavi,behavior,3552,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:3620,usability,command,command,3620,"nc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’. 289 | TMethod *GetClassMethod(Longptr_t faddr);. | ^~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’? 424 | Longptr_t GetDataMemberOffset(const char *membername) const;. | ^~~~~~~~~. | Long64_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’? 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;. | ^~~~~~~~~~~~~~~~~~~~~~~. | ClassStreamerFunc_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared. 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);. | ^~~~~~~~~~~~~~~~~~~~~~~. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 583 | static DictFuncPtr_t GetDict (const char *cname);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’? 584 | static DictFuncPtr_t GetDict (const std::type_info &info);. | ^~~~~~~~~~~~~. | VoidFuncPtr_t. make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2. make: *** [Makefile:171: all] Error 2. ```. ### To Reproduce. Steps to reproduce the behavior:. 1. I am building root through the CMake program with the command as recommended:. ```. $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src . $ cmake --build . ```. ### Setup. 1. ROOT version = 6.26.00. 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4. 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/pull/10156:234,deployability,updat,updated,234,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:29,interoperability,format,format,29,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:98,interoperability,format,format,98,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:204,safety,test,tested,204,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:234,safety,updat,updated,234,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:234,security,updat,updated,234,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/pull/10156:204,testability,test,tested,204,[cling] fix typo and doxygen format; # This Pull request:. ## Changes or fixes:. Typo and doxygen format. See:. https://cling.web.cern.ch/cling/doxygen/classcling_1_1MetaParser.html. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10156
https://github.com/root-project/root/issues/10157:332,deployability,version,version,332,"[DF] Histo1D pythonization should allow template arguments; This doesn't work:. ```python. ROOT.RDataFrame(10).Histo1D['unsigned int'](""rdfslot_""). ```. and gives a . ```. TypeError: 'functools.partial' object is not subscriptable. ```. However it is possible to call the original method with template arguments, and the pythonized version should still allow it:. ```python. ROOT.RDataFrame(10)._OriginalHisto1D['unsigned int'](""rdfslot_"") # works. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/issues/10157:217,integrability,sub,subscriptable,217,"[DF] Histo1D pythonization should allow template arguments; This doesn't work:. ```python. ROOT.RDataFrame(10).Histo1D['unsigned int'](""rdfslot_""). ```. and gives a . ```. TypeError: 'functools.partial' object is not subscriptable. ```. However it is possible to call the original method with template arguments, and the pythonized version should still allow it:. ```python. ROOT.RDataFrame(10)._OriginalHisto1D['unsigned int'](""rdfslot_"") # works. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/issues/10157:332,integrability,version,version,332,"[DF] Histo1D pythonization should allow template arguments; This doesn't work:. ```python. ROOT.RDataFrame(10).Histo1D['unsigned int'](""rdfslot_""). ```. and gives a . ```. TypeError: 'functools.partial' object is not subscriptable. ```. However it is possible to call the original method with template arguments, and the pythonized version should still allow it:. ```python. ROOT.RDataFrame(10)._OriginalHisto1D['unsigned int'](""rdfslot_"") # works. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/issues/10157:332,modifiability,version,version,332,"[DF] Histo1D pythonization should allow template arguments; This doesn't work:. ```python. ROOT.RDataFrame(10).Histo1D['unsigned int'](""rdfslot_""). ```. and gives a . ```. TypeError: 'functools.partial' object is not subscriptable. ```. However it is possible to call the original method with template arguments, and the pythonized version should still allow it:. ```python. ROOT.RDataFrame(10)._OriginalHisto1D['unsigned int'](""rdfslot_"") # works. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/issues/10157:65,reliability,doe,doesn,65,"[DF] Histo1D pythonization should allow template arguments; This doesn't work:. ```python. ROOT.RDataFrame(10).Histo1D['unsigned int'](""rdfslot_""). ```. and gives a . ```. TypeError: 'functools.partial' object is not subscriptable. ```. However it is possible to call the original method with template arguments, and the pythonized version should still allow it:. ```python. ROOT.RDataFrame(10)._OriginalHisto1D['unsigned int'](""rdfslot_"") # works. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/pull/10158:97,availability,operat,operator,97,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10158:317,deployability,continu,continues,317,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10158:225,reliability,doe,doesn,225,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10158:431,reliability,doe,doesn,431,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10158:29,security,hash,hash,29,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10158:573,security,hash,hash,573,"[RF] Fix recently-introduced hash table bug in `RooLinkedList`; In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used. to look up elements. However, this has the side effect that if the. elment for the key doesn't exists, it is implicitly created and. instantiated with `nullptr`! Now the desaster continues: new elements. are added in `RooLinkedList::Add()` via `unordered_map::insert()`. But `insert()` method doesn't do anything if an item already exists! This means that if you look up an element in a `RooLinkedList` that is. long enough to use the hash tables, and this element is not found,. adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to. @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10158
https://github.com/root-project/root/pull/10160:63,deployability,updat,update,63,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:235,deployability,version,version,235,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:235,integrability,version,version,235,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:393,integrability,configur,configure,393,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:235,modifiability,version,version,235,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:393,modifiability,configur,configure,393,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:403,performance,time,time,403,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:63,safety,updat,update,63,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:334,safety,input,input,334,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:63,security,updat,update,63,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:393,security,configur,configure,393,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/pull/10160:334,usability,input,input,334,"Fix TMVA tutorials using internally python; With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10160
https://github.com/root-project/root/issues/10162:267,availability,error,errors,267,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,availability,Error,Error,281,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:367,availability,Error,Error,367,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,availability,Error,Error,457,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:545,availability,Error,Error,545,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:630,availability,Error,Error,630,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:715,availability,Error,Error,715,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:801,availability,Error,Error,801,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:897,availability,Error,Error,897,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:993,availability,avail,available,993,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1256,availability,error,error,1256,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1341,availability,down,down,1341,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1566,availability,sli,slightly,1566,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:6,deployability,fail,fails,6,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:211,deployability,build,build,211,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:65,energy efficiency,Power,PowerPC,65,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:915,energy efficiency,Load,LoadClassInfo,915,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1140,energy efficiency,load,loading,1140,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1554,energy efficiency,load,loading,1554,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1046,integrability,rout,routine,1046,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:267,performance,error,errors,267,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,performance,Error,Error,281,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:367,performance,Error,Error,367,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,performance,Error,Error,457,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:545,performance,Error,Error,545,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:630,performance,Error,Error,630,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:715,performance,Error,Error,715,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:801,performance,Error,Error,801,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:897,performance,Error,Error,897,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:915,performance,Load,LoadClassInfo,915,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1140,performance,load,loading,1140,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1256,performance,error,error,1256,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1554,performance,load,loading,1554,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:6,reliability,fail,fails,6,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:993,reliability,availab,available,993,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1566,reliability,sli,slightly,1566,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:267,safety,error,errors,267,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,safety,Error,Error,281,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:367,safety,Error,Error,367,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,safety,Error,Error,457,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:545,safety,Error,Error,545,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:630,safety,Error,Error,630,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:715,safety,Error,Error,715,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:801,safety,Error,Error,801,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:897,safety,Error,Error,897,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:993,safety,avail,available,993,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1256,safety,error,error,1256,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:993,security,availab,available,993,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1062,testability,simpl,simple,1062,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1097,testability,simpl,simple,1097,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1332,testability,trace,trace,1332,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1575,testability,simpl,simpler,1575,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:267,usability,error,errors,267,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,usability,Error,Error,281,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:367,usability,Error,Error,367,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,usability,Error,Error,457,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:545,usability,Error,Error,545,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:630,usability,Error,Error,630,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:715,usability,Error,Error,715,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:801,usability,Error,Error,801,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:897,usability,Error,Error,897,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1062,usability,simpl,simple,1062,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1097,usability,simpl,simple,1097,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1256,usability,error,error,1256,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:1575,usability,simpl,simpler,1575,"Cling fails to find (or properly find) the dictionary symbols on PowerPC .. sometimes; Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:. ```. Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```. A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:. ```. root[0] .L path_to_celeritas_build/libceleritas_root.so. ```. leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:. ```. std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);. ```. for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/pull/10163:94,availability,error,error,94,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:125,availability,error,error,125,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:168,availability,error,error,168,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:94,performance,error,error,94,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:125,performance,error,error,125,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:168,performance,error,error,168,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:94,safety,error,error,94,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:125,safety,error,error,125,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:168,safety,error,error,168,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:94,usability,error,error,94,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:125,usability,error,error,125,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10163:168,usability,error,error,168,[skip-ci][win] Fix compilation of datasource-more on Windows; Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10163
https://github.com/root-project/root/pull/10164:211,deployability,automat,automatically,211,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:225,deployability,updat,update,225,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:239,energy efficiency,draw,drawing,239,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:19,integrability,sub,sub-directory,19,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:68,integrability,sub,sub-directory,68,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:175,integrability,sub,sub-directory,175,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:58,performance,time,time,58,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:225,safety,updat,update,225,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:150,security,access,access,150,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:225,security,updat,update,225,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:257,security,modif,modified,257,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:211,testability,automat,automatically,211,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:132,usability,help,helps,132,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:192,usability,command,command,192,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:273,usability,command,command,273,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10164:307,usability,command,command,307,"[rbrowser] Improve sub-directory browsing in TFile; Every time when sub-directory items are requested, set it as `gDirectory`. This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10164
https://github.com/root-project/root/pull/10165:31,integrability,sub,subdirectories,31,[rbrowser] improve browsing of subdirectories in TFile (6.26); Backport of https://github.com/root-project/root/pull/10164.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10165
https://github.com/root-project/root/issues/10166:594,deployability,version,version,594,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:614,deployability,fail,fail,614,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:86,energy efficiency,Current,Currently,86,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:594,integrability,version,version,594,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:264,interoperability,standard,standard,264,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:445,interoperability,format,format,445,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:594,modifiability,version,version,594,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/issues/10166:614,reliability,fail,fail,614,"`std::pair` return by CollectionProxy for std::map/multilmap is missing the `const` ; Currently we have:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<int,double>"". ```. where as the C++ standard requires:. ```. root [1] TClass::GetClass(""map<int,double>"")->GetCollectionProxy()->GetValueClass()->GetName(). (const char *) ""pair<const int,double>"". ```. As the binary format for both `pairs` is exactly the same this is a minor issue. However a consequence is that the auto-generation of the `TClass` for the `const` version will likely fail in some circumstances. See https://github.com/root-project/root/pull/10132/files#r829931867",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10166
https://github.com/root-project/root/pull/10167:265,availability,restor,restoring,265,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1325,availability,state,statement,1325,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1361,availability,restor,restored,1361,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1624,availability,state,statement,1624,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1911,availability,state,statement,1911,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:42,deployability,manag,manager,42,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1055,deployability,manag,manager,1055,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:42,energy efficiency,manag,manager,42,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:621,energy efficiency,Current,Currently,621,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1055,energy efficiency,manag,manager,1055,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1340,energy efficiency,current,current,1340,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1638,energy efficiency,current,current,1638,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:951,integrability,pub,public,951,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1325,integrability,state,statement,1325,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1624,integrability,state,statement,1624,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1911,integrability,state,statement,1911,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:433,performance,content,content,433,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:753,performance,time,time,753,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1244,performance,content,contents,1244,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:265,reliability,restor,restoring,265,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1361,reliability,restor,restored,1361,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:42,safety,manag,manager,42,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1055,safety,manag,manager,1055,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1759,security,modif,modify,1759,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1946,security,access,accessible,1946,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:34,testability,context,context,34,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1047,testability,context,context,1047,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:145,usability,user,user,145,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:390,usability,close,close,390,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:1814,usability,close,close,1814,"Enable TContext usage as a Python context manager; As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`. 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python. import ROOT. from ROOT import TDirectory. with TDirectory.TContext():. # Open some file here. file = ROOT.TFile(...). # Retrieve contents from the file. histo = file.Get(""myhisto""). ```. where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10171:338,deployability,updat,updated,338,[RF] Legacy iterators to range loops in `roofit/roofit` and `roostats`; # This Pull request:. Migration from RooAbsCollection and RooLinkedList legacy iterators to range-based loops. ## Changes or fixes:. PR includes migration of all the files from . * roofit/roofit. * roofit/roostats. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #8777.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:308,safety,test,tested,308,[RF] Legacy iterators to range loops in `roofit/roofit` and `roostats`; # This Pull request:. Migration from RooAbsCollection and RooLinkedList legacy iterators to range-based loops. ## Changes or fixes:. PR includes migration of all the files from . * roofit/roofit. * roofit/roostats. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #8777.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:338,safety,updat,updated,338,[RF] Legacy iterators to range loops in `roofit/roofit` and `roostats`; # This Pull request:. Migration from RooAbsCollection and RooLinkedList legacy iterators to range-based loops. ## Changes or fixes:. PR includes migration of all the files from . * roofit/roofit. * roofit/roostats. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #8777.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:338,security,updat,updated,338,[RF] Legacy iterators to range loops in `roofit/roofit` and `roostats`; # This Pull request:. Migration from RooAbsCollection and RooLinkedList legacy iterators to range-based loops. ## Changes or fixes:. PR includes migration of all the files from . * roofit/roofit. * roofit/roostats. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #8777.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:308,testability,test,tested,308,[RF] Legacy iterators to range loops in `roofit/roofit` and `roostats`; # This Pull request:. Migration from RooAbsCollection and RooLinkedList legacy iterators to range-based loops. ## Changes or fixes:. PR includes migration of all the files from . * roofit/roofit. * roofit/roostats. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #8777.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10172:29,deployability,build,build,29,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:125,deployability,build,build,125,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:255,deployability,updat,updated,255,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:225,safety,test,tested,225,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:255,safety,updat,updated,255,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:255,security,updat,updated,255,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10172:225,testability,test,tested,225,[docu] Mention option to set build dir via Rootrc; # This Pull request:. ## Changes or fixes:. Mention in docu option to set build dir via rootrc. Fixes https://github.com/root-project/root/issues/10147. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10172
https://github.com/root-project/root/pull/10173:186,availability,consist,consistent,186,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:524,deployability,infrastructur,infrastructure,524,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:646,deployability,infrastructur,infrastructure,646,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:737,deployability,version,version,737,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:752,deployability,version,versioned,752,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:830,deployability,version,version,830,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:101,energy efficiency,core,core,101,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:22,integrability,schema,schema,22,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:706,integrability,schema,schema,706,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:737,integrability,version,version,737,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:752,integrability,version,versioned,752,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:830,integrability,version,version,830,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:1000,integrability,schema,schema,1000,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:737,modifiability,version,version,737,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:752,modifiability,version,versioned,752,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:830,modifiability,version,version,830,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:1018,reliability,doe,does,1018,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:440,security,sign,signed,440,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:1058,security,checksum,checksum,1058,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:186,usability,consist,consistent,186,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10173:804,usability,user,user,804,"v624: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10173
https://github.com/root-project/root/pull/10174:186,availability,consist,consistent,186,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:524,deployability,infrastructur,infrastructure,524,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:646,deployability,infrastructur,infrastructure,646,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:737,deployability,version,version,737,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:752,deployability,version,versioned,752,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:830,deployability,version,version,830,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:101,energy efficiency,core,core,101,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:22,integrability,schema,schema,22,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:706,integrability,schema,schema,706,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:737,integrability,version,version,737,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:752,integrability,version,versioned,752,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:830,integrability,version,version,830,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:1000,integrability,schema,schema,1000,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:737,modifiability,version,version,737,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:752,modifiability,version,versioned,752,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:830,modifiability,version,version,830,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:1018,reliability,doe,does,1018,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:440,security,sign,signed,440,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:1058,security,checksum,checksum,1058,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:186,usability,consist,consistent,186,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10174:804,usability,user,user,804,"v626: Deal with multi schema layout for a pair (caused enum underlying type); This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10174
https://github.com/root-project/root/pull/10175:187,availability,consist,consistent,187,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:525,deployability,infrastructur,infrastructure,525,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:647,deployability,infrastructur,infrastructure,647,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:738,deployability,version,version,738,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:753,deployability,version,versioned,753,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:831,deployability,version,version,831,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:102,energy efficiency,core,core,102,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:22,integrability,schema,schema,22,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:707,integrability,schema,schema,707,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:738,integrability,version,version,738,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:753,integrability,version,versioned,753,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:831,integrability,version,version,831,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:1001,integrability,schema,schema,1001,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:738,modifiability,version,version,738,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:753,modifiability,version,versioned,753,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:831,modifiability,version,version,831,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:1019,reliability,doe,does,1019,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:441,security,sign,signed,441,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:1059,security,checksum,checksum,1059,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:187,usability,consist,consistent,187,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/pull/10175:805,usability,user,user,805,"v622: Deal with multi schema layout for a pair (caused enum underlying type; . This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data .... .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10175
https://github.com/root-project/root/issues/10178:327,availability,error,error,327,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:376,availability,Error,Error,376,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:415,availability,Error,Error,415,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:515,availability,error,error,515,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:564,availability,Error,Error,564,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:603,availability,Error,Error,603,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:899,availability,error,error,899,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1034,availability,Error,Error,1034,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:327,performance,error,error,327,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:376,performance,Error,Error,376,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:415,performance,Error,Error,415,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:515,performance,error,error,515,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:564,performance,Error,Error,564,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:603,performance,Error,Error,603,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:899,performance,error,error,899,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1034,performance,Error,Error,1034,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:28,safety,except,exception,28,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:113,safety,test,test,113,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:327,safety,error,error,327,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:376,safety,Error,Error,376,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:415,safety,Error,Error,415,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:515,safety,error,error,515,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:564,safety,Error,Error,564,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:603,safety,Error,Error,603,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:899,safety,error,error,899,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1034,safety,Error,Error,1034,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:352,security,ident,identifier,352,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:540,security,ident,identifier,540,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:924,security,ident,identifier,924,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1229,security,Team,Team,1229,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:113,testability,test,test,113,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:44,usability,undo,undo,44,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:121,usability,undo,undo,121,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:150,usability,behavi,behavior,150,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:237,usability,undo,undo,237,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:274,usability,undo,undo,274,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:290,usability,undo,undo,290,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:327,usability,error,error,327,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:376,usability,Error,Error,376,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:415,usability,Error,Error,415,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:515,usability,error,error,515,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:564,usability,Error,Error,564,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:603,usability,Error,Error,603,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:820,usability,undo,undo,820,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:859,usability,undo,undo,859,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:899,usability,error,error,899,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1034,usability,Error,Error,1034,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:1434,usability,help,help,1434,"[cling] crash / compilation exception after undo; ### Describe the bug. I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior. No crash. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_13:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_15:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_24:2:3: error: use of undeclared identifier 'x'. (x). ^. terminate called after throwing an instance of 'cling::CompilationException'. what(): Error evaluating expression (x). ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10180:2074,availability,operat,operator,2074,"619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2265,availability,operat,operator,2265,"/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5311,availability,operat,operator,5311," at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5502,availability,operat,operator,5502,"================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ========================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:265,deployability,stack,stack,265,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:837,deployability,Stack,StackTrace,837,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4779,deployability,stack,stack,4779,"chOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:559,energy efficiency,optim,optimized,559,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:763,energy efficiency,core,core,763,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:887,energy efficiency,core,core,887,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1047,energy efficiency,core,core,1047,"ut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1168,energy efficiency,core,core,1168,"===========================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1265,energy efficiency,core,core,1265,"ack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1462,energy efficiency,core,core,1462,"entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUnd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1628,energy efficiency,core,core,1628," in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1800,energy efficiency,alloc,allocator,1800,"0007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1891,energy efficiency,alloc,allocator,1891,"/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2055,energy efficiency,alloc,allocator,2055,"/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2146,energy efficiency,alloc,allocator,2146,"at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2314,energy efficiency,core,core,2314,"76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2491,energy efficiency,core,core,2491,"rminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2644,energy efficiency,core,core,2644,"/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:2871,energy efficiency,core,core,2871,"raits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3081,energy efficiency,core,core,3081,"(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3209,energy efficiency,core,core,3209,"dc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3333,energy efficiency,core,core,3333,"xtinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3453,energy efficiency,core,core,3453,"::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3577,energy efficiency,core,core,3577,"::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. Y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3701,energy efficiency,core,core,3701,"a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3851,energy efficiency,core,core,3851," at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. tha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:3971,energy efficiency,core,core,3971,"put (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4080,energy efficiency,core,core,4080,"ore/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4207,energy efficiency,core,core,4207,"core/textinput/src/Getline.cxx:256. #18 0x00007f065ac8f645 in TRint::HandleTermInput (this=0x55b131317310) at /opt/root_src/core/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4333,energy efficiency,core,core,4333,"re/rint/src/TRint.cxx:588. #19 0x00007f065ac8d1a1 in TTermInputHandler::Notify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:132. #20 0x00007f065ac91a07 in TTermInputHandler::ReadNotify (this=0x55b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5037,energy efficiency,alloc,allocator,5037,"this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5128,energy efficiency,alloc,allocator,5128," in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5292,energy efficiency,alloc,allocator,5292,"7310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5383,energy efficiency,alloc,allocator,5383,"main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5551,energy efficiency,core,core,5551," the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5728,energy efficiency,core,core,5728,"at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. --------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:5881,energy efficiency,core,core,5881,"sue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6108,energy efficiency,core,core,6108,"raits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6318,energy efficiency,core,core,6318,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6446,energy efficiency,core,core,6446,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4713,integrability,sub,submit,4713,"UnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:559,performance,optimiz,optimized,559,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1434,security,sign,signum,1434,"370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1600,security,sign,signum,1600,":149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:1688,security,sign,signal,1688,"02b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6851,security,Team,Team,6851,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:271,testability,trace,trace,271,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4785,testability,trace,trace,4785,"vent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:7200,testability,context,context,7200,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:38,usability,Undo,Undo,38,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:43,usability,shortcut,shortcut,43,"[textinput] segmentation violation on Undo shortcut; ### Describe the bug. ```. root -l. root [0] . *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc. entry=0x7ffe370ff9b8, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108. #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619. #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590. #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4546,usability,hint,hint,4546,"b13203f9e0) at /opt/root_src/core/rint/src/TRint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4590,usability,help,help,4590,"Rint.cxx:124. #21 0x00007f065a76fcb5 in TUnixSystem::CheckDescriptors (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1310. #22 0x00007f065a76ef2b in TUnixSystem::DispatchOneEvent (this=0x55b1312be7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:4861,usability,help,help,4861,"c/TUnixSystem.cxx:1065. #23 0x00007f065a654eb5 in TSystem::InnerLoop (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #24 0x00007f065a654c4a in TSystem::Run (this=0x55b1312be7c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #25 0x00007f065a5dce87 in TApplication::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607. #26 0x00007f065ac8ec5d in TRint::Run (this=0x55b131317310, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473. #27 0x000055b1304a30fe in main (argc=1, argv=0x7ffe37104bf8) at /opt/root_src/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6570,usability,behavi,behavior,6570,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6616,usability,undo,undo,6616,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6669,usability,undo,undo,6669,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:6674,usability,shortcut,shortcut,6674,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/issues/10180:7056,usability,help,help,7056,"<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f065a75e3b1 in textinput::Text::operator= (this=0x55b13203e698) at /opt/root_src/core/textinput/src/textinput/Text.h:29. #13 0x00007f065a75d374 in textinput::Editor::ProcessCommand (this=0x55b131ae5c50, M=textinput::Editor::kCmdUndo, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:386. #14 0x00007f065a75babe in textinput::Editor::Process (this=0x55b131ae5c50, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:65. #15 0x00007f065a76bc3b in textinput::TextInput::ProcessNewInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f065a76b8b5 in textinput::TextInput::ReadInput (this=0x7f065ac55820 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f065a75a2d9 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. Root > . ```. ### Expected behavior. Do not crash if there is nothing to undo. ### To Reproduce. Start root prompt. Press the undo shortcut. (CTRL+_). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10180
https://github.com/root-project/root/pull/10181:200,deployability,updat,updated,200,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:22,safety,prevent,prevent,22,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:170,safety,test,tested,170,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:200,safety,updat,updated,200,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:22,security,preven,prevent,22,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:30,security,access,accessing,30,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:141,security,access,access,141,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:200,security,updat,updated,200,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/pull/10181:170,testability,test,tested,170,[textinput] kCmdUndo: prevent accessing empty vector; # This Pull request:. ## Changes or fixes:. segmentation violation due to empty vector access. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10180,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/issues/10182:17,integrability,buffer,buffer,17,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:191,integrability,buffer,buffer,191,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:282,integrability,buffer,buffer,282,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:635,security,Team,Team,635,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:984,testability,context,context,984,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:12,usability,Undo,Undo,12,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:91,usability,undo,undo,91,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:96,usability,shortcut,shortcut,96,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:213,usability,behavi,behavior,213,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:277,usability,undo,undo,277,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:469,usability,undo,undoing,469,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:840,usability,help,help,840,"[textinput] Undo buffer misses one entry in the actual sequence; ### Describe the bug. The undo shortcut in the prompt editor misses one entry in the sequence (I guess it is not added to the buffer). ### Expected behavior. Entries where ENTER are pressed are also added to the undo buffer. ### To Reproduce. ```. root -l. root [0] int x. (int) 0. root [1] float y. (float) 0.00000f. // Start then pressing repeatedly CTRL+_. ```. --> Neither `x` nor `y` are shown when undoing. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/pull/10183:121,usability,user,users,121,"[DF] Move RActionImpl to a dedicated header; RActionImpl is not an internal implementation detail since a while:. expert users need to include RActionImpl to implement their own. action helpers. Let's put it in its own separate header, for clarity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10183
https://github.com/root-project/root/pull/10183:186,usability,help,helpers,186,"[DF] Move RActionImpl to a dedicated header; RActionImpl is not an internal implementation detail since a while:. expert users need to include RActionImpl to implement their own. action helpers. Let's put it in its own separate header, for clarity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10183
https://github.com/root-project/root/pull/10183:240,usability,clarit,clarity,240,"[DF] Move RActionImpl to a dedicated header; RActionImpl is not an internal implementation detail since a while:. expert users need to include RActionImpl to implement their own. action helpers. Let's put it in its own separate header, for clarity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10183
https://github.com/root-project/root/issues/10184:123,deployability,build,build,123,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:54,interoperability,Format,Format,54,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:266,interoperability,Format,Format,266,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:319,interoperability,format,format,319,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:326,interoperability,specif,specifies,326,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:448,interoperability,Format,Format,448,"[cling] Crash on invalid arguments passed to TString::Format; Reproducer with 6b8954d7e6cdbb92c8d93496a97e11a280f0809c and build type Debug, on Arch:. ```. ~ root -l. root [0] std::string_view treename = ""foobar"". (std::string_view &) ""foobar""[6]. root [1] TString::Format(""%s"", treename). ROOT_prompt_1:1:23: warning: format specifies type 'char *' but the argument has type 'std::string_view' (aka 'basic_string_view<char>') [-Wformat]. TString::Format(""%s"", treename). ~~ ^~~~~~~~. *** Break *** segmentation violation. ```. The code at `root [1]` is invalid, but the prompt should not segfault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/pull/10185:767,availability,cluster,cluster,767,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:406,deployability,patch,patch,406,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:639,deployability,API,API,639,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:767,deployability,cluster,cluster,767,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:112,energy efficiency,load,loading,112,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:197,energy efficiency,Current,Currently,197,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:673,energy efficiency,load,load,673,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:732,energy efficiency,load,load,732,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:639,integrability,API,API,639,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:784,integrability,event,event,784,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:540,interoperability,share,shared,540,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:639,interoperability,API,API,639,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:57,performance,lock,lock,57,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:112,performance,load,loading,112,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:189,performance,lock,locked,189,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:387,performance,time,time,387,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:395,performance,time,time,395,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:501,performance,lock,lock,501,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:547,performance,lock,lock,547,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:590,performance,lock,lock,590,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:673,performance,load,load,673,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:732,performance,load,load,732,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:370,reliability,doe,does,370,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:664,reliability,doe,does,664,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:406,safety,patch,patch,406,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:28,security,access,access,28,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:57,security,lock,lock,57,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:151,security,access,access,151,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:189,security,lock,locked,189,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:229,security,immut,immutable,229,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:406,security,patch,patch,406,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:444,security,access,access,444,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:483,security,access,access,483,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:501,security,lock,lock,501,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:517,security,access,access,517,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:547,security,lock,lock,547,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:559,security,access,access,559,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:590,security,lock,lock,590,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10185:88,usability,support,support,88,"[ntuple] Protect descriptor access in page source by r/w lock; In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10185
https://github.com/root-project/root/pull/10186:72,deployability,log,logic,72,"[tree] Add TEntryList::Enter(localentry, treename, filename); The inner logic is the same as TEntryList::Enter(entry, treepointer). but we assume that `entry` is always a local entry, corresponding to. the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:72,safety,log,logic,72,"[tree] Add TEntryList::Enter(localentry, treename, filename); The inner logic is the same as TEntryList::Enter(entry, treepointer). but we assume that `entry` is always a local entry, corresponding to. the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:72,security,log,logic,72,"[tree] Add TEntryList::Enter(localentry, treename, filename); The inner logic is the same as TEntryList::Enter(entry, treepointer). but we assume that `entry` is always a local entry, corresponding to. the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:381,security,access,accessible,381,"[tree] Add TEntryList::Enter(localentry, treename, filename); The inner logic is the same as TEntryList::Enter(entry, treepointer). but we assume that `entry` is always a local entry, corresponding to. the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:72,testability,log,logic,72,"[tree] Add TEntryList::Enter(localentry, treename, filename); The inner logic is the same as TEntryList::Enter(entry, treepointer). but we assume that `entry` is always a local entry, corresponding to. the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10187:118,deployability,contain,contains,118,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:148,deployability,automat,automatic,148,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:432,energy efficiency,Draw,Draw,432,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:32,integrability,buffer,buffer,32,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:175,reliability,doe,does,175,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:86,safety,input,input,86,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:148,testability,automat,automatic,148,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:280,testability,simpl,simple,280,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:86,usability,input,input,86,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10187:280,usability,simpl,simple,280,"[hist] Fix axis computation for buffer histograms when data have infinities; When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. . This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:. ```. double x[] = {1.1,2.2,3.3,TMath::Infinity()};. auto h1 = new TH1D(""h1"",""h1"",10,1,0);. h1->FillN(4,x,nullptr);. h1->Draw();. ```. and it works after applying this PR, with the infinity values appearing in the overflow bin. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10187
https://github.com/root-project/root/pull/10190:116,deployability,updat,updated,116,Typo in RNTuple.hxx; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10190
https://github.com/root-project/root/pull/10190:86,safety,test,tested,86,Typo in RNTuple.hxx; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10190
https://github.com/root-project/root/pull/10190:116,safety,updat,updated,116,Typo in RNTuple.hxx; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10190
https://github.com/root-project/root/pull/10190:116,security,updat,updated,116,Typo in RNTuple.hxx; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10190
https://github.com/root-project/root/pull/10190:86,testability,test,tested,86,Typo in RNTuple.hxx; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10190
https://github.com/root-project/root/issues/10191:130,availability,avail,available,130,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2147,availability,state,statement,2147," |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2302,availability,error,error,2302,"-------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2350,availability,error,error,2350,"onal context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3129,availability,state,statements,3129,"e evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3153,availability,state,statement,3153," } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3547,availability,state,statements,3547,"V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,availability,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:469,deployability,Updat,Update,469,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:549,deployability,Updat,Update,549,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2555,deployability,stack,stack,2555," portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements}",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2598,deployability,stack,stack,2598,". is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2628,deployability,stack,stack,2628,"ard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2766,deployability,automat,automatic,2766,"int. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3577,deployability,Unload,Unload,3577," in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : retu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3727,deployability,unload,unload,3727,"ing level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3881,deployability,toggl,toggle,3881,"e for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if asserti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,deployability,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4708,deployability,continu,continue,4708,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5076,deployability,toggl,toggle,5076,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3186,energy efficiency,load,load,3186,"===========================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3277,energy efficiency,load,loaded,3277,"o [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show template",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3289,energy efficiency,load,load,3289,"> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3353,energy efficiency,load,load,3353," redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show cur",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3444,energy efficiency,load,loaded,3444,"ormation. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3456,energy efficiency,load,load,3456,"hell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3572,energy efficiency,Load,Load,3572,"e code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3596,energy efficiency,load,load,3596,"stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3644,energy efficiency,load,loaded,3644,"elect file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3657,energy efficiency,load,load,3657,"o debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3695,energy efficiency,load,loaded,3695," all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,energy efficiency,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4325,energy efficiency,load,loaded,4325,"o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. =======================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4352,energy efficiency,current,current,4352,"d [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5377,energy efficiency,current,current,5377,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5433,energy efficiency,current,current,5433,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:533,integrability,messag,messages,533,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1507,integrability,complian,compliant,1507,"or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2065,integrability,interfac,interface,2065,"x8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2147,integrability,state,statement,2147," |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3129,integrability,state,statements,3129,"e evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3153,integrability,state,statement,3153," } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3547,integrability,state,statements,3547,"V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4484,integrability,buffer,buffer,4484,"file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5234,integrability,rout,routine,5234,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:370,interoperability,share,share,370,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:533,interoperability,messag,messages,533,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1626,interoperability,standard,standard,1626,"index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2065,interoperability,interfac,interface,2065,"x8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:277,modifiability,variab,variables,277,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:344,modifiability,variab,variables,344,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1559,modifiability,portab,portable,1559,"ngly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] :",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2065,modifiability,interfac,interface,2065,"x8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2776,modifiability,variab,variable,2776,"3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3230,modifiability,extens,extension,3230,"============. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3330,modifiability,extens,extension,3330,"file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3397,modifiability,extens,extension,3397,"help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3497,modifiability,extens,extension,3497,"ce: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3957,modifiability,variab,variable,3957,"condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status dis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3990,modifiability,variab,variable,3990,": step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2302,performance,error,error,2302,"-------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2350,performance,error,error,2350,"onal context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3186,performance,load,load,3186,"===========================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3277,performance,load,loaded,3277,"o [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show template",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3289,performance,load,load,3289,"> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3353,performance,load,load,3353," redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show cur",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3444,performance,load,loaded,3444,"ormation. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3456,performance,load,load,3456,"hell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3572,performance,Load,Load,3572,"e code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3596,performance,load,load,3596,"stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3644,performance,load,loaded,3644,"elect file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3657,performance,load,load,3657,"o debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3695,performance,load,loaded,3695," all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4325,performance,load,loaded,4325,"o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. =======================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5421,performance,content,contents,5421,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:130,reliability,availab,available,130,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:293,reliability,doe,does,293,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,reliability,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:130,safety,avail,available,130,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:469,safety,Updat,Update,469,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:549,safety,Updat,Update,549,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1507,safety,compl,compliant,1507,"or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1749,safety,accid,accidentally,1749," - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2120,safety,except,except,2120,"ter@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/conditio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2302,safety,error,error,2302,"-------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2350,safety,error,error,2350,"onal context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,safety,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5067,safety,except,except,5067,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5083,safety,except,exception,5083,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:130,security,availab,available,130,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:469,security,Updat,Update,469,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:549,security,Updat,Update,549,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1009,security,Team,Team,1009,"e potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1503,security,ISO,ISO,1503,"xx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1507,security,compl,compliant,1507,"or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4375,security,secur,security,4375,"nction [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show cu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4391,security,secur,security,4391,"o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4434,security,control,control,4434,"ready loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1358,testability,context,context,1358,"tional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redire",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1950,testability,trace,trace,1950," 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declarati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2684,testability,trace,trace,2684,"temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2766,testability,automat,automatic,2766,"int. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2793,testability,trace,trace,2793,"urce file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2821,testability,trace,trace,2821,"e file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2875,testability,trace,trace,2875," cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3924,testability,Monitor,Monitor,3924," expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4434,testability,control,control,4434,"ready loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4545,testability,trace,trace,4545,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4551,testability,coverag,coverage,4551,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4854,testability,assert,assert,4854,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4877,testability,assert,assertion,4877,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:37,usability,command,commands,37,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:113,usability,command,commands,113,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:221,usability,help,help,221,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:528,usability,help,help,528,"[cling] some potentially useful CINT commands; ### Explain what you would like to see improved. Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1214,usability,help,help,1214,"d in help information. - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved. Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages. - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1606,usability,close,close,1606,"ob/main/manual/cling/index.md. - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md. - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1909,usability,command,command,1909,"---------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2080,usability,command,commands,2080,"n 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2302,usability,error,error,2302,"-------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2350,usability,error,error,2350,"onal context. https://github.com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2379,usability,Help,Help,2379,".com/root-project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2389,usability,help,help,2389,"project/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2395,usability,help,help,2395,"t/root/issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2402,usability,help,help,2402,"issues/10065. Here is the full list of ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extensi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2439,usability,help,help,2439,"f ROOTv5.34:. ```. Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it alrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2489,usability,command,command,2489,"100% ANSI/ISO compliant C/C++ language. processor. It rather is a portable script language environment which. is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory. and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change. the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters. This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface. All commands must be preceded by a . (dot), except. for the evaluation statement { } and the ?. ===========================================================================. > [file] : output redirection to [file]. 2> [file] : error redirection to [file]. >& [file] : output&error redirection to [file]. Help: ? : help. help : help. /[keyword] : search keyword in help information. Shell: ![shell] : execute shell command. Source: v <[line]>: view source code <around [line]>. V [stack] : view source code in function call stack. t : show function call stack. f [file] : select file to debug. T : turn on/off trace mode for all source. J [stat] : Set warning level [0-5]. A [1|0] : allowing automatic variable on/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3785,usability,undo,undo,3785,"/off. trace <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to deb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3792,usability,undo,undo,3792,"race <classname> : turn on trace mode for class. deltrace <classname> : turn off trace mode for class. Evaluation: p [expr] : evaluate expression (no declaration/loop/condition). Evaluation: s [expr] : step into expression (no declaration/loop/condition). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4040,usability,prototyp,prototype,4040,"on). Evaluation: S [expr] : step over expression (no declaration/loop/condition). {[statements]} : evaluate statement (any kind). x [file] : load [file] and execute function [file](w/o extension). xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension). X [file] : load [file] and execute function [file](w/o extension). Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4951,usability,statu,status,4951,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5011,usability,statu,status,5011,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5279,usability,command,commands,5279,"extension). E <[file]>: open editor and evaluate {statements} in the file. Load/Unload: L [file] : load [file]. Lk [file] : keep [file] if already loaded, else load it. La [file] : reload all files loaded after [file]. U [file] : unload [file]. C [1|0] : copy source to $TMPDIR (on/off). undo : undo previous declarations. lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN). preproc : toggle preprocessing of interpreted files. Monitor: g <[var]> : list global variable. l <[var]> : list local variable. proto <[scope]::>[func] : show function prototype. class <[name]> : show class definition (one level). Class <[name]> : show class definition (all level). typedef <name> : show typedefs. function : show interpreted functions. macro : show macro functions. template : show templates. include : show include paths. file : show loaded files. where : show current file position. security : show security level. refcount : reference count control on/off. garbage : show garbage collection buffer. Garbage : Do garbage collection. cover [file] : save trace coverage. return [val] : return undefined symbol value. Run: S : step over function/loop. s : step into function/loop. i : ignore and step over. c <[line]>: continue <to [line]>. e : step out from function. f [file] : select file to debug. b [line] : set break point. db [line] : delete break point. a [assert]: break only if assertion is true. O [0~4] : Set bytecode compiler mode. debug : bytecode status display on/off. asmstep : bytecode step mode on/off. status : show bytecode exec flags. dasm : disassembler. except : toggle exception catching. Quit: q : quit cint. qqq : quit cint - mandatory. qqqqq : exit process immediately. qqqqqqq : abort process. save : call emergency routine to save important data. ROOT special commands. ===========================================================================. pwd : show current directory, pad and style. ls : list contents of current directory. which [file] : shows path of macro file. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/pull/10192:308,deployability,updat,updated,308,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:102,energy efficiency,current,current,102,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:23,integrability,buffer,buffer,23,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:67,integrability,buffer,buffer,67,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:165,integrability,buffer,buffer,165,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:46,safety,input,input,46,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:231,safety,input,input,231,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:278,safety,test,tested,278,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:308,safety,updat,updated,308,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:308,security,updat,updated,308,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:278,testability,test,tested,278,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:12,usability,Clear,Clear,12,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:18,usability,undo,undo,18,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:46,usability,input,input,46,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:62,usability,undo,undo,62,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:149,usability,clear,clears,149,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:160,usability,undo,undo,160,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10192:231,usability,input,input,231,"[textinput] Clear undo buffer after taking an input line; The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10192
https://github.com/root-project/root/pull/10193:60,deployability,modul,modules,60,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:128,deployability,modul,modules,128,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:157,deployability,modul,modules-agnostic,157,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:258,deployability,modul,modules,258,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:266,deployability,build,build,266,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:60,modifiability,modul,modules,60,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:128,modifiability,modul,modules,128,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:157,modifiability,modul,modules-agnostic,157,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:204,modifiability,maintain,maintain,204,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:258,modifiability,modul,modules,258,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:60,safety,modul,modules,60,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:128,safety,modul,modules,128,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:157,safety,modul,modules-agnostic,157,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:204,safety,maintain,maintain,204,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:258,safety,modul,modules,258,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:113,testability,context,context,113,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:35,usability,behavi,behavior,35,"Make the dyld-based library search behavior default for non-modules.; The dyld-based system was developed in the context on C++ modules but it turned into a modules-agnostic feature. Instead of having to maintain more code, we should rely on it even for non-modules build of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10194:489,interoperability,standard,standard,489,"[cmake] Enable passing PROPERTIES in ROOT_ADD_TEST; Add an extra multi-value keyword to the ROOT_ADD_TEST function which. will just be passed as-is to the cmake set_tests_properties function. This can be used to pass any of the properties described at. https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#test-properties . In the future, some of the properties which are now manually added (e.g. ENVIRONMENT) could be removed from this function and just passed through. the standard PROPERTIES parameter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10194
https://github.com/root-project/root/pull/10194:509,modifiability,paramet,parameter,509,"[cmake] Enable passing PROPERTIES in ROOT_ADD_TEST; Add an extra multi-value keyword to the ROOT_ADD_TEST function which. will just be passed as-is to the cmake set_tests_properties function. This can be used to pass any of the properties described at. https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#test-properties . In the future, some of the properties which are now manually added (e.g. ENVIRONMENT) could be removed from this function and just passed through. the standard PROPERTIES parameter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10194
https://github.com/root-project/root/pull/10194:320,safety,test,test-properties,320,"[cmake] Enable passing PROPERTIES in ROOT_ADD_TEST; Add an extra multi-value keyword to the ROOT_ADD_TEST function which. will just be passed as-is to the cmake set_tests_properties function. This can be used to pass any of the properties described at. https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#test-properties . In the future, some of the properties which are now manually added (e.g. ENVIRONMENT) could be removed from this function and just passed through. the standard PROPERTIES parameter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10194
https://github.com/root-project/root/pull/10194:320,testability,test,test-properties,320,"[cmake] Enable passing PROPERTIES in ROOT_ADD_TEST; Add an extra multi-value keyword to the ROOT_ADD_TEST function which. will just be passed as-is to the cmake set_tests_properties function. This can be used to pass any of the properties described at. https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#test-properties . In the future, some of the properties which are now manually added (e.g. ENVIRONMENT) could be removed from this function and just passed through. the standard PROPERTIES parameter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10194
https://github.com/root-project/root/pull/10194:277,usability,help,help,277,"[cmake] Enable passing PROPERTIES in ROOT_ADD_TEST; Add an extra multi-value keyword to the ROOT_ADD_TEST function which. will just be passed as-is to the cmake set_tests_properties function. This can be used to pass any of the properties described at. https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#test-properties . In the future, some of the properties which are now manually added (e.g. ENVIRONMENT) could be removed from this function and just passed through. the standard PROPERTIES parameter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10194
https://github.com/root-project/root/pull/10195:115,deployability,build,building,115,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:283,deployability,updat,updated,283,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:253,safety,test,tested,253,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:283,safety,updat,updated,283,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:283,security,updat,updated,283,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:253,testability,test,tested,253,"[doxy] Enable compilation of macros; # This Pull request:. ## Changes or fixes:. Allows macros to be compiled when building docu, as suggested by couet in https://github.com/root-project/root/pull/10004#pullrequestreview-916874733. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10196:111,availability,state,statement,111,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:32,deployability,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:130,deployability,modul,module,130,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:338,deployability,modul,modules,338,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:111,integrability,state,statement,111,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:32,modifiability,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:130,modifiability,modul,module,130,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:338,modifiability,modul,modules,338,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:79,reliability,doe,does,79,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:32,safety,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:130,safety,modul,module,130,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:202,safety,avoid,avoid,202,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:338,safety,modul,modules,338,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10196:88,usability,support,support,88,[qt5web] add workaround for es6 modules [skip-ci]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondingly. Just a workaround. Enables usage of future JSROOT fully based on es6 modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10196
https://github.com/root-project/root/pull/10197:118,availability,state,statement,118,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:32,deployability,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:137,deployability,modul,module,137,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:118,integrability,state,statement,118,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:32,modifiability,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:137,modifiability,modul,module,137,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:86,reliability,doe,does,86,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:32,safety,modul,modules,32,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:137,safety,modul,module,137,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:209,safety,avoid,avoid,209,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10197:95,usability,support,support,95,[qt5web] add workaround for es6 modules [skip-ci] [6.26]; Used in Qt5WebEngine chrome does not support `await import` statement. in main module body. But this is the only way for now to work with. node.js. To avoid problems just exclude peace of code marked. correspondently. Just a workaround. Backport of #10196,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10197
https://github.com/root-project/root/pull/10198:15,availability,operat,operate,15,[cmake] Do not operate on install directory at build time; Solves the problem reported at https://github.com/lobis/root-docker/pull/1 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10198
https://github.com/root-project/root/pull/10198:26,deployability,instal,install,26,[cmake] Do not operate on install directory at build time; Solves the problem reported at https://github.com/lobis/root-docker/pull/1 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10198
https://github.com/root-project/root/pull/10198:47,deployability,build,build,47,[cmake] Do not operate on install directory at build time; Solves the problem reported at https://github.com/lobis/root-docker/pull/1 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10198
https://github.com/root-project/root/pull/10198:53,performance,time,time,53,[cmake] Do not operate on install directory at build time; Solves the problem reported at https://github.com/lobis/root-docker/pull/1 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10198
https://github.com/root-project/root/pull/10201:139,deployability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,integrability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,interoperability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,modifiability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:204,performance,cach,cache,204,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:258,performance,time,time,258,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,reliability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,security,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10201:139,testability,integr,integrand,139,"[RF] Remove evaluation of pdf in RooRealIntegral constructor if the normalisation set is not defined; In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. . The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10201
https://github.com/root-project/root/pull/10202:95,interoperability,share,shares,95,"[NFC][DF] Remove comments that do not apply anymore; Since commit 0b3b06e175f, RColumnRegister shares ownership of. RLoopManager precisely so that we don't have to take care of. deletion ordering. These comments are obsolete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10202
https://github.com/root-project/root/issues/10203:36,availability,operat,operator,36,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:53,availability,operat,operator,53,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:122,availability,failur,failures,122,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:352,availability,operat,operators,352,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:386,availability,Failur,Failures,386,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1021,availability,operat,operator,1021,"ss members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1328,availability,Error,Error,1328,"ndard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1428,availability,error,error,1428,"870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2040,availability,operat,operator,2040," Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.licens",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2362,availability,Error,Error,2362,".26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2467,availability,error,error,2467,"l-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2548,availability,failur,failures,2548,"Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3165,availability,operat,operator,3165,"-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3355,availability,operat,operator,3355,"ke Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3987,availability,operat,operator,3987,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:4111,availability,operat,operator,4111,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:4352,availability,operat,operator,4352,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:12,deployability,fail,fails,12,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:122,deployability,fail,failures,122,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:247,deployability,fail,fails,247,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:386,deployability,Fail,Failures,386,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:523,deployability,Fail,Failed,523,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:552,deployability,build,builddir,552,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:561,deployability,build,build,561,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:567,deployability,BUILD,BUILD,567,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1120,deployability,build,builddir,1120,"ilures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1129,deployability,build,build,1129," found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1135,deployability,BUILD,BUILD,1135," that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1167,deployability,build,build,1167,"a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1238,deployability,build,builddir,1238,"ding fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1247,deployability,build,build,1247,"ls if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1253,deployability,BUILD,BUILD,1253,"the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1285,deployability,build,build,1285,"s a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1338,deployability,build,builddir,1338,"nd delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1347,deployability,build,build,1347,"e operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1353,deployability,BUILD,BUILD,1353,"ators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1385,deployability,build,build,1385,"ilures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1535,deployability,Fail,Failed,1535,". Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1564,deployability,build,builddir,1564,"UILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1573,deployability,build,build,1573,"t-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1579,deployability,BUILD,BUILD,1579,".00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2144,deployability,build,builddir,2144,"26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2153,deployability,build,build,2153,"dhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2159,deployability,BUILD,BUILD,2159,"inux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2267,deployability,build,builddir,2267,"/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linkin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2276,deployability,build,build,2276,"linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2282,deployability,BUILD,BUILD,2282,"build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2372,deployability,build,builddir,2372,"at-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2381,deployability,build,build,2381,"-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2387,deployability,BUILD,BUILD,2387,"/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2548,deployability,fail,failures,2548,"Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3454,deployability,build,builddir,3454,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3463,deployability,build,build,3463,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3469,deployability,BUILD,BUILD,3469,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3501,deployability,build,build,3501,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3572,deployability,build,builddir,3572,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3581,deployability,build,build,3581,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3587,deployability,BUILD,BUILD,3587,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3619,deployability,build,build,3619,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:4127,deployability,fail,fails,4127,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1063,energy efficiency,load,load,1063,"ete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1220,energy efficiency,load,load,1220,"t cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2087,energy efficiency,load,load,2087,"red library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2249,energy efficiency,load,load,2249,"d/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3397,energy efficiency,load,load,3397,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3554,energy efficiency,load,load,3554,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:946,integrability,interfac,interface,946,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1417,integrability,messag,message,1417,"en:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1964,integrability,interfac,interface,1964,"u are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2456,integrability,messag,message,2456,"4: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/buildd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3280,integrability,interfac,interface,3280,"LD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:328,interoperability,standard,standard,328,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:946,interoperability,interfac,interface,946,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1086,interoperability,share,shared,1086,"g. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1417,interoperability,messag,message,1417,"en:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1964,interoperability,interfac,interface,1964,"u are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2110,interoperability,share,shared,2110,"d in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2456,interoperability,messag,message,2456,"4: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/buildd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3280,interoperability,interfac,interface,3280,"LD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3420,interoperability,share,shared,3420,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:946,modifiability,interfac,interface,946,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1964,modifiability,interfac,interface,1964,"u are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3280,modifiability,interfac,interface,3280,"LD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:122,performance,failur,failures,122,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:386,performance,Failur,Failures,386,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1063,performance,load,load,1063,"ete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1220,performance,load,load,1220,"t cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1328,performance,Error,Error,1328,"ndard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1428,performance,error,error,1428,"870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2087,performance,load,load,2087,"red library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2249,performance,load,load,2249,"d/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2362,performance,Error,Error,2362,".26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2467,performance,error,error,2467,"l-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2548,performance,failur,failures,2548,"Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2576,performance,time,time,2576,"/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /buildd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3397,performance,load,load,3397,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3554,performance,load,load,3554,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:12,reliability,fail,fails,12,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:122,reliability,fail,failures,122,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:247,reliability,fail,fails,247,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:386,reliability,Fail,Failures,386,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:523,reliability,Fail,Failed,523,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1535,reliability,Fail,Failed,1535,". Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2548,reliability,fail,failures,2548,"Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:4127,reliability,fail,fails,4127,"dir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) noexcept) Function @0x7f94fd5e3900. ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:117,safety,test,test,117,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:440,safety,Test,Test,440,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1328,safety,Error,Error,1328,"ndard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1428,safety,error,error,1428,"870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1452,safety,Test,Test,1452,"orial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2362,safety,Error,Error,2362,".26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2467,safety,error,error,2467,"l-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2543,safety,test,test,2543,"1 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2585,safety,test,tests,2585,"t-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2830,security,Team,Team,2830,"fit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:117,testability,test,test,117,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:440,testability,Test,Test,440,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1452,testability,Test,Test,1452,"orial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2543,testability,test,test,2543,"1 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2585,testability,test,tests,2585,"t-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:376,usability,behavi,behavior,376,"Autoloading fails for class members operator new and operator delete; ### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1328,usability,Error,Error,1328,"ndard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```. 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:1428,usability,error,error,1428,"870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2362,usability,Error,Error,2362,".26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):. error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2467,usability,error,error,2467,"l-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:2528,usability,behavi,behavior,2528,"***Failed 3.01 sec. Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]! You are probably missing the definition of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/issues/10203:3020,usability,help,help,3020,"on of RooDataSet::operator new(unsigned long). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'? CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):. error code: 1. ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer. However, you can see the problem this way:. ```. $ root. ------------------------------------------------------------------. | Welcome to ROOT 6.26/00 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |. | From tag , 3 March 2022 |. | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] &RooArgSet::operator delete. IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]! You are probably missing the definition of RooArgSet::operator delete(void*). Maybe you need to load the corresponding shared library? Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'? root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460. root [2] &RooArgSet::operator delete. (void (*)(void *) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10203
https://github.com/root-project/root/pull/10204:35,energy efficiency,current,current,35,[PyROOT] Find rootlogon in home or current working directory; The rootlogon.C file is searched both in the user home directory and in. the current working directory. Align this behaviour on the PyROOT side.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10204
https://github.com/root-project/root/pull/10204:139,energy efficiency,current,current,139,[PyROOT] Find rootlogon in home or current working directory; The rootlogon.C file is searched both in the user home directory and in. the current working directory. Align this behaviour on the PyROOT side.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10204
https://github.com/root-project/root/pull/10204:107,usability,user,user,107,[PyROOT] Find rootlogon in home or current working directory; The rootlogon.C file is searched both in the user home directory and in. the current working directory. Align this behaviour on the PyROOT side.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10204
https://github.com/root-project/root/pull/10204:177,usability,behavi,behaviour,177,[PyROOT] Find rootlogon in home or current working directory; The rootlogon.C file is searched both in the user home directory and in. the current working directory. Align this behaviour on the PyROOT side.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10204
https://github.com/root-project/root/pull/10205:340,energy efficiency,optim,optimization,340,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:358,energy efficiency,reduc,reduces,358,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:445,energy efficiency,profil,profiles,445,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:137,performance,Perform,Performance,137,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:292,performance,bottleneck,bottleneck,292,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:328,performance,performance optim,performance optimization,328,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:370,performance,time,time,370,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:445,performance,profil,profiles,445,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:725,performance,time,times,725,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:175,safety,avoid,avoids,175,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:318,security,intrus,intrusive,318,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:137,usability,Perform,Performance,137,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:328,usability,perform,performance,328,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:389,usability,workflow,workflows,389,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:545,usability,navigat,navigator,545,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:653,usability,navigat,navigator,653,"[RF] Don't use non-static `std::regex` in `RooFormula::processFormula`; People use RooFormula a lot via RooGenericPdf and RooFormulaVar! Performance matters here. This commit avoids non-static `std::regex` in. `RooFormula::processFormula`, because constructing these on the fly can. become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:. * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74. * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10206:166,safety,test,tests,166,"[CMake][9793] Fix RPATH when linking with XCode Python on MacOS (backport 6.24); Backport of https://github.com/root-project/root/pull/9802 without the fix for pymva tests, since the corresponding tests were not there yet in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:197,safety,test,tests,197,"[CMake][9793] Fix RPATH when linking with XCode Python on MacOS (backport 6.24); Backport of https://github.com/root-project/root/pull/9802 without the fix for pymva tests, since the corresponding tests were not there yet in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:166,testability,test,tests,166,"[CMake][9793] Fix RPATH when linking with XCode Python on MacOS (backport 6.24); Backport of https://github.com/root-project/root/pull/9802 without the fix for pymva tests, since the corresponding tests were not there yet in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:197,testability,test,tests,197,"[CMake][9793] Fix RPATH when linking with XCode Python on MacOS (backport 6.24); Backport of https://github.com/root-project/root/pull/9802 without the fix for pymva tests, since the corresponding tests were not there yet in 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10207:245,availability,error,errors,245,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:120,deployability,modul,module,120,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:127,integrability,inject,injected,127,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:120,modifiability,modul,module,120,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:245,performance,error,errors,245,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:120,safety,modul,module,120,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:245,safety,error,errors,245,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:127,security,inject,injected,127,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:415,testability,simpl,simply,415,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:245,usability,error,errors,245,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10207:415,usability,simpl,simply,415,"[PyROOT][tutorials] Add rootlogon for Python tutorials; Launching the Python tutorials from the 'tutorials/launcher.py' module injected. the `__main__` namespace in the tutorial itself. In general it is not a problem,. but it can sometimes hide errors like the one fixed by. https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves. the same purpose and the tutorials can thus be launched by simply calling. 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10208:178,deployability,updat,updated,178,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:148,safety,test,tested,148,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:178,safety,updat,updated,178,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:178,security,updat,updated,178,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:148,testability,test,tested,148,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:118,usability,support,support,118,[textinput] implement forward history search; # This Pull request:. ## Changes or fixes:. Adds forward history search support. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10137.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/issues/10209:208,energy efficiency,current,current,208,"[textinput] right or left arrow introduce stray characters while history search; ### Describe the bug. When you are within a search in the ROOT prompt (CTRL+R), pressing right arrow or left arrow selects the current match, but also introduces stray characters `[D`, `[C` or similar. Which have then to be erased by hand. Something similar is found if you press Ctrl+Right_arrow or Ctrl+Left_Arrow. ### Expected behavior. The same, but without the stray characters being added. ### To Reproduce. - Open ROOT prompt. - CTRL+R. - Type something. - Press right arrow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 23 2022, 09:52:37 |. | From heads/forwardsearch@v6-25-01-3646-g14443be956 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10209
https://github.com/root-project/root/issues/10209:721,security,Team,Team,721,"[textinput] right or left arrow introduce stray characters while history search; ### Describe the bug. When you are within a search in the ROOT prompt (CTRL+R), pressing right arrow or left arrow selects the current match, but also introduces stray characters `[D`, `[C` or similar. Which have then to be erased by hand. Something similar is found if you press Ctrl+Right_arrow or Ctrl+Left_Arrow. ### Expected behavior. The same, but without the stray characters being added. ### To Reproduce. - Open ROOT prompt. - CTRL+R. - Type something. - Press right arrow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 23 2022, 09:52:37 |. | From heads/forwardsearch@v6-25-01-3646-g14443be956 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10209
https://github.com/root-project/root/issues/10209:1082,testability,context,context,1082,"[textinput] right or left arrow introduce stray characters while history search; ### Describe the bug. When you are within a search in the ROOT prompt (CTRL+R), pressing right arrow or left arrow selects the current match, but also introduces stray characters `[D`, `[C` or similar. Which have then to be erased by hand. Something similar is found if you press Ctrl+Right_arrow or Ctrl+Left_Arrow. ### Expected behavior. The same, but without the stray characters being added. ### To Reproduce. - Open ROOT prompt. - CTRL+R. - Type something. - Press right arrow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 23 2022, 09:52:37 |. | From heads/forwardsearch@v6-25-01-3646-g14443be956 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10209
https://github.com/root-project/root/issues/10209:411,usability,behavi,behavior,411,"[textinput] right or left arrow introduce stray characters while history search; ### Describe the bug. When you are within a search in the ROOT prompt (CTRL+R), pressing right arrow or left arrow selects the current match, but also introduces stray characters `[D`, `[C` or similar. Which have then to be erased by hand. Something similar is found if you press Ctrl+Right_arrow or Ctrl+Left_Arrow. ### Expected behavior. The same, but without the stray characters being added. ### To Reproduce. - Open ROOT prompt. - CTRL+R. - Type something. - Press right arrow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 23 2022, 09:52:37 |. | From heads/forwardsearch@v6-25-01-3646-g14443be956 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10209
https://github.com/root-project/root/issues/10209:933,usability,help,help,933,"[textinput] right or left arrow introduce stray characters while history search; ### Describe the bug. When you are within a search in the ROOT prompt (CTRL+R), pressing right arrow or left arrow selects the current match, but also introduces stray characters `[D`, `[C` or similar. Which have then to be erased by hand. Something similar is found if you press Ctrl+Right_arrow or Ctrl+Left_Arrow. ### Expected behavior. The same, but without the stray characters being added. ### To Reproduce. - Open ROOT prompt. - CTRL+R. - Type something. - Press right arrow. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Mar 23 2022, 09:52:37 |. | From heads/forwardsearch@v6-25-01-3646-g14443be956 |. | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/pull/10121.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10209
https://github.com/root-project/root/pull/10210:210,deployability,updat,updated,210,[RF][HS3] Add importers and exporters for RooRealSumFunc and RooHistPdf; # This Pull request:. Adds importers and exporters for RooHistPdf and RooRealSumFunc. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10210
https://github.com/root-project/root/pull/10210:180,safety,test,tested,180,[RF][HS3] Add importers and exporters for RooRealSumFunc and RooHistPdf; # This Pull request:. Adds importers and exporters for RooHistPdf and RooRealSumFunc. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10210
https://github.com/root-project/root/pull/10210:210,safety,updat,updated,210,[RF][HS3] Add importers and exporters for RooRealSumFunc and RooHistPdf; # This Pull request:. Adds importers and exporters for RooHistPdf and RooRealSumFunc. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10210
https://github.com/root-project/root/pull/10210:210,security,updat,updated,210,[RF][HS3] Add importers and exporters for RooRealSumFunc and RooHistPdf; # This Pull request:. Adds importers and exporters for RooHistPdf and RooRealSumFunc. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10210
https://github.com/root-project/root/pull/10210:180,testability,test,tested,180,[RF][HS3] Add importers and exporters for RooRealSumFunc and RooHistPdf; # This Pull request:. Adds importers and exporters for RooHistPdf and RooRealSumFunc. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10210
https://github.com/root-project/root/pull/10212:137,integrability,sub,submission,137,Several small fixes in eve7 and JSROOT; 1. Fix projection_prescale.C macro. 2. Fix REveBox geometry creation. 3. Fix JSROOT `multi.json` submission,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10212
https://github.com/root-project/root/pull/10213:793,deployability,updat,updated,793,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:367,energy efficiency,model,models,367,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:610,energy efficiency,model,model,610,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:637,integrability,event,eventcount-mode,637,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:763,safety,test,tested,763,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:793,safety,updat,updated,793,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:367,security,model,models,367,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:610,security,model,model,610,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:793,security,updat,updated,793,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:763,testability,test,tested,763,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:333,usability,user,users,333,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:585,usability,user,user,585,"[RF] Add flag to globally enable or disable all RooBinWidthFunctions; # This Pull request:. With the (very useful) introduction of the RooBinWidthFunction, the bin width correction moved from the ""coefficient"" branch of the RooRealSumPdf to the ""function"" branch of the RooRealSumPdf in HistFactory. This can cause some distress for users who meddle with histfactory models by hand, because bin correction can now appear at places that are different from what they were originally. This PR adds a flag to globally disable all bin width corrections of RooBinWidthFunction, allowing the user to switch an entire model from density-mode to eventcount-mode. ## Changes or fixes:. Added flag to globally enable or disable all bin width functions. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10215:55,integrability,event,event,55,"Backport ""Minimize use of global write lock in typical event loops"" to v6.26; FYI @bendavid @ikabadzhov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10215
https://github.com/root-project/root/pull/10215:39,performance,lock,lock,39,"Backport ""Minimize use of global write lock in typical event loops"" to v6.26; FYI @bendavid @ikabadzhov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10215
https://github.com/root-project/root/pull/10215:39,security,lock,lock,39,"Backport ""Minimize use of global write lock in typical event loops"" to v6.26; FYI @bendavid @ikabadzhov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10215
https://github.com/root-project/root/pull/10215:10,usability,Minim,Minimize,10,"Backport ""Minimize use of global write lock in typical event loops"" to v6.26; FYI @bendavid @ikabadzhov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10215
https://github.com/root-project/root/issues/10216:682,availability,error,error,682,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:50,integrability,sub,sub-directory,50,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:989,integrability,sub,sub-directory,989,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:682,performance,error,error,682,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:956,performance,multi-thread,multi-threading,956,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:24,safety,prevent,prevents,24,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:270,safety,test,test,270,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:339,safety,test,testd,339,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:345,safety,test,testt,345,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:419,safety,test,testd,419,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:425,safety,test,testt,425,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:682,safety,error,error,682,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:764,safety,test,test,764,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:775,safety,test,testd,775,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:781,safety,test,testt,781,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:851,safety,test,test,851,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:1094,safety,prevent,prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe,1094,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:24,security,preven,prevents,24,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:1094,security,preven,prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe,1094,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:270,testability,test,test,270,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:339,testability,test,testd,339,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:345,testability,test,testt,345,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:419,testability,test,testd,419,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:425,testability,test,testt,425,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:764,testability,test,test,764,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:775,testability,test,testd,775,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:781,testability,test,testt,781,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:851,testability,test,test,851,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:246,usability,user,user,246,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:682,usability,error,error,682,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:740,usability,user,user,740,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/issues/10216:827,usability,user,user,827,"[DF] EnableImplicitMT() prevents reading TTree in sub-directory from XrootD file; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main(). {. ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";. ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);. auto *td = f->Get<TTree>(""testd/testt"");. auto rdftd = ROOT::RDataFrame(*td);. auto htd = rdftd.Histo1D<ULong64_t>(""e"");. std::cout << htd->GetMean() << '\n';. }. ```. yields:. ```. terminate called after throwing an instance of 'std::runtime_error'. what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"". ```. i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10216
https://github.com/root-project/root/pull/10217:356,deployability,log,logic,356,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:451,deployability,contain,contains,451,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:463,deployability,contain,contains,463,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:40,integrability,protocol,protocol,40,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:305,integrability,protocol,protocol,305,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:337,integrability,protocol,protocol,337,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:40,interoperability,protocol,protocol,40,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:305,interoperability,protocol,protocol,305,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:337,interoperability,protocol,protocol,337,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:356,safety,log,logic,356,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:356,security,log,logic,356,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:356,testability,log,logic,356,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:489,usability,support,support,489,"[tree] Fix GetTreeFullPaths in case of `protocol://`; GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10218:364,deployability,log,logic,364,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:459,deployability,contain,contains,459,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:471,deployability,contain,contains,471,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:40,integrability,protocol,protocol,40,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:313,integrability,protocol,protocol,313,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:345,integrability,protocol,protocol,345,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:40,interoperability,protocol,protocol,40,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:313,interoperability,protocol,protocol,313,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:345,interoperability,protocol,protocol,345,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:364,safety,log,logic,364,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:364,security,log,logic,364,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:364,testability,log,logic,364,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10218:497,usability,support,support,497,"[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26); GetTreeFullPaths assumed that the first occurrence of "":/"" was. the separator between filename and tree name in strings such as. ""file.root:/dir/tree"". However, the separator is the _last_. occurrence of "":/"" -- e.g. if the file is read via a remote. protocol, its name starts with ""protocol://"". This logic is of course still broken in case the name of the tree. or the one of the directory that contains it contains "":/"", we. do not support that case. This fixes #10216.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10218
https://github.com/root-project/root/pull/10220:108,availability,consist,consisted,108,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:642,deployability,observ,observable,642,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:96,energy efficiency,model,models,96,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:518,energy efficiency,model,model,518,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:255,integrability,event,events,255,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:587,integrability,event,event,587,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:532,interoperability,standard,standard,532,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:760,modifiability,maintain,maintainance,760,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:295,performance,perform,performance,295,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:124,reliability,Poisson,Poisson,124,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:404,safety,test,test,404,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:740,safety,avoid,avoid,740,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:760,safety,maintain,maintainance,760,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:96,security,model,models,96,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:518,security,model,model,518,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:404,testability,test,test,404,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:642,testability,observ,observable,642,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:108,usability,consist,consisted,108,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:295,usability,perform,performance,295,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/pull/10220:332,usability,tool,tools,332,"[RF] Remove HistoToWorkspaceFactory (non-Fast); The original `HistoToWorkspaceFactory` produced models that consisted of. a Poisson term for each bin. In this ""number counting form"" the. dataset has one row and the collumns corresponded to the number of. events for each bin. This led to severe performance problems in. statistical tools that generated pseudo-experiments and evaluated. likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`. implementation that produces a model in the ""standard form"" where the. dataset has one row for each event, and the column corresponds to the. value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to. avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10220
https://github.com/root-project/root/issues/10221:153,deployability,instal,installation,153,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:418,deployability,Instal,Install,418,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:515,deployability,version,version,515,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:938,energy efficiency,gpu,gpu,938,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:4377,energy efficiency,core,core,4377,=/usr/lib/libgslcblas.so GSL_INCLUDEDIR=/usr/include GSL_INCLUDE_DIR=/usr/include GSL_INCLUDE_DIRS=/usr/include GSL_LIBRARY=/usr/lib/libgsl.so GSL_LIBRARY_DEBUG=/usr/lib/libgsl.so GSL_LIBRARY_DIRS=/usr/lib GSL_STATIC_LIBRARY_DIRS=/usr/lib GSL_VERSION=2.7.1 JPEG_INCLUDE_DIR=/usr/include JPEG_LIBRARY=/usr/lib/libjpeg.so JPEG_LIBRARY_RELEASE=/usr/lib/libjpeg.so LIBLZMA_INCLUDE_DIR=/usr/include LIBLZMA_LIBRARY=/usr/lib/liblzma.so LIBLZMA_LIBRARY_RELEASE=/usr/lib/liblzma.so LIBXML2_INCLUDE_DIR=/usr/include/libxml2 LIBXML2_LIBRARY=/usr/lib/libxml2.so LZ4_INCLUDE_DIR=/usr/include LZ4_LIBRARY=/usr/lib/liblz4.so MPI_mpi_LIBRARY=/usr/lib/openmpi/libmpi.so MPI_mpi_cxx_LIBRARY=/usr/lib/openmpi/libmpi_cxx.so MPI_mpi_mpifh_LIBRARY=/usr/lib/openmpi/libmpi_mpifh.so MPI_mpi_usempi_ignore_tkr_LIBRARY=/usr/lib/openmpi/libmpi_usempi_ignore_tkr.so MPI_mpi_usempif08_LIBRARY=/usr/lib/openmpi/libmpi_usempif08.so MYSQL_INCLUDE_DIR=/usr/include/mysql NUMPY_INCLUDE_DIRS=/usr/lib/python3.10/site-packages/numpy/core/include ODBC_INCLUDE_DIR=/usr/include ODBC_LIBRARY=/usr/lib/libodbc.so OPENGL_EGL_INCLUDE_DIR=/usr/include OPENGL_GLX_INCLUDE_DIR=/usr/include OPENGL_INCLUDE_DIR=/usr/include OPENGL_egl_LIBRARY=/usr/lib/libEGL.so OPENGL_glu_LIBRARY=/usr/lib/libGLU.so OPENGL_glx_LIBRARY=/usr/lib/libGLX.so OPENGL_opengl_LIBRARY=/usr/lib/libOpenGL.so OPENSSL_CRYPTO_LIBRARY=/usr/lib/libcrypto.so OPENSSL_INCLUDE_DIR=/usr/include OPENSSL_SSL_LIBRARY=/usr/lib/libssl.so PCRE_INCLUDE_DIR=/usr/include PCRE_PCRE_LIBRARY_DEBUG=/usr/lib/libpcre.so PCRE_PCRE_LIBRARY_RELEASE=/usr/lib/libpcre.so PC_CURL_INCLUDEDIR=/usr/include PC_CURL_LIBRARIES=curl PC_CURL_LIBRARY_DIRS=/usr/lib PC_CURL_STATIC_LIBRARY_DIRS=/usr/lib PC_CURL_VERSION=7.82.0 PC_LIBXML_INCLUDEDIR=/usr/include PC_LIBXML_INCLUDE_DIRS=/usr/include/libxml2 PC_LIBXML_LIBRARIES=xml2 PC_LIBXML_LIBRARY_DIRS=/usr/lib PC_LIBXML_STATIC_INCLUDE_DIRS=/usr/include/libxml2 PC_LIBXML_STATIC_LIBRARY_DIRS=/usr/lib PC_LIBXML_VERSION=2.9.13 PC_SQLITE_INCLUDEDIR=/usr/includ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:515,integrability,version,version,515,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:910,interoperability,share,shared,910,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:980,interoperability,xml,xml,980,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:515,modifiability,version,version,515,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:4362,modifiability,pac,packages,4362,LIBRARY_DEBUG=/usr/lib/libgslcblas.so GSL_INCLUDEDIR=/usr/include GSL_INCLUDE_DIR=/usr/include GSL_INCLUDE_DIRS=/usr/include GSL_LIBRARY=/usr/lib/libgsl.so GSL_LIBRARY_DEBUG=/usr/lib/libgsl.so GSL_LIBRARY_DIRS=/usr/lib GSL_STATIC_LIBRARY_DIRS=/usr/lib GSL_VERSION=2.7.1 JPEG_INCLUDE_DIR=/usr/include JPEG_LIBRARY=/usr/lib/libjpeg.so JPEG_LIBRARY_RELEASE=/usr/lib/libjpeg.so LIBLZMA_INCLUDE_DIR=/usr/include LIBLZMA_LIBRARY=/usr/lib/liblzma.so LIBLZMA_LIBRARY_RELEASE=/usr/lib/liblzma.so LIBXML2_INCLUDE_DIR=/usr/include/libxml2 LIBXML2_LIBRARY=/usr/lib/libxml2.so LZ4_INCLUDE_DIR=/usr/include LZ4_LIBRARY=/usr/lib/liblz4.so MPI_mpi_LIBRARY=/usr/lib/openmpi/libmpi.so MPI_mpi_cxx_LIBRARY=/usr/lib/openmpi/libmpi_cxx.so MPI_mpi_mpifh_LIBRARY=/usr/lib/openmpi/libmpi_mpifh.so MPI_mpi_usempi_ignore_tkr_LIBRARY=/usr/lib/openmpi/libmpi_usempi_ignore_tkr.so MPI_mpi_usempif08_LIBRARY=/usr/lib/openmpi/libmpi_usempif08.so MYSQL_INCLUDE_DIR=/usr/include/mysql NUMPY_INCLUDE_DIRS=/usr/lib/python3.10/site-packages/numpy/core/include ODBC_INCLUDE_DIR=/usr/include ODBC_LIBRARY=/usr/lib/libodbc.so OPENGL_EGL_INCLUDE_DIR=/usr/include OPENGL_GLX_INCLUDE_DIR=/usr/include OPENGL_INCLUDE_DIR=/usr/include OPENGL_egl_LIBRARY=/usr/lib/libEGL.so OPENGL_glu_LIBRARY=/usr/lib/libGLU.so OPENGL_glx_LIBRARY=/usr/lib/libGLX.so OPENGL_opengl_LIBRARY=/usr/lib/libOpenGL.so OPENSSL_CRYPTO_LIBRARY=/usr/lib/libcrypto.so OPENSSL_INCLUDE_DIR=/usr/include OPENSSL_SSL_LIBRARY=/usr/lib/libssl.so PCRE_INCLUDE_DIR=/usr/include PCRE_PCRE_LIBRARY_DEBUG=/usr/lib/libpcre.so PCRE_PCRE_LIBRARY_RELEASE=/usr/lib/libpcre.so PC_CURL_INCLUDEDIR=/usr/include PC_CURL_LIBRARIES=curl PC_CURL_LIBRARY_DIRS=/usr/lib PC_CURL_STATIC_LIBRARY_DIRS=/usr/lib PC_CURL_VERSION=7.82.0 PC_LIBXML_INCLUDEDIR=/usr/include PC_LIBXML_INCLUDE_DIRS=/usr/include/libxml2 PC_LIBXML_LIBRARIES=xml2 PC_LIBXML_LIBRARY_DIRS=/usr/lib PC_LIBXML_STATIC_INCLUDE_DIRS=/usr/include/libxml2 PC_LIBXML_STATIC_LIBRARY_DIRS=/usr/lib PC_LIBXML_VERSION=2.9.13 PC_SQLITE_INCLUDEDI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:938,performance,gpu,gpu,938,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:34,reliability,doe,does,34,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:179,reliability,doe,does,179,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:732,safety,except,exceptions,732,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:924,security,ssl,ssl,924,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:600,testability,context,context,600,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:313,usability,behavi,behavior,313,"ROOT interpreter built with C++17 does not find `std::optional` without including it first; - [x] Checked for duplicates. ### Describe the bug. `pyroot` installation with `c++17` does not find `optional` in namespace `std`:. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). False. ```. ### Expected behavior. ```python. >>> import ROOT. >>> hasattr(ROOT.std, ""optional""). True. ```. ### To Reproduce. 1. Install `root`. 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup. ROOT version: 6.26.00. OS: Arch Linux x86_64. GCC: 11.2.0. Python: 3.10.2. ### Additional context. ```bash. $ root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd. ```. ```bash. $ root-config --config. CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10222:1577,availability,Operat,Operating,1577,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1652,availability,down,download,1652,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:591,deployability,log,log,591,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1428,deployability,build,build,1428,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1565,deployability,version,version,1565,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1634,deployability,instal,install,1634,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1157,integrability,compon,components,1157,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1565,integrability,version,version,1565,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1157,interoperability,compon,components,1157,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1157,modifiability,compon,components,1157,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1565,modifiability,version,version,1565,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:580,performance,time,times,580,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:591,safety,log,log,591,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1382,safety,input,input,1382,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1691,safety,test,tested,1691,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:591,security,log,log,591,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:591,testability,log,log,591,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1691,testability,test,tested,1691,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1828,testability,context,context,1828,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1857,testability,context,context,1857,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:11,usability,behavi,behavior,11,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:436,usability,clear,clear,436,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:484,usability,behavi,behavior,484,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1042,usability,behavi,behavior,1042,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1060,usability,clear,clear,1060,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1237,usability,behavi,behavior,1237,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:1382,usability,input,input,1382,"Suspicious behavior of TUnuran::SampleMulti ; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:. ```. for (int j = 0; j < 20000; j++) {. hzmodel.Sample(&flux_real[0]);. if(j<10). std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;. ```. output. ```. 1 5.73992 4.99711 4.88. 2 5.73992 4.99711 5.26624. 3 5.72944 4.99459 5.25179. 4 5.34123 4.99459 5.25179. 5 5.34123 4.96792 5.25179. 6 5.34123 4.96792 5.2696. 7 5.26477 4.99232 5.52042. 8 5.59451 4.99232 5.52042. 9 5.59451 5.04631 5.52042. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. By calling `SampleMulti`, all components should be randomized. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. tested on . ubuntu 20.04 + ROOT v6.26.00 (wget). ubuntu 20.04 + ROOT v6.24.06 (wget). MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context. <!--. Add any other context about the problem here. -->. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/pull/10223:0,deployability,Updat,Updated,0,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:59,deployability,build,build,59,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:104,deployability,build,build,104,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:288,deployability,build,building,288,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:564,deployability,build,build,564,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:622,deployability,updat,updated,622,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:0,safety,Updat,Updated,0,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:592,safety,test,tested,592,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:622,safety,updat,updated,622,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:0,security,Updat,Updated,0,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:622,security,updat,updated,622,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:592,testability,test,tested,592,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:149,usability,user,user-images,149,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build; # This Pull request: Fixes the bug to build ROOT in Ubuntu 20.04. ![image](https://user-images.githubusercontent.com/84740927/159856024-8b399e36-d835-4726-b6dc-9d1a5b90dbc3.png). The above bug was noticed by me when i was building root in my local computer. This can be resolved by just removing example_outputs argument from PyRunString function over [here](https://github.com/root-project/root/blob/master/tmva/pymva/src/RModelParser_PyTorch.cxx#L422). ## Changes or fixes:. Bug-issue related to build. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/issues/10224:9,availability,Error,Error,9,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:204,deployability,fail,fails,204,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:641,deployability,fail,fails,641,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:715,deployability,fail,fails,715,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:9,performance,Error,Error,9,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:204,reliability,fail,fails,204,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:641,reliability,fail,fails,641,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:715,reliability,fail,fails,715,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:9,safety,Error,Error,9,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10224:9,usability,Error,Error,9,"[PyROOT] Error when looking for function template overload; As reported in the forum:. https://root-forum.cern.ch/t/pyroot-cppyy-cant-find-the-correct-template-overload-function/49316. The following code fails to invoke a second overload of a function template:. ```python. import cppyy. cppyy.cppdef(r""""""\. class A{};. class B{};. template<typename T>. T foo1(A* h). {. return (T)1;. }. template<typename T>. T foo1(B* ax). {. return (T)1;. }. template<typename T>. T foo2(B* h). {. return (T)1;. }. template<typename T>. T foo2(A* ax). {. return (T)1;. }. """"""). a = cppyy.gbl.A(). b = cppyy.gbl.B(). # works. cppyy.gbl.foo1[""float""](a). # fails. cppyy.gbl.foo2[""float""](a). # works. cppyy.gbl.foo2[""float""](b). # fails. cppyy.gbl.foo1[""float""](b). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10224
https://github.com/root-project/root/issues/10225:193,availability,Error,Error,193,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:420,availability,operat,operator,420,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1464,availability,Operat,Operating,1464,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1553,availability,down,download,1553,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1443,deployability,version,version,1443,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1535,deployability,instal,install,1535,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:923,integrability,transform,transform,923,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1443,integrability,version,version,1443,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:923,interoperability,transform,transform,923,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1443,modifiability,version,version,1443,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:193,performance,Error,Error,193,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:7,reliability,doe,doesn,7,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:129,reliability,doe,doesn,129,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:193,safety,Error,Error,193,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:1621,testability,context,context,1621,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:193,usability,Error,Error,193,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:261,usability,behavi,behavior,261,"TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type; - [x] Checked for duplicates. ### Describe the bug. TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior. I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce. ```. bool flag = false;. struct vecMaker. {. 	std::vector<Double_t> operator()(). {. std::vector<Double_t> myVec{0,1,2,3,4,5};. return myVec;. }. };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df). {. 	if (flag). 	{. 		return df.Define(""y"", [](){ return gRandom->Rndm(); });. 	}. flag = true;. 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));. }. void clipboard(). {. ROOT::EnableImplicitMT();. //first part of the . auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };. auto vGen = [&](int len). {. ROOT::VecOps::RVec<Double_t> v(len);. std::transform(v.begin(), v.end(), v.begin(), unifGen);. return v;. };. ROOT::RDataFrame d(1024);. auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }). .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>. 	auto myNewDF = ApplyDefines(outDF);. myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");. 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);. 	dEDF.Snapshot(""analyzed"", ""newdf.root"");. }. ```. ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: Ubuntu 20.04. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context. In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/pull/10227:53,deployability,manag,managers,53,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:124,deployability,manag,managers,124,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:53,energy efficiency,manag,managers,53,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:124,energy efficiency,manag,managers,124,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:53,safety,manag,managers,53,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:124,safety,manag,managers,124,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:45,testability,context,context,45,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10227:116,testability,context,context,116,[PyROOT] Add tutorial for TContext and TFile context managers; This PR creates tutorials for the TFile and TContext context managers introduced respectively with #9947 and #10167 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10227
https://github.com/root-project/root/pull/10228:61,performance,improves perform,improves performance,61,"[DF] Disable Cling pointer checking for action helpers; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10228
https://github.com/root-project/root/pull/10228:47,usability,help,helpers,47,"[DF] Disable Cling pointer checking for action helpers; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10228
https://github.com/root-project/root/pull/10228:70,usability,perform,performance,70,"[DF] Disable Cling pointer checking for action helpers; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10228
https://github.com/root-project/root/pull/10229:164,deployability,toggl,toggling,164,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:39,integrability,Batch,BatchMode,39,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:39,performance,Batch,BatchMode,39,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:279,reliability,doe,doesn,279,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:140,safety,test,test,140,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:134,testability,unit,unit,134,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10229:140,testability,test,test,140,"[RF] Implement SumW2 correction in new BatchMode with RooFitDriver; This has not been implemented so far. This commit also includes a unit. test for it. For easier toggling of squared weights, a new virtual function. `RooAbsArg::applyWeightsSquared` was introduced such that one doesn't. have to pick up manully the likelihood classes from the computation. graph when applying the weights squared correction. To be backported to 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10229
https://github.com/root-project/root/pull/10230:61,availability,repair,repairs,61,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:125,availability,servic,services,125,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:125,deployability,servic,services,125,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:177,deployability,build,build,177,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:125,integrability,servic,services,125,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:125,modifiability,servic,services,125,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:61,reliability,repair,repairs,61,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:84,safety,test,testProxiesAndCategories,84,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:190,safety,test,testReport,190,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:231,safety,test,test,231,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:354,safety,test,testing,354,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:84,testability,test,testProxiesAndCategories,84,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:190,testability,test,testReport,190,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:231,testability,test,test,231,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:354,testability,test,testing,354,Additional fixes for std::pair's StreamerInfo handling; This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10231:129,safety,compl,completely,129,[RF] Clear out `RooFit.h` header with outdated compiler fix; Title says it all. This commit removes also all includes of the now completely empty `RooFit.h`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:129,security,compl,completely,129,[RF] Clear out `RooFit.h` header with outdated compiler fix; Title says it all. This commit removes also all includes of the now completely empty `RooFit.h`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:5,usability,Clear,Clear,5,[RF] Clear out `RooFit.h` header with outdated compiler fix; Title says it all. This commit removes also all includes of the now completely empty `RooFit.h`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/issues/10232:284,availability,fault,fault,284,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:356,deployability,version,versions,356,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:388,deployability,instal,installed,388,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:458,deployability,version,version,458,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:284,energy efficiency,fault,fault,284,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:356,integrability,version,versions,356,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:458,integrability,version,version,458,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:356,modifiability,version,versions,356,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:458,modifiability,version,version,458,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:284,performance,fault,fault,284,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:172,reliability,doe,does,172,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:284,reliability,fault,fault,284,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:471,reliability,doe,does,471,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:284,safety,fault,fault,284,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:344,safety,Test,Tested,344,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:446,safety,Test,Tested,446,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:344,testability,Test,Tested,344,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:446,testability,Test,Tested,446,"[RF] Crash when passing null pointer to RooFit::ConditionalObservables; Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:. ```. import ROOT. ws = ROOT.RooWorkspace(""ws""). # seg fault. ROOT.RooFit.ConditionalObservables(ws.set("""")). ```. Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge). Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10233:174,availability,error,error,174,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:1773,availability,Error,Error,1773,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2324,availability,Error,Error,2324,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:128,deployability,contain,containing,128,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:437,deployability,fail,failed,437,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2682,deployability,Version,Version,2682,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2706,deployability,instal,install,2706,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2682,integrability,Version,Version,2682,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2682,modifiability,Version,Version,2682,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:174,performance,error,error,174,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:1773,performance,Error,Error,1773,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2324,performance,Error,Error,2324,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:33,reliability,doe,does,33,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:437,reliability,fail,failed,437,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:174,safety,error,error,174,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:1773,safety,Error,Error,1773,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2324,safety,Error,Error,2324,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:174,usability,error,error,174,"[RDataFrame] RDataFrame.Redefine does not work with Snapshot; After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root""). ```. This gives:. ```. TypeError: Template method resolution failed:. none of the 3 overloaded methods succeeded. Full details:. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:1773,usability,Error,Error,1773,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:1835,usability,support,supported,1835,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2324,usability,Error,Error,2324,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:2386,usability,support,supported,2386,"s<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. TypeError: takes at least 3 arguments (2 given). ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>. logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame. ```. However, this works:. ```. import ROOT. import numpy as np. rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}). rdf = rdf.Redefine(""bar"", ""bar + 1""). rdf.Snapshot(""output"", ""output.root"", [""bar""]). ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/pull/10235:710,energy efficiency,model,model,710,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:798,energy efficiency,model,model,798,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:57,integrability,messag,message,57,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:225,integrability,messag,message,225,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:308,integrability,messag,message,308,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:57,interoperability,messag,message,57,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:225,interoperability,messag,message,225,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:308,interoperability,messag,message,308,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:373,safety,test,testRooAddPdfGenerate,373,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:710,security,model,model,710,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:798,security,model,model,798,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10235:373,testability,test,testRooAddPdfGenerate,373,"[RF] Backport in 6.26 a fix suppressing a RooFit Warning message; In some case when calling `RooAddPdf::generate` an evaluation of the RooAddPdf happens without the normalisation set defined, causing the priting of a Warning message. Since in this case the evaluation result is not used we can suppress this message. . Here is the example code reproducing this:. ```. void testRooAddPdfGenerate() {. RooWorkspace w(""w"");. w.factory(""Gaussian::f1(x[0,10],m1[3,0,10],s1[1,0,10])"");. w.factory(""Gaussian::f2(x,m2[7,0,10],s2[0.5,0,10])"");. w.factory(""SUM::sigPdf(n1[1000,0,100000]*f1, n2[1000,0,100000]*f2)"");. w.factory(""Gaussian::bkgPdf(x,mb[5,0,10],sb[7,0,10])"");. w.factory(""sum::ns(n1,n2)"");. w.factory(""SUM::model(ns*sigPdf,nb[2000,0,100000]*bkgPdf)"");. . auto x = w.var(""x"");. auto pdf = w.pdf(""model"");. auto data = pdf->generate(*x);. . }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10235
https://github.com/root-project/root/pull/10236:13,deployability,upgrad,upgrade,13,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:65,deployability,version,version,65,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:84,deployability,modul,modules,84,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:224,deployability,build,build,224,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:196,energy efficiency,core,core,196,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:65,integrability,version,version,65,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:125,integrability,compon,components,125,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:284,integrability,batch,batch,284,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:125,interoperability,compon,components,125,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:13,modifiability,upgrad,upgrade,13,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:65,modifiability,version,version,65,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:84,modifiability,modul,modules,84,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:125,modifiability,compon,components,125,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:284,performance,batch,batch,284,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:84,safety,modul,modules,84,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10236:174,usability,support,supported,174,"Major JSROOT upgrade; * Fully reorganize JSROOT code - future v7 version. * Use ES6 modules and classes. * Adjust all webgui components. * Old applications, based on v6, are supported via `JSRoot.core.js` script. * Special `build/jsroot.js` bundles full JSROOT functionality; used in batch mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10236
https://github.com/root-project/root/pull/10237:69,performance,improves perform,improves performance,69,"[DF] Disable Cling pointer checking for action helpers [v6.26]; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`. (cherry picked from commit 48189c862fa4e2cdd9c859d3c5a72090cb11fb1e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10237
https://github.com/root-project/root/pull/10237:47,usability,help,helpers,47,"[DF] Disable Cling pointer checking for action helpers [v6.26]; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`. (cherry picked from commit 48189c862fa4e2cdd9c859d3c5a72090cb11fb1e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10237
https://github.com/root-project/root/pull/10237:78,usability,perform,performance,78,"[DF] Disable Cling pointer checking for action helpers [v6.26]; This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`. (cherry picked from commit 48189c862fa4e2cdd9c859d3c5a72090cb11fb1e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10237
https://github.com/root-project/root/issues/10238:251,availability,down,download,251,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:620,availability,down,downsides,620,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:18,deployability,instal,install,18,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:169,deployability,instal,install,169,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:575,deployability,version,version,575,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:751,deployability,version,versioned,751,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:787,deployability,version,version,787,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:801,deployability,build,build,801,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:1306,deployability,contain,containing,1306,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:1065,energy efficiency,reduc,reduces,1065,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:575,integrability,version,version,575,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:751,integrability,version,versioned,751,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:787,integrability,version,version,787,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:851,integrability,repositor,repository,851,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:711,interoperability,specif,specific,711,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:851,interoperability,repositor,repository,851,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:575,modifiability,version,version,575,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:751,modifiability,version,versioned,751,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:787,modifiability,version,version,787,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:914,modifiability,reu,reunpacking,914,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:365,safety,test,testing,365,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:365,testability,test,testing,365,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:56,usability,command,commands,56,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:304,usability,user,users,304,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:1226,usability,user,users,1226,"https://root.cern/install/: add --depth=20 to git clone commands; There are three ways to get the code of latest-stable:. a) git clone as suggested by https://root.cern/install/: 1.4GiB. b) git clone with --depth=20: 673MiB. c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10239:564,availability,Error,Error,564,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:781,availability,error,errors,781,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:269,deployability,contain,containing,269,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:867,deployability,version,version,867,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:883,deployability,Version,Version,883,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:867,integrability,version,version,867,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:883,integrability,Version,Version,883,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:867,modifiability,version,version,867,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:883,modifiability,Version,Version,883,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:564,performance,Error,Error,564,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:781,performance,error,errors,781,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:230,reliability,doe,does,230,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:634,reliability,doe,does,634,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:564,safety,Error,Error,564,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:781,safety,error,errors,781,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:54,usability,document,documentation,54,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:564,usability,Error,Error,564,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:595,usability,User,Users,595,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:781,usability,error,errors,781,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:789,usability,indicat,indicating,789,"? wildcard broken in TChain::Add(); The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:. `{` . ` TChain* ch = new TChain(""ch"", ""ch"");`. ` ch->Add(""file?.root"");`. ` ch->GetEntry(0);`. `}`. Then run the following lines at the terminal:. ` % touch file1.root`. ` % touch file1.root`. ` % root chtest.C`. The output is:. `root [0]`. `Processing chtest.C...`. `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:. ` % root --version`. `ROOT Version: 6.26/00`. `Built for macosx64 on Mar 03 2022, 06:51:13`. `From tags/v6-26-00@v6-26-00`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10240:64,availability,error,error,64,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:627,availability,error,error,627,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:950,availability,error,error,950,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1693,availability,error,error,1693,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1844,availability,error,error,1844,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1926,availability,Operat,Operating,1926,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2001,availability,down,download,2001,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2097,availability,down,download,2097,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2111,availability,Operat,Operating,2111,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1203,deployability,build,build,1203,"=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1914,deployability,version,version,1914,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1983,deployability,instal,install,1983,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2048,deployability,version,version,2048,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:956,integrability,messag,message,956,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1914,integrability,version,version,1914,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2048,integrability,version,version,2048,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:956,interoperability,messag,message,956,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:657,modifiability,inherit,inherits,657,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1914,modifiability,version,version,1914,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2048,modifiability,version,version,2048,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:64,performance,error,error,64,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:82,performance,I/O,I/O,82,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:627,performance,error,error,627,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:697,performance,I/O,I/O,697,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:950,performance,error,error,950,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1693,performance,error,error,1693,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1844,performance,error,error,1844,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1357,reliability,pra,pragma,1357,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1384,reliability,pra,pragma,1384,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1412,reliability,pra,pragma,1412,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:64,safety,error,error,64,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:627,safety,error,error,627,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:950,safety,error,error,950,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1157,safety,input,input,1157,"(https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1693,safety,error,error,1693,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1844,safety,error,error,1844,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2158,testability,context,context,2158,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2187,testability,context,context,2187,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:64,usability,error,error,64,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:486,usability,clear,clear,486,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:534,usability,behavi,behavior,534,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:627,usability,error,error,627,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:722,usability,behavi,behavior,722,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:740,usability,clear,clear,740,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:867,usability,behavi,behavior,867,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:894,usability,support,supported,894,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:950,usability,error,error,950,"TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1012,usability,behavi,behavior,1012,"a branch with std::vector can raise an internal error when mixing I/O systems.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1157,usability,input,input,1157,"(https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1693,usability,error,error,1693,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:1844,usability,error,error,1844,"ra](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile and run the following macro with `root -l -b -q T.C+`:. ```C++. #include <vector>. #include ""TTree.h"". #pragma link C++ class A;. #pragma link C++ class B+;. #pragma link C++ class std::vector<B>+;. struct A {. int x;. ClassDef(A, 1);. };. ClassImp(A);. struct B : A {. int y;. ClassDef(B, 1);. };. ClassImp(B);. void T() {. TTree* tree = new TTree(""T"", ""T"");. std::vector<B> bvec;. tree->Branch(""B"", &bvec);. }. ```. Macro aborts with the error: . ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version: 6.22.08 (built myself), 6.26.00 (binary download). 2. Operating System: Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/pull/10241:41,deployability,contain,contain,41,"Revert ""[cxxmodules] Allow submodules to contain headers which may be missing.""; This reverts commit f4ea5ad76c74671ebbdfb64fdaeffb986811420d. We do not need to support gcc 4.8 anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:27,integrability,sub,submodules,27,"Revert ""[cxxmodules] Allow submodules to contain headers which may be missing.""; This reverts commit f4ea5ad76c74671ebbdfb64fdaeffb986811420d. We do not need to support gcc 4.8 anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:161,usability,support,support,161,"Revert ""[cxxmodules] Allow submodules to contain headers which may be missing.""; This reverts commit f4ea5ad76c74671ebbdfb64fdaeffb986811420d. We do not need to support gcc 4.8 anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10244:61,deployability,log,logic,61,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:36,interoperability,distribut,distributed,36,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:61,safety,log,logic,61,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:61,security,log,logic,61,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:193,security,token,token,193,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:5,testability,Simpl,Simplify,5,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:61,testability,log,logic,61,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:5,usability,Simpl,Simplify,5,"[DF] Simplify adding friend info in distributed task; * Move logic to a separate function. * Use zip_longest to address both cases of a single friend tree or a. chain of friends. * Correct ""/"" token to ""?#"" to separate file name from tree name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10245:91,availability,slo,slow,91,[core] Rework the field lookups in base classes to avoid iteration.; The past approach was slow but also does not allow us to migrate to llvm13 as. the CXXBasePath cannot take the lookup iterator anymore. See llvm/llvm-project@0cb7e7ca0c864e052bf49978f3bcd667c9e16930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:1,energy efficiency,core,core,1,[core] Rework the field lookups in base classes to avoid iteration.; The past approach was slow but also does not allow us to migrate to llvm13 as. the CXXBasePath cannot take the lookup iterator anymore. See llvm/llvm-project@0cb7e7ca0c864e052bf49978f3bcd667c9e16930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:91,reliability,slo,slow,91,[core] Rework the field lookups in base classes to avoid iteration.; The past approach was slow but also does not allow us to migrate to llvm13 as. the CXXBasePath cannot take the lookup iterator anymore. See llvm/llvm-project@0cb7e7ca0c864e052bf49978f3bcd667c9e16930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:105,reliability,doe,does,105,[core] Rework the field lookups in base classes to avoid iteration.; The past approach was slow but also does not allow us to migrate to llvm13 as. the CXXBasePath cannot take the lookup iterator anymore. See llvm/llvm-project@0cb7e7ca0c864e052bf49978f3bcd667c9e16930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:51,safety,avoid,avoid,51,[core] Rework the field lookups in base classes to avoid iteration.; The past approach was slow but also does not allow us to migrate to llvm13 as. the CXXBasePath cannot take the lookup iterator anymore. See llvm/llvm-project@0cb7e7ca0c864e052bf49978f3bcd667c9e16930,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10246:10,integrability,coupl,couple,10,"Disable a couple of TMVA tutorials if tmva-pymva is OFF; Disable `TMVA_CNN_Classification.C` and `TMVA_RNN_Classification.C` if `tmva-pymva` is not enabled (both tutorials use `TMVA::Python_Executable()`, which is defined in pymva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10246
https://github.com/root-project/root/pull/10246:10,modifiability,coupl,couple,10,"Disable a couple of TMVA tutorials if tmva-pymva is OFF; Disable `TMVA_CNN_Classification.C` and `TMVA_RNN_Classification.C` if `tmva-pymva` is not enabled (both tutorials use `TMVA::Python_Executable()`, which is defined in pymva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10246
https://github.com/root-project/root/pull/10246:10,testability,coupl,couple,10,"Disable a couple of TMVA tutorials if tmva-pymva is OFF; Disable `TMVA_CNN_Classification.C` and `TMVA_RNN_Classification.C` if `tmva-pymva` is not enabled (both tutorials use `TMVA::Python_Executable()`, which is defined in pymva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10246
https://github.com/root-project/root/pull/10247:82,availability,error,error,82,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:278,availability,error,error,278,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:558,availability,error,error,558,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1041,availability,error,error,1041,"on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1094,availability,error,errorCode,1094,"ng tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1342,availability,error,error,1342,":\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1843,availability,error,error,1843,"uild\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Mic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2282,availability,error,error,2282,"ld\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2597,availability,error,error,2597,"ongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2944,availability,error,error,2944,"are, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3281,availability,error,error,3281,"ror MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib. ```. Another patch will be applied in `roottest`, removi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3567,availability,error,error,3567,"\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib. ```. Another patch will be applied in `roottest`, removing the `RUN_SERIAL` flag on many tests, allowing to save quite some time when running roottest in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3895,availability,error,error,3895,"\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib. ```. Another patch will be applied in `roottest`, removing the `RUN_SERIAL` flag on many tests, allowing to save quite some time when running roottest in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:15,deployability,build,build,15,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:93,deployability,build,building,93,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:322,deployability,fail,failed,322,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:362,deployability,build,build,362,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:368,deployability,releas,release,368,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:650,deployability,build,build,650,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:656,deployability,releas,release,656,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:704,deployability,Releas,Release,704,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:845,deployability,build,build,845,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:851,deployability,releas,release,851,"Allow parallel build of tests from roottest on Windows; Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String ms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1146,deployability,build,build,1146,"ows:. ```. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1152,deployability,releas,release,1152,"``. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1647,deployability,build,build,1647,"build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:1653,deployability,releas,release,1653,"elease\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2086,deployability,build,build,2086,"nt32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2092,deployability,releas,release,2092,"rorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\relea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2401,deployability,build,build,2401,"ode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2407,deployability,releas,release,2407,"e, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2748,deployability,build,build,2748," Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:2754,deployability,releas,release,2754," Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86Common",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3085,deployability,build,build,3085,"ild\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3091,deployability,releas,release,3091,"ease\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. obj.cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
https://github.com/root-project/root/pull/10247:3309,deployability,Build,Build,3309,"reamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]. obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib. ```. Another patch will be applied in `roottest`, removing the `RUN_SERIAL` flag on ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10247
