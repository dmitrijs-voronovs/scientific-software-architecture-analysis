id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/12523:50,integrability,sub,submitter,50,"> > @hahnjo, who should sync the monorepo? The PR submitter? > . > Ideally yes because they also need to update `interpreter/llvm/llvm-project.tag`. However, that's currently not possible because we are still missing commits that were merged in January... Who is to blame?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:105,safety,updat,update,105,"> > @hahnjo, who should sync the monorepo? The PR submitter? > . > Ideally yes because they also need to update `interpreter/llvm/llvm-project.tag`. However, that's currently not possible because we are still missing commits that were merged in January... Who is to blame?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:105,security,updat,update,105,"> > @hahnjo, who should sync the monorepo? The PR submitter? > . > Ideally yes because they also need to update `interpreter/llvm/llvm-project.tag`. However, that's currently not possible because we are still missing commits that were merged in January... Who is to blame?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:65,interoperability,platform,platforms,65,"No problem, for me it can wait until c++20 is supported on other platforms 😉",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:46,usability,support,supported,46,"No problem, for me it can wait until c++20 is supported on other platforms 😉",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:188,deployability,upgrad,upgrade,188,Can we not cherry-pick the llvm commit https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf ? That makes it waaay more obvious that it's a backport when we upgrade llvm next time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:188,modifiability,upgrad,upgrade,188,Can we not cherry-pick the llvm commit https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf ? That makes it waaay more obvious that it's a backport when we upgrade llvm next time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:206,performance,time,time,206,Can we not cherry-pick the llvm commit https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf ? That makes it waaay more obvious that it's a backport when we upgrade llvm next time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12525:103,safety,avoid,avoid,103,"@bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:296,availability,operat,operator,296,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:479,availability,operat,operator,479,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:793,availability,operat,operators,793,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1072,availability,operat,operator,1072,"aditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1225,availability,operat,operator,1225," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1303,availability,operat,operator,1303," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1594,availability,operat,operator,1594," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1690,availability,operat,operator,1690," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:2020,availability,operat,operators,2020," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1471,deployability,fail,failing,1471," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1507,deployability,observ,observe,1507," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:648,interoperability,convers,conversions,648,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:782,interoperability,convers,conversion,782,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1008,interoperability,convers,conversions,1008,"uber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1534,interoperability,convers,conversions,1534," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1832,interoperability,convers,conversion,1832," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:2121,interoperability,convers,conversion,2121," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1991,modifiability,refact,refactor,1991," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:640,performance,perform,perform,640,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1991,performance,refactor,refactor,1991," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1085,reliability,doe,does,1085,"omparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1471,reliability,fail,failing,1471," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:105,safety,avoid,avoid,105,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:526,safety,compl,complicated,526,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1192,safety,avoid,avoid,1192," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1484,safety,test,test,1484," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:526,security,compl,complicated,526,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:170,testability,context,context,170,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:181,testability,understand,understand,181,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1479,testability,unit,unit,1479," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1484,testability,test,test,1484," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1507,testability,observ,observe,1507," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:640,usability,perform,perform,640,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`? Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1925,usability,behavi,behavior,1925," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:2030,usability,close,close,2030," far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. ```c++. #ifndef WIN32. // To avoid ambiguities. inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }. inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }. #endif. ```. fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked . I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refactor and keep asymmetric operators close together. (And just a though: you could just delete all comparisons, and rely on the conversion to `std::string_view`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:67,availability,operat,operators,67,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:500,availability,operat,operator,500,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:56,interoperability,convers,conversion,56,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:238,interoperability,convers,conversion,238,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:370,interoperability,convers,conversions,370,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:362,performance,perform,perform,362,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:444,safety,avoid,avoided,444,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:464,safety,compl,complete,464,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:464,security,compl,complete,464,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:193,usability,support,support,193,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:362,usability,perform,perform,362,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:196,availability,operat,operator,196,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:404,availability,operat,operator,404,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:60,interoperability,convers,conversions,60,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:52,performance,perform,perform,52,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:140,safety,avoid,avoided,140,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:160,safety,compl,complete,160,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:293,safety,test,tests,293,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:160,security,compl,complete,160,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:288,testability,unit,unit,288,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:293,testability,test,tests,293,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:52,usability,perform,perform,52,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. > . > Isn't that solved/avoided by having a complete set of explicit comparison operator? Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:29,availability,operat,operator,29,"> I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. I absolutely agree. I have nothing to add to (the very good) explanation by @bernhardmgruber. I could try to help debugging though, if needed, @bellenot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:42,reliability,doe,does,42,"> I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. I absolutely agree. I have nothing to add to (the very good) explanation by @bernhardmgruber. I could try to help debugging though, if needed, @bellenot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:229,usability,help,help,229,"> I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:. I absolutely agree. I have nothing to add to (the very good) explanation by @bernhardmgruber. I could try to help debugging though, if needed, @bellenot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:87,availability,operat,operator,87,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:280,availability,operat,operator,280,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:481,availability,operat,operator,481,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:815,availability,operat,operator,815,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:842,availability,operat,operator,842,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:952,availability,operat,operator,952,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1140,availability,operat,operator,1140,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1232,availability,operat,operator,1232,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1341,availability,operat,operator,1341,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1456,availability,state,state,1456,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1481,availability,operat,operator,1481,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1448,energy efficiency,current,current,1448,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:204,integrability,event,eventually,204,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1456,integrability,state,state,1456,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:392,interoperability,standard,standard,392,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:886,interoperability,semant,semantically,886,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:970,interoperability,standard,standard,970,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1557,interoperability,standard,standard,1557,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1117,safety,avoid,avoid,1117,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1883,safety,accid,accident,1883,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:429,usability,help,helper,429,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:471,usability,support,supports,471,"So, I had a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1007,usability,help,helper,1007,"a look into this with @bellenot and I think it is indeed required to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_orderi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1387,usability,support,supports,1387,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1537,usability,behavi,behavior,1537,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:1594,usability,help,helper,1594,"quired to define `operator<=>` for `TString`. Here is the reasoning:. The original example with the `std::pair<TString, int>` in a map eventually compares two pairs. Since we compile with C++20, it will invoke `operator<=>(const std::pair<TString, int>& a, const std::pair<TString, int>& b)`. That in turn will invoke some standard library internal comparison helper that will check, whether `TString` supports `operator<=>` using `std::three_way_comparable_with<TString, TString>`. This evaluates to `true` (!!), because the concept basically checkes whether `requires(TString a, TString b) { a <=> b }` is well-formed. This is the case, because a `TString` can be implicitely converted into a `const char*`: `requires(TString a, TString b) { a.operator const char* <=> b.operator const char* }` is well-formed (but semantically wrong). Now, because `TString` can be compared with `operator<=>`, the standard library internal comparison helper will actually call it to compare to `TString`s (and do a pointer comparison, which is wrong). We could avoid that, by making `operator const char*` of `TString` `explicit`. Then two `TString`s cannot be compared with `operator<=>`. However, this breaks lots of other code in ROOT. My recommendation is therefore, to implement `operator<=>` for `TString`, when the compiler supports it. There is no other way around it, because in the current state (before this PR), `operator<=>` already works for `TString` but with wrong behavior. Edit: the standard library internal comparison helper is `synth-three-way` from https://wg21.link/p1614:. ```c++. constexpr auto synth-three-way =. []<class T, class U>(const T& t, const U& u). requires requires {. { t < u } -> bool;. { u < t } -> bool;. }. {. if constexpr (ThreeWayComparableWith<T, U>) { // TString fullfills this by accident. return t <=> u; // compares pointers. } else {. if (t < u) return weak_ordering::less;. if (u < t) return weak_ordering::greater;. return weak_ordering::equivalent;. }. };. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:118,availability,operat,operator,118,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:164,availability,operat,operators,164,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:497,availability,operat,operator,497,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:571,availability,operat,operators,571,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:693,availability,operat,operators,693,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:719,availability,operat,operators,719,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:844,availability,operat,operators,844,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:201,interoperability,standard,standard,201,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:244,usability,help,helper,244,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:387,usability,user,user-images,387,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:880,usability,user,user-images,880,"> * why isn't `<=>` synthesized from `TString`'s `op<` etc with higher priority, rather than invoking casts? Because `operator<=>` cannot by synthesized from other operators. This is, I think, why the standard library has the `synth-three-way` helper. Barry Revzin's blog has some good tables with the rules: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/. ![image](https://user-images.githubusercontent.com/1224051/228194691-f3907bee-b27d-40f3-aafc-96fe89401547.png). ""We have a new operator, <=>, but more importantly we have a taxonomy. [...] The primary operators have the ability to be [reversed](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators). The secondary operators have the ability to be [rewritten](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#rewriting-secondary-operators)"". And:. ![image](https://user-images.githubusercontent.com/1224051/228194374-f92d345f-9221-42a9-9aaf-08234692b0af.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:83,usability,behavi,behavior,83,"> * why do we not see this with GCC, clang? (Or do we?). They should have the same behavior and thus the same bug. Here is a synthetic example: https://godbolt.org/z/KPbbPE1s4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:199,deployability,modul,modules,199,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:199,modifiability,modul,modules,199,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:120,safety,prevent,prevent,120,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:199,safety,modul,modules,199,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:120,security,preven,prevent,120,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:25,usability,prefer,prefer,25,"@bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:505,availability,operat,operator,505,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:201,deployability,modul,modules,201,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:201,modifiability,modul,modules,201,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:122,safety,prevent,prevent,122,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:201,safety,modul,modules,201,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:122,security,preven,prevent,122,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:247,testability,understand,understand,247,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:27,usability,prefer,prefer,27,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:489,usability,indicat,indicates,489,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:521,usability,support,supported,521,"> @bernhardmgruber I would prefer to remove the `#include <compare>` and keep `#ifdef __cpp_impl_three_way_comparison` to prevent the need of `#if (__cplusplus >= 202002L)` and potential mess with the modules, if it works and if you agree... If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. @Axel-Naumann, how can we make this work in ROOT:. ```c++. #if __has_include(<compare>). # include <compare>. #endif. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:100,deployability,modul,modules,100,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:218,deployability,modul,modules,218,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:100,modifiability,modul,modules,100,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:218,modifiability,modul,modules,218,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:100,safety,modul,modules,100,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:218,safety,modul,modules,218,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:243,safety,compl,complain,243,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:243,security,compl,complain,243,"OK, so if we want to keep `#include <compare>`, then we need `#if (__cplusplus >= 202002L)` for the modules. Because AFAIK `#if __has_include(<compare>)` is true even if we don't compile with `std=c++20`, and then the modules will pick it and complain (as we saw). So I will keep the way it is now (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:201,availability,operat,operator,201,"Note that with this implementation I now have this warning on Windows:. ```. C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:100,energy efficiency,core,core,100,"Note that with this implementation I now have this warning on Windows:. ```. C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:211,availability,operat,operator,211,"> Note that with this implementation I now have this warning on Windows:. > . > ```. > C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. > ```. And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. ```c++. const int cmp = s1.CompareTo(s2);. if (cmp == 0) return std::strong_ordering::equal;. if (cmp < 0) return std::strong_ordering::less;. return std::strong_ordering::greater;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:319,availability,operat,operator,319,"> Note that with this implementation I now have this warning on Windows:. > . > ```. > C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. > ```. And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. ```c++. const int cmp = s1.CompareTo(s2);. if (cmp == 0) return std::strong_ordering::equal;. if (cmp < 0) return std::strong_ordering::less;. return std::strong_ordering::greater;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:373,availability,down,down,373,"> Note that with this implementation I now have this warning on Windows:. > . > ```. > C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. > ```. And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. ```c++. const int cmp = s1.CompareTo(s2);. if (cmp == 0) return std::strong_ordering::equal;. if (cmp < 0) return std::strong_ordering::less;. return std::strong_ordering::greater;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:110,energy efficiency,core,core,110,"> Note that with this implementation I now have this warning on Windows:. > . > ```. > C:\root-dev\git\master\core\base\inc\TString.h(175,16): warning C5232: in C++20 this comparison calls 'std::strong_ordering operator <=>(const TString &,const TString &)' recursively. > ```. And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. ```c++. const int cmp = s1.CompareTo(s2);. if (cmp == 0) return std::strong_ordering::equal;. if (cmp < 0) return std::strong_ordering::less;. return std::strong_ordering::greater;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:47,availability,operat,operator,47,"> . > And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. > . > ```c++. > const int cmp = s1.CompareTo(s2);. > if (cmp == 0) return std::strong_ordering::equal;. > if (cmp < 0) return std::strong_ordering::less;. > return std::strong_ordering::greater;. > ```. Yes, that works. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:101,availability,down,down,101,"> . > And MSVC is right here. This is because `operator<(TString, TString)` is only declared further down in the file. Try this:. > . > ```c++. > const int cmp = s1.CompareTo(s2);. > if (cmp == 0) return std::strong_ordering::equal;. > if (cmp < 0) return std::strong_ordering::less;. > return std::strong_ordering::greater;. > ```. Yes, that works. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:11,deployability,build,build,11,@phsft-bot build just on mac13/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:15,availability,error,error,15,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:69,availability,error,error,69,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:15,performance,error,error,15,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:69,performance,error,error,69,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:15,safety,error,error,15,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:69,safety,error,error,69,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:15,usability,error,error,15,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:69,usability,error,error,69,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:265,availability,operat,operator,265,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:458,availability,operat,operator,458,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:558,availability,operat,operator,558,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:352,reliability,doe,doesn,352,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:7,testability,understand,understand,7,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:413,testability,understand,understand,413,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:249,usability,indicat,indicates,249,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:281,usability,support,supported,281,"> If I understand correcly, the `__cpp_lib_three_way_comparison` is required though, since only then the implementation provides the type `std::strong_ordering`, for which you also have to include `<compare>`. `__cpp_impl_three_way_comparison` just indicates that `operator<=>` is supported, but not the comparison category types. libc++ disagrees: it doesn't define `__cpp_lib_three_way_comparison`, as far as I understand because they don't yet implement `operator<=>` everywhere in the library. However, they do have `std::strong_ordering` and `/* ... */ operator<=>(const pair<_T1,_T2>& __x, const pair<_U1,_U2>& __y)`. End result: `TString` has the same problem with C++20 on macOS at the moment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:161,availability,down,down,161,"OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`, @hahnjo ? @bellenot could you do this? and **thank you** for tracking this down!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:239,reliability,doe,doesn,239,"> OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`? I don't know yet, still trying. It seems to solve the one tutorial I debugged in `mac13arm`, but I'll need to test with more compilers to make sure it doesn't break elsewhere...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:198,safety,test,test,198,"> OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`? I don't know yet, still trying. It seems to solve the one tutorial I debugged in `mac13arm`, but I'll need to test with more compilers to make sure it doesn't break elsewhere...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:198,testability,test,test,198,"> OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`? I don't know yet, still trying. It seems to solve the one tutorial I debugged in `mac13arm`, but I'll need to test with more compilers to make sure it doesn't break elsewhere...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:79,usability,support,support,79,"Yes, seems to work on all ""relevant"" compilers (ie those with sufficient C++20 support anyway); see https://github.com/root-project/root/pull/12792",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12526:51,interoperability,platform,platforms,51,"Don't worry, that was mostly for me to check other platforms, I was not going to merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:247,availability,error,error,247,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:247,performance,error,error,247,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:72,safety,test,test,72,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:180,safety,Test,TestBody,180,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:209,safety,test,test,209,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:247,safety,error,error,247,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:451,safety,test,test,451,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:72,testability,test,test,72,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:180,testability,Test,TestBody,180,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:209,testability,test,test,209,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:451,testability,test,test,451,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12526:247,usability,error,error,247,"FYI @eguiraud , GCC 12.2, C++20, and RDF shows e.g. ```. tree/dataframe/test/dataframe_regression.cxx: In member function ‘virtual void RDFRegressionTests_UniqueEntryNumbers_Test::TestBody()’:. tree/dataframe/test/dataframe_regression.cxx:145:48: error: call of overloaded ‘RDataFrame(const char* const&, <brace-enclosed initializer list>)’ is ambiguous. 145 | ROOT::RDataFrame df(treename, {fname, fname});. | ^. In file included from tree/dataframe/test/dataframe_regression.cxx:1:. tree/dataframe/inc/ROOT/RDataFrame.hxx:44:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, const std::vector<std::__cxx11::basic_string<char> >&, const ColumnNames_t&)’. 44 | RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,. | ^~~~~~~~~~. tree/dataframe/inc/ROOT/RDataFrame.hxx:43:4: note: candidate: ‘ROOT::RDataFrame::RDataFrame(std::string_view, std::string_view, const ColumnNames_t&)’. 43 | RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});. | ^~~~~~~~~~. ```. Possibly similar / related?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12526
https://github.com/root-project/root/pull/12528:11,deployability,build,build,11,@phsft-bot build just on mac12/cxx14 with flags -Dcocoa=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:11,deployability,build,build,11,@phsft-bot build just on mac12/cxx14 with flags -Dcocoa=Off -Dopengl=Off -Dx11=off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:11,deployability,build,build,11,@phsft-bot build just on mac12/cxx14 with flags -Dcocoa=0 -Dopengl=0 -Dx11=0 -Dbuiltin_glew=0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:22,deployability,instal,installed,22,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:199,deployability,build,build,199,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:48,safety,test,testing,48,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:48,testability,test,testing,48,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:84,availability,error,errors,84,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:169,availability,error,error,169,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:188,deployability,build,build,188,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:221,deployability,FAIL,FAILED,221,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:277,deployability,Fail,Failed,277,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:305,deployability,build,build,305,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:338,deployability,FAIL,FAILED,338,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:394,deployability,Fail,Failed,394,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:460,deployability,Fail,Failed,460,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:450,modifiability,exten,extended,450,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:84,performance,error,errors,84,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:169,performance,error,error,169,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:221,reliability,FAIL,FAILED,221,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:277,reliability,Fail,Failed,277,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:338,reliability,FAIL,FAILED,338,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:394,reliability,Fail,Failed,394,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:460,reliability,Fail,Failed,460,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:84,safety,error,errors,84,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:169,safety,error,error,169,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:215,safety,test,tests,215,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:244,safety,test,test-stressmathmore-interpreted,244,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:332,safety,test,tests,332,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:361,safety,test,test-stressmathmore-interpreted,361,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:438,safety,test,test-ntuple-extended,438,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:215,testability,test,tests,215,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:244,testability,test,test-stressmathmore-interpreted,244,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:332,testability,test,tests,332,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:361,testability,test,test-stressmathmore-interpreted,361,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:438,testability,test,test-ntuple-extended,438,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:84,usability,error,errors,84,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:169,usability,error,error,169,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:. ```. The following tests FAILED:. 19998. 	274 - test-stressmathmore-interpreted (Failed). ```. Other Windows build:. ```. The following tests FAILED:. 19541. 	276 - test-stressmathmore-interpreted (Failed). 19542. 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:88,deployability,build,build,88,This PR is actually independent on the decision on X11. Merging this PR is necessary to build without Cocoa AND without X11 (in addition to with X11).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12529:33,safety,review,review,33,"Hey, @guitargeek, Thanks for the review. I have addressed all the comments for now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:33,testability,review,review,33,"Hey, @guitargeek, Thanks for the review. I have addressed all the comments for now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:62,availability,servic,services,62,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:62,deployability,servic,services,62,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:62,integrability,servic,services,62,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:62,modifiability,servic,services,62,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:163,safety,test,testReport,163,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:204,safety,test,test,204,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:163,testability,test,testReport,163,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:204,testability,test,test,204,"FYI AddressSanitizer is unhappy after this PR: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:72,deployability,fail,failing,72,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:113,deployability,build,builds,113,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:146,deployability,build,builds,146,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:88,interoperability,platform,platforms,88,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:72,reliability,fail,failing,72,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:60,safety,test,test,60,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:60,testability,test,test,60,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:30,usability,progress,progress,30,"@guitargeek @grimmmyshini any progress on this problem? The test is now failing on many platforms in the nightly builds, and also sometimes in PR builds, I think...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:107,availability,servic,services,107,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:346,availability,servic,services,346,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:627,availability,servic,services,627,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:107,deployability,servic,services,107,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:346,deployability,servic,services,346,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:627,deployability,servic,services,627,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:107,integrability,servic,services,107,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:346,integrability,servic,services,346,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:627,integrability,servic,services,627,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:107,modifiability,servic,services,107,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:346,modifiability,servic,services,346,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:627,modifiability,servic,services,627,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:232,safety,test,testReport,232,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:273,safety,test,test,273,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:456,safety,test,testReport,456,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:497,safety,test,test,497,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:728,safety,test,testReport,728,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:769,safety,test,test,769,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:232,testability,test,testReport,232,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:273,testability,test,test,273,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:456,testability,test,testReport,456,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:497,testability,test,test,497,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:728,testability,test,testReport,728,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12529:769,testability,test,test,769,"@grimmmyshini no, still red in the nightlies (if anything, it got more likely), for example https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004-clang,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/ and https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12arm,SPEC=default,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/. AddressSanitizer still shows the same problem as last week: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12529
https://github.com/root-project/root/pull/12530:0,availability,Failur,Failures,0,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12530:0,deployability,Fail,Failures,0,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12530:0,performance,Failur,Failures,0,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12530:0,reliability,Fail,Failures,0,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12530:51,safety,review,review,51,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12530:51,testability,review,review,51,"Failures are unrelated, merging. Thank you for the review @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12534:111,usability,custom,customizable,111,"Thanks for this!! Is the nBinsX forced to be nBinsY as in the gsi-web example you sent, or are they separately customizable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:95,usability,custom,customizable,95,"> Is the nBinsX forced to be nBinsY as in the gsi-web example you sent, or are they separately customizable? For the moment they are the same, one can provide more flexible solution in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:6,availability,avail,available,6,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:145,deployability,configurat,configuration,145,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:145,integrability,configur,configuration,145,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:145,modifiability,configur,configuration,145,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:6,reliability,availab,available,6,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:6,safety,avail,available,6,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:166,safety,input,input,166,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:6,security,availab,available,6,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:145,security,configur,configuration,145,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:177,testability,context,context,177,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:166,usability,input,input,166,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12534:185,usability,menu,menu,185,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12534
https://github.com/root-project/root/pull/12536:165,availability,servic,services,165,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:267,availability,error,errors,267,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2,deployability,Build,Build,2,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:8,deployability,fail,failed,8,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:86,deployability,build,build,86,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:120,deployability,build,build,120,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:165,deployability,servic,services,165,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:217,deployability,build,build,217,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:165,integrability,servic,services,165,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:165,modifiability,servic,services,165,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:267,performance,error,errors,267,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:8,reliability,fail,failed,8,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:267,safety,error,errors,267,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:71,usability,User,Users,71,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:267,usability,error,errors,267,"> Build failed on mac11/cxx14. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171051/console). @guitargeek Are the RooFit errors above known, or might this be caused by this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:271,availability,Error,Error,271,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:320,availability,Error,Error,320,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:748,availability,Error,Error,748,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:797,availability,Error,Error,797,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1024,availability,Error,Error,1024,"her RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1073,availability,Error,Error,1073, is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1299,availability,Error,Error,1299,in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1348,availability,Error,Error,1348,tart 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1574,availability,Error,Error,1574,-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1623,availability,Error,Error,1623, Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py .......................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1840,availability,Error,Error,1840,rial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1889,availability,Error,Error,1889, 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2106,availability,Error,Error,2106,175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2155,availability,Error,Error,2155, 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py ..............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2373,availability,Error,Error,2373,0 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegrat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2422,availability,Error,Error,2422,on2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2644,availability,Error,Error,2644,06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2693,availability,Error,Error,2693,py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2912,availability,Error,Error,2912,44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2961,availability,Error,Error,2961,. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py ...............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3183,availability,Error,Error,3183,tart 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3232,availability,Error,Error,3232,:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3451,availability,Error,Error,3451,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3500,availability,Error,Error,3500,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3720,availability,Error,Error,3720,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3769,availability,Error,Error,3769,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3992,availability,Error,Error,3992,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4041,availability,Error,Error,4041,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4362,availability,failur,failures,4362,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:52,deployability,log,log,52,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:264,deployability,Fail,Failed,264,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:741,deployability,Fail,Failed,741,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1017,deployability,Fail,Failed,1017,"s in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1292,deployability,Fail,Failed,1292, found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1567,deployability,Fail,Failed,1567,utorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1833,deployability,Fail,Failed,1833,4: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2099,deployability,Fail,Failed,2099,Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2366,deployability,Fail,Failed,2366,17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2637,deployability,Fail,Failed,2637,ec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condper,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2905,deployability,Fail,Failed,2905, 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3176,deployability,Fail,Failed,3176,06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_slice,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3444,deployability,Fail,Failed,3444,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3713,deployability,Fail,Failed,3713,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3985,deployability,Fail,Failed,3985,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4362,deployability,fail,failures,4362,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:271,performance,Error,Error,271,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:320,performance,Error,Error,320,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:748,performance,Error,Error,748,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:797,performance,Error,Error,797,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1024,performance,Error,Error,1024,"her RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1073,performance,Error,Error,1073, is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1299,performance,Error,Error,1299,in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1348,performance,Error,Error,1348,tart 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1574,performance,Error,Error,1574,-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1623,performance,Error,Error,1623, Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py .......................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1840,performance,Error,Error,1840,rial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1889,performance,Error,Error,1889, 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2106,performance,Error,Error,2106,175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2155,performance,Error,Error,2155, 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py ..............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2373,performance,Error,Error,2373,0 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegrat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2422,performance,Error,Error,2422,on2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2644,performance,Error,Error,2644,06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2693,performance,Error,Error,2693,py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2912,performance,Error,Error,2912,44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2961,performance,Error,Error,2961,. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py ...............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3183,performance,Error,Error,3183,tart 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3232,performance,Error,Error,3232,:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3451,performance,Error,Error,3451,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3500,performance,Error,Error,3500,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3720,performance,Error,Error,3720,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3769,performance,Error,Error,3769,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3992,performance,Error,Error,3992,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4041,performance,Error,Error,4041,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4362,performance,failur,failures,4362,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:264,reliability,Fail,Failed,264,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:741,reliability,Fail,Failed,741,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1017,reliability,Fail,Failed,1017,"s in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1292,reliability,Fail,Failed,1292, found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1567,reliability,Fail,Failed,1567,utorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1833,reliability,Fail,Failed,1833,4: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2099,reliability,Fail,Failed,2099,Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2366,reliability,Fail,Failed,2366,17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2637,reliability,Fail,Failed,2637,ec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condper,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2905,reliability,Fail,Failed,2905, 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3176,reliability,Fail,Failed,3176,06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_slice,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3444,reliability,Fail,Failed,3444,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3713,reliability,Fail,Failed,3713,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3985,reliability,Fail,Failed,3985,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4362,reliability,fail,failures,4362,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:52,safety,log,log,52,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:150,safety,Test,Test,150,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:271,safety,Error,Error,271,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:320,safety,Error,Error,320,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:418,safety,Test,Test,418,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:627,safety,Test,Test,627,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:748,safety,Error,Error,748,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:797,safety,Error,Error,797,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:903,safety,Test,Test,903,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1024,safety,Error,Error,1024,"her RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1073,safety,Error,Error,1073, is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1178,safety,Test,Test,1178,204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1299,safety,Error,Error,1299,in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1348,safety,Error,Error,1348,tart 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1453,safety,Test,Test,1453,tendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Sta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1574,safety,Error,Error,1574,-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1623,safety,Error,Error,1623, Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py .......................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1719,safety,Test,Test,1719,.................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1840,safety,Error,Error,1840,rial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1889,safety,Error,Error,1889, 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1985,safety,Test,Test,1985,...........................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2106,safety,Error,Error,2106,175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2155,safety,Error,Error,2155, 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py ..............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2252,safety,Test,Test,2252,...................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2373,safety,Error,Error,2373,0 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegrat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2422,safety,Error,Error,2422,on2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2523,safety,Test,Test,2523,.......................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2644,safety,Error,Error,2644,06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2693,safety,Error,Error,2693,py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2791,safety,Test,Test,2791,.....................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2912,safety,Error,Error,2912,44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2961,safety,Error,Error,2961,. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py ...............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3062,safety,Test,Test,3062,................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3183,safety,Error,Error,3183,tart 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3232,safety,Error,Error,3232,:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3330,safety,Test,Test,3330,"...............................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3451,safety,Error,Error,3451,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3500,safety,Error,Error,3500,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3599,safety,Test,Test,3599,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3720,safety,Error,Error,3720,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3769,safety,Error,Error,3769,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3871,safety,Test,Test,3871,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3992,safety,Error,Error,3992,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4041,safety,Error,Error,4041,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4140,safety,Test,Test,4140,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4274,safety,test,test,4274,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4357,safety,test,test,4357,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:52,security,log,log,52,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:52,testability,log,log,52,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:150,testability,Test,Test,150,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:418,testability,Test,Test,418,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:627,testability,Test,Test,627,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:903,testability,Test,Test,903,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1178,testability,Test,Test,1178,204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1453,testability,Test,Test,1453,tendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Sta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1719,testability,Test,Test,1719,.................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1985,testability,Test,Test,1985,...........................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2252,testability,Test,Test,2252,...................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2523,testability,Test,Test,2523,.......................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2791,testability,Test,Test,2791,.....................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3062,testability,Test,Test,3062,................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3330,testability,Test,Test,3330,"...............................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3599,testability,Test,Test,3599,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3871,testability,Test,Test,3871,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4140,testability,Test,Test,4140,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4274,testability,test,test,4274,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4357,testability,test,test,4357,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:271,usability,Error,Error,271,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:320,usability,Error,Error,320,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:748,usability,Error,Error,748,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:797,usability,Error,Error,797,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1024,usability,Error,Error,1024,"her RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plotting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1073,usability,Error,Error,1073, is a problem when using RooFit from Python now:. ```. 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1299,usability,Error,Error,1299,in output. Regex=[Error in] 10.10 sec. 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1348,usability,Error,Error,1348,tart 1172: tutorial-roofit-rf304_uncorrprod-py. 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec. 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1574,usability,Error,Error,1574,-roofit-rf305_condcorrprod-py. 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1623,usability,Error,Error,1623, Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec. 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py .......................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1840,usability,Error,Error,1840,rial-roofit-rf306_condpereventerrors-py. 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:1889,usability,Error,Error,1889, 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec. 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2106,usability,Error,Error,2106,175: tutorial-roofit-rf307_fullpereventerrors-py. 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2155,usability,Error,Error,2155, 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec. 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py ..............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2373,usability,Error,Error,2373,0 Start 1176: tutorial-roofit-rf308_normintegration2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegrat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2422,usability,Error,Error,2422,on2d-py. 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec. 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2644,usability,Error,Error,2644,06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2693,usability,Error,Error,2693,py. 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec. 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2912,usability,Error,Error,2912,44 Start 1178: tutorial-roofit-rf310_sliceplot-py. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:2961,usability,Error,Error,2961,. 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec. 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py ...............................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3183,usability,Error,Error,3183,tart 1179: tutorial-roofit-rf311_rangeplot-py. 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3232,usability,Error,Error,3232,:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3451,usability,Error,Error,3451,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3500,usability,Error,Error,3500,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3720,usability,Error,Error,3720,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3769,usability,Error,Error,3769,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:3992,usability,Error,Error,3992,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:4041,usability,Error,Error,4041,"d Error regular expression found in output. Regex=[Error in] 10.82 sec. 17:06:49 Start 1180: tutorial-roofit-rf312_multirangefit-py. 17:06:49 1261/2373 Test #1172: tutorial-roofit-rf304_uncorrprod-py ...............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.87 sec. 17:06:49 Start 1181: tutorial-roofit-rf313_paramranges-py. 17:06:50 1262/2373 Test #1169: tutorial-roofit-rf301_composition-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 12.20 sec. 17:06:50 Start 1182: tutorial-roofit-rf314_paramfitrange-py. 17:06:50 1263/2373 Test #1173: tutorial-roofit-rf305_condcorrprod-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.15 sec. 17:06:50 Start 1183: tutorial-roofit-rf315_projectpdf-py. 17:06:50 1264/2373 Test #1176: tutorial-roofit-rf308_normintegration2d-py ........................................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec. 17:06:50 Start 1184: tutorial-roofit-rf316_llratioplot-py. 17:06:50 1265/2373 Test #1174: tutorial-roofit-rf306_condpereventerrors-py .......................................................***Failed Error regular expression found in output. Regex=[Error in] 10.38 sec. 17:06:50 Start 1185: tutorial-roofit-rf401_importttreethx-py. 17:06:51 1266/2373 Test #1177: tutorial-roofit-rf309_ndimplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.90 sec. 17:06:51 Start 1186: tutorial-roofit-rf402_datahandling-py. 18:00:45 1267/2373 Test #1178: tutorial-roofit-rf310_sliceplot-py ................................................................ ```. And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:245,availability,failur,failures,245,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:60,deployability,log,log,60,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:245,deployability,fail,failures,245,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:273,deployability,build,build,273,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:294,deployability,log,logged,294,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:407,deployability,build,build,407,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:245,performance,failur,failures,245,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:245,reliability,fail,failures,245,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:60,safety,log,log,60,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:157,safety,test,test,157,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:240,safety,test,test,240,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:294,safety,log,logged,294,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:368,safety,test,tests,368,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:60,security,log,log,60,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:294,security,log,logged,294,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:60,testability,log,log,60,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:157,testability,test,test,157,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:240,testability,test,test,240,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:294,testability,log,logged,294,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:368,testability,test,tests,368,"> No, we don't see this in other RooFit PRs. > . > From the log, it seems that there is a problem when using RooFit from Python now:. > . > And in the final test the whole run crashes, that's why in the comment on GitHub we don't see these test failures. I'm rerunning the build right now, and logged in into the mac node where it runs. It's a different node, and the tests seem to pass. Let's wait for the build to finish, but I would assume it's a problem with the node where it ran.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:11,deployability,build,build,11,@phsft-bot build only on mac11/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:46,availability,failur,failure,46,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:46,deployability,fail,failure,46,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:46,performance,failur,failure,46,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:46,reliability,fail,failure,46,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:20,safety,test,tests,20,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:20,testability,test,tests,20,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:88,deployability,DEPEND,DEPENDENCIES,88,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:250,deployability,depend,dependency,250,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:374,deployability,configurat,configuration,374,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:88,integrability,DEPEND,DEPENDENCIES,88,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:242,integrability,PUB,PUBLIC,242,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:250,integrability,depend,dependency,250,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:374,integrability,configur,configuration,374,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:88,modifiability,DEPEND,DEPENDENCIES,88,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:250,modifiability,depend,dependency,250,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:374,modifiability,configur,configuration,374,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:88,safety,DEPEND,DEPENDENCIES,88,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:250,safety,depend,dependency,250,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:374,security,configur,configuration,374,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:88,testability,DEPEND,DEPENDENCIES,88,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:250,testability,depend,dependency,250,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:145,deployability,DEPEND,DEPENDENCIES,145,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:307,deployability,depend,dependency,307,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:431,deployability,configurat,configuration,431,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:145,integrability,DEPEND,DEPENDENCIES,145,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:299,integrability,PUB,PUBLIC,299,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:307,integrability,depend,dependency,307,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:431,integrability,configur,configuration,431,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:145,modifiability,DEPEND,DEPENDENCIES,145,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:307,modifiability,depend,dependency,307,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:431,modifiability,configur,configuration,431,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:145,safety,DEPEND,DEPENDENCIES,145,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:307,safety,depend,dependency,307,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:431,security,configur,configuration,431,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:145,testability,DEPEND,DEPENDENCIES,145,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:307,testability,depend,dependency,307,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for? Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:115,availability,state,state,115,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:337,deployability,DEPEND,DEPENDENCIES,337,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:358,deployability,depend,dependencies,358,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:107,energy efficiency,current,current,107,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:313,energy efficiency,current,current,313,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:115,integrability,state,state,115,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:337,integrability,DEPEND,DEPENDENCIES,337,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:358,integrability,depend,dependencies,358,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:337,modifiability,DEPEND,DEPENDENCIES,337,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:358,modifiability,depend,dependencies,358,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:412,reliability,doe,doesn,412,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:337,safety,DEPEND,DEPENDENCIES,337,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:358,safety,depend,dependencies,358,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:337,testability,DEPEND,DEPENDENCIES,337,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/pull/12536:358,testability,depend,dependencies,358,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary? The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/issues/12537:115,safety,compl,completely,115,"I can reproduce the problem. One ""unusual"" feature is that a lot of the `TClonesArray` branches in the `TTree` are completely unsplit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:115,security,compl,completely,115,"I can reproduce the problem. One ""unusual"" feature is that a lot of the `TClonesArray` branches in the `TTree` are completely unsplit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:86,availability,Down,Downloads,86,"There is actually at least 2 branches with 'problems'. This command:. ```. root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. reproduces the problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:60,usability,command,command,60,"There is actually at least 2 branches with 'problems'. This command:. ```. root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. reproduces the problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:138,deployability,fail,failed,138,"The code issue seems to be that because the `TClonesArray` are not split, they require loading the original library to read the files. (I failed to emulate that library with `TFile::MakeProject` so there might still be other problems with the file which is at least missing some `StreamerInfo` entries).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:87,energy efficiency,load,loading,87,"The code issue seems to be that because the `TClonesArray` are not split, they require loading the original library to read the files. (I failed to emulate that library with `TFile::MakeProject` so there might still be other problems with the file which is at least missing some `StreamerInfo` entries).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:87,performance,load,loading,87,"The code issue seems to be that because the `TClonesArray` are not split, they require loading the original library to read the files. (I failed to emulate that library with `TFile::MakeProject` so there might still be other problems with the file which is at least missing some `StreamerInfo` entries).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:138,reliability,fail,failed,138,"The code issue seems to be that because the `TClonesArray` are not split, they require loading the original library to read the files. (I failed to emulate that library with `TFile::MakeProject` so there might still be other problems with the file which is at least missing some `StreamerInfo` entries).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:148,testability,emul,emulate,148,"The code issue seems to be that because the `TClonesArray` are not split, they require loading the original library to read the files. (I failed to emulate that library with `TFile::MakeProject` so there might still be other problems with the file which is at least missing some `StreamerInfo` entries).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:96,availability,Down,Downloads,96,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:350,availability,error,error,350,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:350,performance,error,error,350,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:350,safety,error,error,350,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:62,usability,command,command,62,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:317,usability,confirm,confirm,317,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:350,usability,error,error,350,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:444,usability,document,documentation,444,"> There is actually at least 2 branches with 'problems'. This command:. > . > ```. > root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. > . > reproduces the problems. > ```. I can confirm that this reproduces the error more succinctly. I will have a look at how those two branches are written. Is there any documentation on split/unsplit TClonesArrays?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:174,deployability,contain,containers,174,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:293,deployability,contain,contained,293,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:247,modifiability,deco,decorated,247,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:190,performance,content,content,190,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:624,performance,content,content,624,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:15,usability,document,documentation,15,"> Is there any documentation on split/unsplit TClonesArrays? If you are asking how it might happens that the `TClonesArray` are not split. If so, it is the same as any other containers. The content will not be split if:. ```. * The data member is decorated with the comment string `||`. * The contained class is not splitable ( TClass::GetClass(content_typenmame)->CanSplit() is false). * The branch was created with a split level that is low enough to allow the splitting. ```. And in your case, it is the later:. ```. root [2] cbmsim->GetBranch(""FitTracks"")->GetSplitLevel(). (int) 0. ```. which allow no splitting of the content (here the top level type is the TClonesArray itself)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:151,usability,behavi,behaviour,151,"Thanks a lot, I'll have a look whether those branches can be split. But even for unsplit branches, I assume the segmentation violation is not expected behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12540:18,availability,avail,available,18,Is any workaround available?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:18,reliability,availab,available,18,Is any workaround available?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:18,safety,avail,available,18,Is any workaround available?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:18,security,availab,available,18,Is any workaround available?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:32,deployability,build,build,32,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:80,deployability,Build,Build,80,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:86,deployability,Releas,Release,86,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:101,deployability,Build,Build,101,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:107,deployability,Releas,ReleaseWithDebugInfo,107,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:69,safety,except,exception,69,"Addition condition:. I actually build exe in Debug mode, that throws exception, Build Release is ok. Build ReleaseWithDebugInfo also works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:28,deployability,build,build,28,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:136,deployability,build,build,136,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:161,deployability,Releas,Release,161,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:284,deployability,build,build,284,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:476,deployability,build,build,476,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:506,deployability,build,build,506,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:632,deployability,version,version,632,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:632,integrability,version,version,632,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:432,interoperability,incompatib,incompatibility,432,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:632,modifiability,version,version,632,"Sorry for the delay. If you build in Debug with debug runtime libraries (`/MDd` compiler flag), that might be the issue. The ROOT debug build is linked with the Release runtime libraries (`/MD`), for several technical reasons, which is more or less equivalent to the `RelWithDebInfo` build type. If the `RelWithDebInfo` works, then I can consider the issue solved, since this is not strictly speaking a bug, but a runtime libraries incompatibility. If you really need a Debug build of ROOT, you'll have to build it yourself, but this is only needed if you need to debug also the C++ libraries. And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:71,deployability,version,version,71,"Yes, RelWithDebInfo also works. _And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you._. I was not sure about that, I thought it was ok, at least in linux it was ok. And I never saw in documentation explicitly say saw. Because if different runtime is used it usually not compiled. I think it is good enough. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:71,integrability,version,version,71,"Yes, RelWithDebInfo also works. _And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you._. I was not sure about that, I thought it was ok, at least in linux it was ok. And I never saw in documentation explicitly say saw. Because if different runtime is used it usually not compiled. I think it is good enough. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:71,modifiability,version,version,71,"Yes, RelWithDebInfo also works. _And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you._. I was not sure about that, I thought it was ok, at least in linux it was ok. And I never saw in documentation explicitly say saw. Because if different runtime is used it usually not compiled. I think it is good enough. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:259,usability,document,documentation,259,"Yes, RelWithDebInfo also works. _And note you will also need the Debug version of all the external libraries. Please let me know if that is good enough for you._. I was not sure about that, I thought it was ok, at least in linux it was ok. And I never saw in documentation explicitly say saw. Because if different runtime is used it usually not compiled. I think it is good enough. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:19,usability,close,close,19,"OK, thanks, then I close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/pull/12543:141,usability,support,support,141,"@couet . Why `ClassDefOverride(TScatter,0) `? With such settings it is not possible to store `TScatter` class and not possible to provide it support later in JSROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12543
https://github.com/root-project/root/pull/12546:85,performance,cach,cache,85,"Closing the PR because it got superseeded by #12961, where the need to the RooAddPdf cache element in the finalized computation graph is avoided.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12546
https://github.com/root-project/root/pull/12546:137,safety,avoid,avoided,137,"Closing the PR because it got superseeded by #12961, where the need to the RooAddPdf cache element in the finalized computation graph is avoided.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12546
https://github.com/root-project/root/issues/12547:48,usability,close,closed,48,@lmoneta can now the PR be merged and the issue closed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12547
https://github.com/root-project/root/issues/12548:102,availability,sli,slightly,102,"Just confirming that this is still a problem with current nightlies, though actually the behaviour is slightly different:. output:. ```. meth->GetReturnTypeName(): boost::histogram::histogram<decltype(a),S>. meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<decltype(a),S>. cl: 0. (int) 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:50,energy efficiency,current,current,50,"Just confirming that this is still a problem with current nightlies, though actually the behaviour is slightly different:. output:. ```. meth->GetReturnTypeName(): boost::histogram::histogram<decltype(a),S>. meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<decltype(a),S>. cl: 0. (int) 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:102,reliability,sli,slightly,102,"Just confirming that this is still a problem with current nightlies, though actually the behaviour is slightly different:. output:. ```. meth->GetReturnTypeName(): boost::histogram::histogram<decltype(a),S>. meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<decltype(a),S>. cl: 0. (int) 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:5,usability,confirm,confirming,5,"Just confirming that this is still a problem with current nightlies, though actually the behaviour is slightly different:. output:. ```. meth->GetReturnTypeName(): boost::histogram::histogram<decltype(a),S>. meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<decltype(a),S>. cl: 0. (int) 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:89,usability,behavi,behaviour,89,"Just confirming that this is still a problem with current nightlies, though actually the behaviour is slightly different:. output:. ```. meth->GetReturnTypeName(): boost::histogram::histogram<decltype(a),S>. meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<decltype(a),S>. cl: 0. (int) 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12549:27,deployability,upgrad,upgrade,27,"Still same issue after the upgrade to LLVM 16. As this involves `TClingCallFunc`, I'm adding Vassil here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:27,modifiability,upgrad,upgrade,27,"Still same issue after the upgrade to LLVM 16. As this involves `TClingCallFunc`, I'm adding Vassil here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:43,energy efficiency,current,current,43,Just confirming this is still a problem in current nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:5,usability,confirm,confirming,5,Just confirming this is still a problem in current nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/pull/12551:18,usability,user,user,18,"In principle, the user's guide is frozen. We now rely on the [Manual](https://root.cern/manual/) and the [reference guide](https://root.cern/doc/master/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:25,usability,guid,guide,25,"In principle, the user's guide is frozen. We now rely on the [Manual](https://root.cern/manual/) and the [reference guide](https://root.cern/doc/master/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:116,usability,guid,guide,116,"In principle, the user's guide is frozen. We now rely on the [Manual](https://root.cern/manual/) and the [reference guide](https://root.cern/doc/master/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:89,usability,user,user,89,"@olantwin how did you find this? (Tells us what we need to remove.). > In principle, the user's guide is frozen. @couet should we remove this file then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:96,usability,guid,guide,96,"@olantwin how did you find this? (Tells us what we need to remove.). > In principle, the user's guide is frozen. @couet should we remove this file then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:119,usability,document,documentation,119,"> @olantwin how did you find this? (Tells us what we need to remove.). It was the first useful hit when trying to find documentation on split(level). I also just checked the manual now, and branch splitting is not covered in similar detail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:210,safety,compl,complete,210,"@axel, It is just a few lines to be removed in [documentation/users-guide/Trees.md](https://github.com/root-project/root/pull/12551#diff-117cc7b0ab6e57e24e841291453a0649b39771247133629bd536ebd0212a3510) (not a complete file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:210,security,compl,complete,210,"@axel, It is just a few lines to be removed in [documentation/users-guide/Trees.md](https://github.com/root-project/root/pull/12551#diff-117cc7b0ab6e57e24e841291453a0649b39771247133629bd536ebd0212a3510) (not a complete file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:48,usability,document,documentation,48,"@axel, It is just a few lines to be removed in [documentation/users-guide/Trees.md](https://github.com/root-project/root/pull/12551#diff-117cc7b0ab6e57e24e841291453a0649b39771247133629bd536ebd0212a3510) (not a complete file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:62,usability,user,users-guide,62,"@axel, It is just a few lines to be removed in [documentation/users-guide/Trees.md](https://github.com/root-project/root/pull/12551#diff-117cc7b0ab6e57e24e841291453a0649b39771247133629bd536ebd0212a3510) (not a complete file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:222,usability,Guid,Guide,222,"> I also just checked the manual now, and branch splitting is not covered in similar detail. May be that's for @pcanal in that case to decide what should be added in the manual ... @olantwin have you checked the reference Guide too ? That's where ALL the information should be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:120,deployability,fail,failed,120,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place. The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:120,reliability,fail,failed,120,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place. The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:43,usability,Guid,Guide,43,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place. The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:143,usability,navigat,navigating,143,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place. The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:350,usability,document,documentation,350,"> @olantwin have you checked the reference Guide too ? That's where ALL the information should be. I have looked, but I failed to find much by navigating manually and by searching in the top right corner. But maybe I wasn't looking in the right place. The only other information I found that touches on splitlevels are a few paragraphs in the [TTree documentation](https://root.cern/doc/v626/classTTree.html) (which has disappeared in [6.28](https://root.cern/doc/v628/classTTree.html)?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:185,availability,state,statement,185,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:185,integrability,state,statement,185,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:98,usability,guid,guide,98,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:224,usability,user,users,224,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:230,usability,guid,guide,230,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:367,usability,guid,guide,367,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:424,usability,document,documentation,424,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:121,deployability,contain,containers,121,Thanks a lot! I don't think a similar change needs to be made anywhere else. The TTree documentation doesn't address STL containers specifically when discussing split-levels and I could not find a discussion in the manual when I checked last year.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:132,interoperability,specif,specifically,132,Thanks a lot! I don't think a similar change needs to be made anywhere else. The TTree documentation doesn't address STL containers specifically when discussing split-levels and I could not find a discussion in the manual when I checked last year.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:101,reliability,doe,doesn,101,Thanks a lot! I don't think a similar change needs to be made anywhere else. The TTree documentation doesn't address STL containers specifically when discussing split-levels and I could not find a discussion in the manual when I checked last year.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:87,usability,document,documentation,87,Thanks a lot! I don't think a similar change needs to be made anywhere else. The TTree documentation doesn't address STL containers specifically when discussing split-levels and I could not find a discussion in the manual when I checked last year.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12553:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:29,deployability,updat,update,29,"Also, perhaps we should also update `TClassTable` documentation mentioning that all the functions are thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:29,safety,updat,update,29,"Also, perhaps we should also update `TClassTable` documentation mentioning that all the functions are thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:109,safety,safe,safe,109,"Also, perhaps we should also update `TClassTable` documentation mentioning that all the functions are thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:29,security,updat,update,29,"Also, perhaps we should also update `TClassTable` documentation mentioning that all the functions are thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:50,usability,document,documentation,50,"Also, perhaps we should also update `TClassTable` documentation mentioning that all the functions are thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:12,availability,failur,failure,12,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:12,deployability,fail,failure,12,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:34,deployability,infrastructur,infrastructure,34,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:12,performance,failur,failure,12,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12553:12,reliability,fail,failure,12,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12553
https://github.com/root-project/root/pull/12556:112,modifiability,variab,variable,112,"The reason was probably because in the past (a few weeks ago), the RooDataSet didn't implicitly create a weight variable if it was missing. So this PR is a follow-up to #12227.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12556
https://github.com/root-project/root/pull/12557:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12557
https://github.com/root-project/root/pull/12557:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12557
https://github.com/root-project/root/issues/12559:18,deployability,automat,automatic,18,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. . There is the simple workaround:. ```. auto legends = file->Get(""legends""). legends->Draw();. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:272,energy efficiency,Draw,Draw,272,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. . There is the simple workaround:. ```. auto legends = file->Get(""legends""). legends->Draw();. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:18,testability,automat,automatic,18,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. . There is the simple workaround:. ```. auto legends = file->Get(""legends""). legends->Draw();. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:201,testability,simpl,simple,201,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. . There is the simple workaround:. ```. auto legends = file->Get(""legends""). legends->Draw();. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:201,usability,simpl,simple,201,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. . There is the simple workaround:. ```. auto legends = file->Get(""legends""). legends->Draw();. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/pull/12561:85,deployability,modul,module,85,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:92,deployability,depend,dependencies,92,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:212,deployability,build,build,212,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:92,integrability,depend,dependencies,92,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:74,interoperability,specif,specifying,74,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:85,modifiability,modul,module,85,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:92,modifiability,depend,dependencies,92,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:85,safety,modul,module,85,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:92,safety,depend,dependencies,92,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:92,testability,depend,dependencies,92,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:178,testability,understand,understand,178,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:75,deployability,patch,patch,75,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,deployability,depend,depend,151,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:172,deployability,modul,modules,172,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:188,deployability,depend,dependee,188,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:374,deployability,depend,dependency,374,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,integrability,depend,depend,151,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:188,integrability,depend,dependee,188,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:374,integrability,depend,dependency,374,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:96,interoperability,specif,specify,96,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,modifiability,depend,depend,151,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:172,modifiability,modul,modules,172,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:188,modifiability,depend,dependee,188,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:374,modifiability,depend,dependency,374,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:75,safety,patch,patch,75,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,safety,depend,depend,151,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:172,safety,modul,modules,172,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:188,safety,depend,dependee,188,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:374,safety,depend,dependency,374,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:75,security,patch,patch,75,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,testability,depend,depend,151,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:188,testability,depend,dependee,188,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:374,testability,depend,dependency,374,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:107,availability,failur,failures,107,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:107,deployability,fail,failures,107,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:191,deployability,patch,patch,191,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:267,deployability,depend,depend,267,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:288,deployability,modul,modules,288,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:304,deployability,depend,dependee,304,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:490,deployability,depend,dependency,490,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:597,deployability,depend,dependencies,597,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:267,integrability,depend,depend,267,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:304,integrability,depend,dependee,304,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:490,integrability,depend,dependency,490,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:597,integrability,depend,dependencies,597,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:212,interoperability,specif,specify,212,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:267,modifiability,depend,depend,267,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:288,modifiability,modul,modules,288,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:304,modifiability,depend,dependee,304,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:490,modifiability,depend,dependency,490,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:597,modifiability,depend,dependencies,597,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:107,performance,failur,failures,107,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:107,reliability,fail,failures,107,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:584,reliability,doe,doesn,584,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:191,safety,patch,patch,191,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:267,safety,depend,depend,267,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:288,safety,modul,modules,288,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:304,safety,depend,dependee,304,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:490,safety,depend,dependency,490,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:597,safety,depend,dependencies,597,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:191,security,patch,patch,191,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:77,testability,understand,understand,77,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:267,testability,depend,depend,267,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:304,testability,depend,dependee,304,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:490,testability,depend,dependency,490,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:518,testability,understand,understand,518,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:597,testability,depend,dependencies,597,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:55,usability,progress,progress,55,"@hahnjo, is there a way to move forward without losing progress we made for windows? cc: @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,integrability,messag,message,151,"> @hahnjo, is there a way to move forward without losing progress we made for windows? I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:151,interoperability,messag,message,151,"> @hahnjo, is there a way to move forward without losing progress we made for windows? I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:57,usability,progress,progress,57,"> @hahnjo, is there a way to move forward without losing progress we made for windows? I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:253,deployability,depend,dependencies,253,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:285,deployability,depend,dependencies,285,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:320,deployability,modul,modules,320,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:159,integrability,messag,message,159,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:253,integrability,depend,dependencies,253,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:285,integrability,depend,dependencies,285,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:159,interoperability,messag,message,159,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:253,modifiability,depend,dependencies,253,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:285,modifiability,depend,dependencies,285,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:320,modifiability,modul,modules,320,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:253,safety,depend,dependencies,253,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:285,safety,depend,dependencies,285,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:320,safety,modul,modules,320,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:253,testability,depend,dependencies,253,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:285,testability,depend,dependencies,285,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:59,usability,progress,progress,59,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:229,usability,help,help,229,"> > @hahnjo, is there a way to move forward without losing progress we made for windows? > . > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:511,availability,state,state,511,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:711,availability,failur,failures,711,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:265,deployability,depend,dependencies,265,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:297,deployability,depend,dependencies,297,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:332,deployability,modul,modules,332,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:711,deployability,fail,failures,711,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:494,energy efficiency,current,currently,494,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:545,energy efficiency,current,currently,545,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:165,integrability,messag,message,165,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:265,integrability,depend,dependencies,265,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:297,integrability,depend,dependencies,297,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:442,integrability,coupl,couple,442,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:511,integrability,state,state,511,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:165,interoperability,messag,message,165,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:265,modifiability,depend,dependencies,265,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:297,modifiability,depend,dependencies,297,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:332,modifiability,modul,modules,332,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:442,modifiability,coupl,couple,442,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:711,performance,failur,failures,711,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:711,reliability,fail,failures,711,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:265,safety,depend,dependencies,265,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:297,safety,depend,dependencies,297,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:332,safety,modul,modules,332,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:706,safety,test,test,706,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:265,testability,depend,dependencies,265,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:297,testability,depend,dependencies,297,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:442,testability,coupl,couple,442,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:706,testability,test,test,706,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:61,usability,progress,progress,61,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:241,usability,help,help,241,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:530,usability,clear,clear,530,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows? > > . > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. > . > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules? Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12565:30,deployability,log,log,30,Can you extent the git commit log with the reasons/advantages for the change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:8,modifiability,exten,extent,8,Can you extent the git commit log with the reasons/advantages for the change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:30,safety,log,log,30,Can you extent the git commit log with the reasons/advantages for the change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:30,security,log,log,30,Can you extent the git commit log with the reasons/advantages for the change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:30,testability,log,log,30,Can you extent the git commit log with the reasons/advantages for the change?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:206,availability,error,errors,206,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:336,availability,down,downside,336,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:88,integrability,pub,public,88,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:206,performance,error,errors,206,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:206,safety,error,errors,206,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:148,usability,user,users,148,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:206,usability,error,errors,206,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:303,usability,intuit,intuitive,303,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call. chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12566:66,reliability,doe,does,66,@ferdymercury . Did you see `tutorials/hist/hlHisto2.C` macro? It does mostly the same as you proposing here. And it works also for `TWebCanvas`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:76,usability,close,close,76,"And combined with `tutorials/hist/h2proj.C`, one can get functionality very close to that I implement recently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:59,security,access,accessible,59,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:79,testability,context,context,79,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:87,usability,menu,menu,87,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:128,usability,tool,tools,128,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:193,usability,interact,interactive-viewer,193,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:272,usability,user,user,272,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools. See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:152,testability,understand,understand,152,IMHO this PR should have been squashed. Now we have fixup commits in `master` that don't provide much value from a history perspective and (as far as I understand) leave us with problems should we ever come across them during a `git-bisect` run...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/issues/12567:27,availability,fault,faulty,27,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:219,deployability,log,logic,219,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:27,energy efficiency,fault,faulty,27,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:27,performance,fault,faulty,27,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:27,reliability,fault,faulty,27,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:27,safety,fault,faulty,27,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:219,safety,log,logic,219,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:219,security,log,logic,219,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:204,testability,understand,understand,204,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:219,testability,log,logic,219,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12567:177,reliability,doe,does,177,Indeed there is [similar code in PaintInit](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7215). It does not match. It should be similar I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12567
https://github.com/root-project/root/issues/12569:148,performance,time,time-constructor,148,Analysis of the bug origin and proposed fix on the [ROOT forum](https://root-forum.cern.ch/t/bug-in-ttimestamp-days-are-skipped-when-using-date-and-time-constructor/54201/9).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/issues/12569:25,reliability,doe,does,25,A simple workaround that does not involve modifying the TTimeStamp code is provided o the ROOT forum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/issues/12569:42,security,modif,modifying,42,A simple workaround that does not involve modifying the TTimeStamp code is provided o the ROOT forum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/issues/12569:2,testability,simpl,simple,2,A simple workaround that does not involve modifying the TTimeStamp code is provided o the ROOT forum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/issues/12569:2,usability,simpl,simple,2,A simple workaround that does not involve modifying the TTimeStamp code is provided o the ROOT forum.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/pull/12572:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12572
https://github.com/root-project/root/pull/12574:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12574
https://github.com/root-project/root/pull/12574:28,security,team,team,28,"(I've added @enirolf to the team, FYI @jblomer )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12574
https://github.com/root-project/root/pull/12580:233,deployability,artifact,artifacts,233,"> Thanks, @ianna ! > . > * Could you please rewrite the history to combine the two commits? Thanks, @Axel-Naumann. I'll do that. > * I don't see `gAnnotations` and `gCType` being read anywhere. I suspect that they are not needed and artifacts of a failed merge? No, I think, these are the new features from @wlav's master branch. I think, they are harmless :-). but I'll leave it to @wlav to comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:248,deployability,fail,failed,248,"> Thanks, @ianna ! > . > * Could you please rewrite the history to combine the two commits? Thanks, @Axel-Naumann. I'll do that. > * I don't see `gAnnotations` and `gCType` being read anywhere. I suspect that they are not needed and artifacts of a failed merge? No, I think, these are the new features from @wlav's master branch. I think, they are harmless :-). but I'll leave it to @wlav to comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:248,reliability,fail,failed,248,"> Thanks, @ianna ! > . > * Could you please rewrite the history to combine the two commits? Thanks, @Axel-Naumann. I'll do that. > * I don't see `gAnnotations` and `gCType` being read anywhere. I suspect that they are not needed and artifacts of a failed merge? No, I think, these are the new features from @wlav's master branch. I think, they are harmless :-). but I'll leave it to @wlav to comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:62,deployability,patch,patch,62,"`gAnnotations` and `gCType` have no reason to be part of this patch. FWIW, the former is used when pulling [annotations](https://peps.python.org/pep-3107/) from a Python function, so that these can be used to direct template instantations; the latter is used to support low-level types from [ctypes](https://docs.python.org/3/library/ctypes.html). Both are worthwhile features, but nothing to do with `__cpp_cast__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:62,safety,patch,patch,62,"`gAnnotations` and `gCType` have no reason to be part of this patch. FWIW, the former is used when pulling [annotations](https://peps.python.org/pep-3107/) from a Python function, so that these can be used to direct template instantations; the latter is used to support low-level types from [ctypes](https://docs.python.org/3/library/ctypes.html). Both are worthwhile features, but nothing to do with `__cpp_cast__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:62,security,patch,patch,62,"`gAnnotations` and `gCType` have no reason to be part of this patch. FWIW, the former is used when pulling [annotations](https://peps.python.org/pep-3107/) from a Python function, so that these can be used to direct template instantations; the latter is used to support low-level types from [ctypes](https://docs.python.org/3/library/ctypes.html). Both are worthwhile features, but nothing to do with `__cpp_cast__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:262,usability,support,support,262,"`gAnnotations` and `gCType` have no reason to be part of this patch. FWIW, the former is used when pulling [annotations](https://peps.python.org/pep-3107/) from a Python function, so that these can be used to direct template instantations; the latter is used to support low-level types from [ctypes](https://docs.python.org/3/library/ctypes.html). Both are worthwhile features, but nothing to do with `__cpp_cast__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:14,deployability,patch,patch,14,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:69,deployability,version,version,69,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:69,integrability,version,version,69,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:69,modifiability,version,version,69,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:14,safety,patch,patch,14,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:14,security,patch,patch,14,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:99,usability,minim,minimum,99,"Ok, I see the patch needs `PyObject_CallMethodNoArgs` that is new in version 3.9. Which one is the minimum Python requirement for ROOT - 3.8?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:22,energy efficiency,current,currently,22,"Python 3.6 is what we currently need to support, given the distros we need to support, RHEL8 / Alma8 in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:40,usability,support,support,40,"Python 3.6 is what we currently need to support, given the distros we need to support, RHEL8 / Alma8 in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:78,usability,support,support,78,"Python 3.6 is what we currently need to support, given the distros we need to support, RHEL8 / Alma8 in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:85,interoperability,compatib,compatibility,85,See [here](https://github.com/wlav/CPyCppyy/blob/master/src/CPyCppyy.h#L361) for the compatibility code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:388,deployability,log,logical,388,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:29,interoperability,convers,conversion,29,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:257,interoperability,prox,proxy,257,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:298,safety,except,except,298,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:388,safety,log,logical,388,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:388,security,log,logical,388,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:388,testability,log,logical,388,"@ianna, this is the implicit conversion from a tuple of arguments: https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7. It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:421,deployability,log,logical,421,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:31,interoperability,convers,conversion,31,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:290,interoperability,prox,proxy,290,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:331,safety,except,except,331,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:421,safety,log,logical,421,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:421,security,log,logical,421,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:421,testability,log,logical,421,"> @ianna, this is the implicit conversion from a tuple of arguments: [wlav/CPyCppyy@eec92e5](https://github.com/wlav/CPyCppyy/commit/eec92e53af6e8eb0c89fe27332cdc23179059bb7). > . > It is only accepted for C++ functions that are temporaries (const ref, by value, move), whereas returning a proxy object directly works in all cases except moves. In principle I could make both work in all cases, but this seems to be more logical, especially since methods could be overloaded. Fantastic! Thanks, @wlav!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12583:4,deployability,build,build,4,One build is finished - I believe all others will be ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12583
https://github.com/root-project/root/pull/12590:2177,availability,state,stateless,2177,nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small ren,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2221,availability,Consist,Consistent,2221,from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handlin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2562,availability,Consist,Consistently,2562,"dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3250,availability,error,errors,3250,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3678,availability,redund,redundantly,3678,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4782,availability,error,errors,4782," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4806,availability,error,errors,4806,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4886,availability,error,error,4886,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5538,availability,error,error,5538,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6145,availability,state,staterror,6145,"rt()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6341,availability,error,errors,6341,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Wri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8332,availability,error,error,8332,"[HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as anothe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8396,availability,error,error,8396,". [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8805,availability,error,errors,8805,the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9249,availability,sli,slices,9249, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9700,availability,error,error,9700, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:122,deployability,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:882,deployability,depend,dependency,882,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:918,deployability,manag,management,918,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:993,deployability,build,buildLoopBegin,993,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1281,deployability,observ,observables,1281,"t(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1568,deployability,depend,dependency,1568,"econstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,deployability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,deployability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,deployability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3620,deployability,depend,dependants,3620,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3678,deployability,redundan,redundantly,3678,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5222,deployability,manag,management,5222,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6559,deployability,Depend,DependencyMissingError,6559,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7120,deployability,Compos,Composition,7120," [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Wind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8084,deployability,modul,modules,8084,"ts for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8096,deployability,modul,modules,8096,"estStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8153,deployability,modul,modules,8153,"sMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8402,deployability,log,logging,8402,"Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,deployability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9314,deployability,observ,observables,9314, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9507,deployability,modul,modules,9507, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9610,deployability,build,building,9610, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:729,energy efficiency,reduc,reduce,729,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:918,energy efficiency,manag,management,918,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1167,energy efficiency,Model,ModelConfig,1167," [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1185,energy efficiency,Model,ModelConfig,1185,"ible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1213,energy efficiency,Model,ModelConfig,1213," in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4135,energy efficiency,model,models,4135," histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5222,energy efficiency,manag,management,5222,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5925,energy efficiency,Reduc,Reduce,5925,"`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7486,energy efficiency,model,model,7486," some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7653,energy efficiency,estimat,estimates,7653,"inding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8928,energy efficiency,Reduc,Reduce,8928,Hist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:882,integrability,depend,dependency,882,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:893,integrability,pub,public,893,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1032,integrability,translat,translate,1032,"commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1055,integrability,translat,translate,1055,"` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1568,integrability,depend,dependency,1568,"econstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1579,integrability,pub,public,1579,"t simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1604,integrability,interfac,interface,1604,"857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,integrability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,integrability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2177,integrability,state,stateless,2177,nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small ren,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,integrability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3620,integrability,depend,dependants,3620,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3786,integrability,interfac,interface,3786,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3928,integrability,buffer,buffers,3928,"tore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4440,integrability,interfac,interface,4440,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5544,integrability,messag,messages,5544,"utions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6145,integrability,state,staterror,6145,"rt()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6559,integrability,Depend,DependencyMissingError,6559,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6586,integrability,pub,public,6586,"Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6991,integrability,interfac,interface,6991,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,integrability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9651,integrability,wrap,wrapper,9651, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:282,interoperability,Format,Format,282,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1032,interoperability,translat,translate,1032,"commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1055,interoperability,translat,translate,1055,"` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1157,interoperability,format,format,1157,"t. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1604,interoperability,interfac,interface,1604,"857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,interoperability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,interoperability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3101,interoperability,distribut,distributions,3101," code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,interoperability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3786,interoperability,interfac,interface,3786,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3807,interoperability,format,format,3807,"on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3899,interoperability,standard,standard,3899,"or` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4180,interoperability,convers,conversion,4180,"ngs. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4310,interoperability,specif,specify,4310,"essary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4440,interoperability,interfac,interface,4440,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4508,interoperability,standard,standard,4508,"Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4541,interoperability,distribut,distributions,4541,"ricPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error mess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5033,interoperability,convers,conversions,5033,"RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5332,interoperability,distribut,distributions,5332,"Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weigh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5366,interoperability,standard,standard,5366,"nction for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5544,interoperability,messag,messages,5544,"utions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6532,interoperability,standard,standard,6532,"t error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6991,interoperability,interfac,interface,6991,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7779,interoperability,standard,standard,7779,"e definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8268,interoperability,format,format,8268,"actoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,interoperability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8750,interoperability,format,format,8750,in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechani,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9651,interoperability,wrapper,wrapper,9651, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:203,modifiability,paramet,parameter,203,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:882,modifiability,depend,dependency,882,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1568,modifiability,depend,dependency,1568,"econstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1604,modifiability,interfac,interface,1604,"857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,modifiability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,modifiability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2455,modifiability,paramet,parameters,2455,"ader declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsRea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2614,modifiability,variab,variables,2614,"mplementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2969,modifiability,refact,refactoring,2969,"d support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,modifiability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3620,modifiability,depend,dependants,3620,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3786,modifiability,interfac,interface,3786,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4440,modifiability,interfac,interface,4440,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5399,modifiability,variab,variables,5399,"nction to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5436,modifiability,variab,variables,5436,"nterface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5485,modifiability,variab,variable,5485,"d conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6261,modifiability,refact,refactoring,6261,". [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6559,modifiability,Depend,DependencyMissingError,6559,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6991,modifiability,interfac,interface,6991,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7120,modifiability,Compos,Composition,7120," [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Wind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7137,modifiability,inherit,inheritance,7137," `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7254,modifiability,refact,refactor,7254,"or refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7630,modifiability,variab,variable,7630,"ultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7705,modifiability,variab,variables,7705,"ction for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity consta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7914,modifiability,Deco,Decouple,7914,"pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooData",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7992,modifiability,refact,refactoring,7992,"ce for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8063,modifiability,variab,variable,8063,"e improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8084,modifiability,modul,modules,8084,"ts for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8096,modifiability,modul,modules,8096,"estStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8153,modifiability,modul,modules,8153,"sMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,modifiability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9337,modifiability,paramet,parameter,9337, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9507,modifiability,modul,modules,9507, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9953,modifiability,paramet,parameter,9953, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:346,performance,memor,memory,346,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2969,performance,refactor,refactoring,2969,"d support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3250,performance,error,errors,3250,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4782,performance,error,errors,4782," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4806,performance,error,errors,4806,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4886,performance,error,error,4886,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5215,performance,memor,memory,5215,"y in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of Hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5538,performance,error,error,5538,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6261,performance,refactor,refactoring,6261,". [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6341,performance,error,errors,6341,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Wri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7254,performance,refactor,refactor,7254,"or refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7992,performance,refactor,refactoring,7992,"ce for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8300,performance,overhead,overhead,8300,"ching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8332,performance,error,error,8332,"[HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as anothe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8396,performance,error,error,8396,". [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8805,performance,error,errors,8805,the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9700,performance,error,error,9700, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,reliability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,reliability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,reliability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3678,reliability,redundan,redundantly,3678,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,reliability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9109,reliability,doe,doesn,9109, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9249,reliability,sli,slices,9249, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:122,safety,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:413,safety,Avoid,Avoid,413,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:882,safety,depend,dependency,882,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:918,safety,manag,management,918,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:978,safety,Avoid,Avoid,978,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1419,safety,test,test,1419,"de duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1568,safety,depend,dependency,1568,"econstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1720,safety,Avoid,Avoid,1720,"ce to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplifi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1895,safety,test,test,1895,"ic."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2124,safety,test,test,2124,ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2291,safety,Reme,Remember,2291," HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2356,safety,Avoid,Avoid,2356,"generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2776,safety,input,input,2776,"[RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3250,safety,error,errors,3250,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3303,safety,Avoid,Avoid,3303,"aneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3620,safety,depend,dependants,3620,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3678,safety,redund,redundantly,3678,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3815,safety,test,testRooDataHist,3815,"RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not we",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4255,safety,test,test,4255," [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4739,safety,test,test,4739,"d(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Clea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4782,safety,error,errors,4782," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4806,safety,error,errors,4806,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4886,safety,error,error,4886,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5168,safety,avoid,avoid,5168,"Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5222,safety,manag,management,5222,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5538,safety,error,error,5538,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5769,safety,avoid,avoid,5769,"th weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5860,safety,Avoid,Avoid,5860,"F] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, Mul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5950,safety,test,tests,5950," that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6000,safety,Avoid,Avoid,6000," [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6341,safety,error,errors,6341,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Wri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6512,safety,compl,comply,6512,"ram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from J",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6559,safety,Depend,DependencyMissingError,6559,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6904,safety,Avoid,Avoid,6904,"gram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7085,safety,test,tests,7085,"ctions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7099,safety,Test,TestStatistics,7099,"ctories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7295,safety,Avoid,Avoid,7295,"tory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7462,safety,test,test,7462,"erbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7794,safety,Compl,Complete,7794," in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8084,safety,modul,modules,8084,"ts for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8096,safety,modul,modules,8096,"estStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8153,safety,modul,modules,8153,"sMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8294,safety,Avoid,Avoid,8294,"oid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8332,safety,error,error,8332,"[HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as anothe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8375,safety,safe,safe,8375,"her small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8396,safety,error,error,8396,". [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8402,safety,log,logging,8402,"Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8479,safety,Avoid,Avoid,8479,"ous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8805,safety,error,errors,8805,the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9190,safety,Avoid,Avoid,9190, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9371,safety,Test,Test,9371, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9415,safety,test,testRooFuncWrapper,9415, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9507,safety,modul,modules,9507, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9700,safety,error,error,9700, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:122,security,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1167,security,Model,ModelConfig,1167," [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1185,security,Model,ModelConfig,1185,"ible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1213,security,Model,ModelConfig,1213," in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,security,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,security,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,security,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4135,security,model,models,4135," histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6512,security,compl,comply,6512,"ram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from J",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6926,security,access,access,6926,"ce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7486,security,model,model,7486," some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7794,security,Compl,Complete,7794," in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8402,security,log,logging,8402,"Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,security,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:584,testability,simul,simultaneous,584,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:882,testability,depend,dependency,882,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1281,testability,observ,observables,1281,"t(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1419,testability,test,test,1419,"de duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1568,testability,depend,dependency,1568,"econstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1895,testability,test,test,1895,"ic."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2014,testability,integr,integrals,2014,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2085,testability,integr,integrals,2085,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2104,testability,mock,mock,2104,clarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2124,testability,test,test,2124,ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2300,testability,simul,simultaneous,2300,"y. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2715,testability,simpl,simplification,2715,"oid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3390,testability,integr,integration,3390,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3620,testability,depend,dependants,3620,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3815,testability,test,testRooDataHist,3815,"RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not we",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4255,testability,test,test,4255," [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4734,testability,unit,unit,4734,"e `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4739,testability,test,test,4739,"d(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Clea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5945,testability,unit,unit,5945,"assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5950,testability,test,tests,5950," that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6559,testability,Depend,DependencyMissingError,6559,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7085,testability,test,tests,7085,"ctions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7099,testability,Test,TestStatistics,7099,"ctories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7462,testability,test,test,7462,"erbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7473,testability,simul,simultaneous,7473,"3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8402,testability,log,logging,8402,"Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8529,testability,integr,integral,8529," RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9314,testability,observ,observables,9314, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9371,testability,Test,Test,9371, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9415,testability,test,testRooFuncWrapper,9415, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:308,usability,command,command,308,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:346,usability,memor,memory,346,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public."". [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:1977,usability,support,support,1977,id need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2052,usability,support,support,2052,ranslate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2221,usability,Consist,Consistent,2221,from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handlin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2546,usability,tool,tool,2546,"ake RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGene",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2562,usability,Consist,Consistently,2562,"dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2715,usability,simpl,simplification,2715,"oid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:2776,usability,input,input,2776,"[RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:3250,usability,error,errors,3250,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4121,usability,Support,Support,4121," Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4414,usability,clear,clear,4414,"with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4782,usability,error,errors,4782," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4806,usability,error,errors,4806,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:4886,usability,error,error,4886,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5184,usability,command,command,5184,"on to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5215,usability,memor,memory,5215,"y in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of Hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:5538,usability,error,error,5538,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6341,usability,error,errors,6341,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Wri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6625,usability,Support,Support,6625,"F][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6700,usability,help,helper,6700,"directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to ta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:6981,usability,minim,minimizer,6981,"ng. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:7416,usability,support,support,7416,". [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8202,usability,Clear,Clearly,8202,"RooAbsMinimizerFcn::fit()` method. [RF] Further refactor RooJSONFactoryWSTool. [RF][HS3] Avoid catching without re-throwing. [RF][HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8332,usability,error,error,8332,"[HS3] Write out bin counts as `int` and other small improvements. [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as anothe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8396,usability,error,error,8396,". [RF] Correctly support constants in RooFit JSON IO. [RF] Add test for a simultaneous model written and read from JSON. [RF] Skip the RooSimultaneous in JSON IO. [RF] Don't export `factory_tag` in JSON. [RF][HS3] Move the default variable values to the estimates section. [RF] RooFit JSON: no need to tag variables, just export them. [RF] Rename fields in JSON file to match new standard. [RF] Complete also the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:8805,usability,error,errors,8805,the reading of likelihoods and analysis fields. [RF] Add likelihoods and analyses fields for HS3 v2. [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3. [RF] Some refactoring of RooFit HS3. [RF] New `domains` section in JSON to store variable ranges. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9129,usability,Support,Support,9129, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9382,usability,prototyp,prototype,9382, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12590:9700,usability,error,error,9700, modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Clearly mark `RooFit::CloneData()` as deprecated. [RF] Again code-format RooMinimizer. [RF] Avoid overhead of tracking evaluation error msgs when not needed. [RF] Implement safe way to set eval error logging in RooMinimizer. [RF] Use proper infinity checks in RooFit HS3. [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code. [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable. [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Inline infinity constant and checks in `RooNumber`. [RF] Code-format RooNumber.h and RooNumber.cxx. [RF] Fill weight errors when importing RooDataHists to RooDataSet. [RF] Make it possible to directly import RooDataHist to RooDataSet. [RF] Reduce code duplication in RooDataSet constructor. [RF] Always create weight var in RooDataSet when importing weighted data. [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist. [RF] Support also importing `RooDataHists` into RooDataSets. [RF] Avoid some code duplication in `RooDataSet` with importing slices. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/pull/12596:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12596
https://github.com/root-project/root/pull/12596:0,availability,Failur,Failure,0,"Failure is unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12596
https://github.com/root-project/root/pull/12596:0,deployability,Fail,Failure,0,"Failure is unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12596
https://github.com/root-project/root/pull/12596:0,performance,Failur,Failure,0,"Failure is unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12596
https://github.com/root-project/root/pull/12596:0,reliability,Fail,Failure,0,"Failure is unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12596
https://github.com/root-project/root/pull/12598:0,availability,Failur,Failures,0,Failures seem unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12598
https://github.com/root-project/root/pull/12598:0,deployability,Fail,Failures,0,Failures seem unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12598
https://github.com/root-project/root/pull/12598:0,performance,Failur,Failures,0,Failures seem unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12598
https://github.com/root-project/root/pull/12598:0,reliability,Fail,Failures,0,Failures seem unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12598
https://github.com/root-project/root/pull/12601:62,security,ident,identical,62,Can you also remove all lines from this file that are already identical in global.txt? I.e. make it a delta wrt global.txt?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12601
https://github.com/root-project/root/pull/12601:64,security,ident,identical,64,"> Can you also remove all lines from this file that are already identical in global.txt? I.e. make it a delta wrt global.txt? OK, will do",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12601
https://github.com/root-project/root/pull/12602:68,deployability,modul,modules,68,"@bellenot @vgvassilev could you check if this change works with C++ modules on Windows? It's the easiest approach that I could come up, but maybe that already works...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:68,modifiability,modul,modules,68,"@bellenot @vgvassilev could you check if this change works with C++ modules on Windows? It's the easiest approach that I could come up, but maybe that already works...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:68,safety,modul,modules,68,"@bellenot @vgvassilev could you check if this change works with C++ modules on Windows? It's the easiest approach that I could come up, but maybe that already works...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:60,deployability,modul,modules,60,"@hahnjo Well, I'll check what this change does, but the C++ modules don't work on Windows anyway...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:60,modifiability,modul,modules,60,"@hahnjo Well, I'll check what this change does, but the C++ modules don't work on Windows anyway...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:42,reliability,doe,does,42,"@hahnjo Well, I'll check what this change does, but the C++ modules don't work on Windows anyway...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:60,safety,modul,modules,60,"@hahnjo Well, I'll check what this change does, but the C++ modules don't work on Windows anyway...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:16,deployability,modul,modules,16,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:69,deployability,version,version,69,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:112,deployability,updat,updating,112,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:151,energy efficiency,Core,Core,151,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:69,integrability,version,version,69,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:16,modifiability,modul,modules,16,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:69,modifiability,version,version,69,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:16,safety,modul,modules,16,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:112,safety,updat,updating,112,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:112,security,updat,updating,112,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:80,usability,Visual,Visual,80,"So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:18,deployability,modul,modules,18,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,deployability,version,version,71,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:114,deployability,updat,updating,114,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:153,energy efficiency,Core,Core,153,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:176,energy efficiency,current,current,176,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,integrability,version,version,71,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:18,modifiability,modul,modules,18,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,modifiability,version,version,71,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:18,safety,modul,modules,18,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:114,safety,updat,updating,114,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:114,security,updat,updating,114,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:82,usability,Visual,Visual,82,"> So FYI, the C++ modules on Windows don't work at all with the latest version of Visual Studio (like always when updating it), it cannot even generate `Core.pcm`. What is the current issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:564,availability,error,error,564,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1398,availability,error,error,1398,"22\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2593,availability,error,error,2593," Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ stand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3442,availability,error,error,3442,"4.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Vi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4203,availability,error,error,4203,"ne __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4362,availability,error,error,4362,"u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4759,availability,error,error,4759,".dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4951,availability,error,error,4951,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5318,availability,error,error,5318,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5826,availability,error,error,5826,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:81,deployability,build,building,81,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:90,deployability,modul,module,90,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:112,deployability,build,building,112,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:121,deployability,modul,module,121,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:188,deployability,modul,module-includes,188,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:666,deployability,build,build,666,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1028,deployability,build,building,1028,". Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1037,deployability,modul,module,1037,"ting G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1059,deployability,build,building,1059,"n/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1068,deployability,modul,module,1068,"cm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1135,deployability,modul,module-includes,1135,"from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1471,deployability,build,build,1471,"les\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2055,deployability,build,build,2055," building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2223,deployability,build,building,2223,"mmunity\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MAC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2232,deployability,modul,module,2232,"VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2254,deployability,build,building,2254,"15\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2263,deployability,modul,module,2263,"de\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2330,deployability,modul,module-includes,2330,"C\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: cand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2667,deployability,build,build,2667,"clude\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3254,deployability,build,build,3254,"lding module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3459,deployability,build,build,3459,"e\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3465,deployability,modul,module,3465,"om:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3569,deployability,Fail,Failed,3569,"_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' impor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3608,deployability,version,version,3608,"ll to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3808,deployability,version,version,3808,"isual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstdde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3831,deployability,build,building,3831,"nity\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3840,deployability,modul,module,3840,"Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3862,deployability,build,building,3862,"include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3871,deployability,modul,module,3871,"intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3931,deployability,build,building,3931,"unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3940,deployability,modul,module,3940," char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4001,deployability,build,build,4001," unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4090,deployability,modul,module-includes,4090,"unity\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4129,deployability,build,build,4129,"clude\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4220,deployability,build,build,4220,"_MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4226,deployability,modul,module,4226,"NE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4288,deployability,build,build,4288,"ang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4379,deployability,build,build,4379," __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4385,deployability,modul,module,4385," unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4506,deployability,build,building,4506,"ing in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4515,deployability,modul,module,4515,"ling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4537,deployability,build,building,4537,"::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4546,deployability,modul,module,4546,"BICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4599,deployability,build,build,4599,"brary version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4665,deployability,modul,module-includes,4665,"ty():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4704,deployability,build,build,4704,"ry mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4776,deployability,build,build,4776," of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4782,deployability,modul,module,4782,"ntime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4900,deployability,build,build,4900,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4968,deployability,build,build,4968,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4974,deployability,modul,module,4974,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5051,deployability,build,building,5051,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5060,deployability,modul,module,5060,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5082,deployability,build,building,5082,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5091,deployability,modul,module,5091,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5150,deployability,build,build,5150,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5216,deployability,modul,module-includes,5216,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5255,deployability,build,build,5255,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5335,deployability,build,build,5335,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5341,deployability,modul,module,5341,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5418,deployability,build,building,5418,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5427,deployability,modul,module,5427,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5449,deployability,build,building,5449,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5458,deployability,modul,module,5458,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5529,deployability,build,build,5529,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5596,deployability,modul,module-includes,5596,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5657,deployability,build,build,5657,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5843,deployability,build,build,5843,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5849,deployability,modul,module,5849,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:14,energy efficiency,current,current,14,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:65,energy efficiency,Core,Core,65,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:98,energy efficiency,Core,Core,98,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:687,energy efficiency,core,core,687,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1045,energy efficiency,Core,Core,1045,"_Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1492,energy efficiency,core,core,1492," Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2240,energy efficiency,Core,Core,2240,"s\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2688,energy efficiency,core,core,2688,"285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3848,energy efficiency,Core,Core,3848,"SVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4523,energy efficiency,Core,Core,4523,"ncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5068,energy efficiency,Core,Core,5068,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5435,energy efficiency,Core,Core,5435,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3608,integrability,version,version,3608,"ll to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3808,integrability,version,version,3808,"isual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstdde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3591,interoperability,standard,standard,3591,"ror G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3693,interoperability,standard,standard,3693,"ore.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3710,interoperability,mismatch,mismatch,3710,"urn _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3791,interoperability,standard,standard,3791,"Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:90,modifiability,modul,module,90,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:121,modifiability,modul,module,121,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:188,modifiability,modul,module-includes,188,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1037,modifiability,modul,module,1037,"ting G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1068,modifiability,modul,module,1068,"cm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1135,modifiability,modul,module-includes,1135,"from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2232,modifiability,modul,module,2232,"VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2263,modifiability,modul,module,2263,"de\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2330,modifiability,modul,module-includes,2330,"C\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: cand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3465,modifiability,modul,module,3465,"om:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3608,modifiability,version,version,3608,"ll to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3808,modifiability,version,version,3808,"isual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstdde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3840,modifiability,modul,module,3840,"Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3871,modifiability,modul,module,3871,"intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3940,modifiability,modul,module,3940," char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4090,modifiability,modul,module-includes,4090,"unity\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4226,modifiability,modul,module,4226,"NE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4385,modifiability,modul,module,4385," unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4515,modifiability,modul,module,4515,"ling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4546,modifiability,modul,module,4546,"BICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4665,modifiability,modul,module-includes,4665,"ty():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4782,modifiability,modul,module,4782,"ntime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4974,modifiability,modul,module,4974,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5060,modifiability,modul,module,5060,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5091,modifiability,modul,module,5091,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5216,modifiability,modul,module-includes,5216,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5341,modifiability,modul,module,5341,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5427,modifiability,modul,module,5427,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5458,modifiability,modul,module,5458,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5596,modifiability,modul,module-includes,5596,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5849,modifiability,modul,module,5849,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:564,performance,error,error,564,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1398,performance,error,error,1398,"22\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2593,performance,error,error,2593," Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ stand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3442,performance,error,error,3442,"4.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Vi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4203,performance,error,error,4203,"ne __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4362,performance,error,error,4362,"u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4759,performance,error,error,4759,".dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4951,performance,error,error,4951,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5318,performance,error,error,5318,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5826,performance,error,error,5826,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3569,reliability,Fail,Failed,3569,"_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' impor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:90,safety,modul,module,90,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:121,safety,modul,module,121,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:188,safety,modul,module-includes,188,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:564,safety,error,error,564,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1037,safety,modul,module,1037,"ting G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1068,safety,modul,module,1068,"cm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1135,safety,modul,module-includes,1135,"from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1398,safety,error,error,1398,"22\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2232,safety,modul,module,2232,"VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2263,safety,modul,module,2263,"de\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2330,safety,modul,module-includes,2330,"C\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: cand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2593,safety,error,error,2593," Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ stand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3442,safety,error,error,3442,"4.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Vi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3465,safety,modul,module,3465,"om:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3840,safety,modul,module,3840,"Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3871,safety,modul,module,3871,"intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3940,safety,modul,module,3940," char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4090,safety,modul,module-includes,4090,"unity\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4203,safety,error,error,4203,"ne __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4226,safety,modul,module,4226,"NE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4362,safety,error,error,4362,"u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4385,safety,modul,module,4385," unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4515,safety,modul,module,4515,"ling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4546,safety,modul,module,4546,"BICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4665,safety,modul,module-includes,4665,"ty():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4759,safety,error,error,4759,".dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4782,safety,modul,module,4782,"ntime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4951,safety,error,error,4951,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4974,safety,modul,module,4974,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5060,safety,modul,module,5060,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5091,safety,modul,module,5091,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5216,safety,modul,module-includes,5216,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5318,safety,error,error,5318,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5341,safety,modul,module,5341,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5427,safety,modul,module,5427,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5458,safety,modul,module,5458,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5596,safety,modul,module-includes,5596,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5826,safety,error,error,5826,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5849,safety,modul,module,5849,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:258,usability,Visual,Visual,258,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:290,usability,Tool,Tools,290,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:385,usability,Visual,Visual,385,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:417,usability,Tool,Tools,417,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:488,usability,Visual,Visual,488,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:520,usability,Tool,Tools,520,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:564,usability,error,error,564,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:651,usability,User,Users,651,"> What is the current issue? ```. Generating G__Core.cxx, ../bin/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:1:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1206,usability,Visual,Visual,1206,"In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long _",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1238,usability,Tool,Tools,1238," Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1308,usability,Visual,Visual,1308,"5\include\algorithm:11:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1340,usability,Tool,Tools,1340," included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1398,usability,error,error,1398,"22\Community\VC\Tools\MSVC\14.35.32215\include\xmemory:14:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1456,usability,User,Users,1456,"9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\new(112,55): error GAE4BF799: declaration of 'set_new_handler' has a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1613,usability,Visual,Visual,1613,"s a different language linkage [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1645,usability,Tool,Tools,1645,"C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. _EXPORT_STD extern ""C++"" _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler) noexcept;. ^. C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1876,usability,Visual,Visual,1876,"t\new.h:32:42: note: previous declaration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:1908,usability,Tool,Tools,1908,"claration is here. _CRTIMP2 new_handler __cdecl set_new_handler(_In_opt_ new_handler _NewHandler) throw();. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2040,usability,User,Users,2040," 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(115,20): error G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2401,usability,Visual,Visual,2401,"G4BA35A91: call to '_addcarry_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2433,usability,Tool,Tools,2433,"4' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2503,usability,Visual,Visual,2503,"cxproj]. return _addcarry_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2535,usability,Tool,Tools,2535,"arry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalPar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2593,usability,error,error,2593," Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ stand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2652,usability,User,Users,2652,"\14.35.32215\include\intrin0.inl.h:285:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _addcarry_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2811,usability,Visual,Visual,2811," __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library versio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:2843,usability,Tool,Tools,2843,"^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3075,usability,Visual,Visual,3075,"c/cling\lib\clang\13.0.0\include\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3107,usability,Tool,Tools,3107,"\adxintrin.h:47:1: note: candidate function. _addcarry_u64(unsigned char __cf, unsigned long long __x,. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3239,usability,User,Users,3239,"re':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:66:. In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3442,usability,error,error,3442,"4.35.32215\include\random:12:9>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\__msvc_int128.hpp(129,20): error G4BA35A91: call to '_subborrow_u64' is ambiguous [C:\Users\bellenot\build\x64\cxxmodules\core\G__Core.vcxproj]. return _subborrow_u64(_Carry, _Left, _Right, &_Result);. ^~~~~~~~~~~~~~. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:286:36: note: candidate function. __MACHINEX64(unsigned char __cdecl _subborrow_u64(unsigned char, unsigned __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Vi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:3986,usability,User,Users,3986,"signed __int64, unsigned __int64, unsigned __int64 *)). ^. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4114,usability,User,Users,4114,"\14.35.32215\include\intrin0.inl.h:43:32: note: expanded from macro '__MACHINEX64'. #define __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4203,usability,error,error,4203,"ne __MACHINEX64 __MACHINE. ^. C:/Users/bellenot/build/x64/cxxmodules/etc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4273,usability,User,Users,4273,"tc/cling\lib\clang\13.0.0\include\adxintrin.h:63:1: note: candidate function. _subborrow_u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4362,usability,error,error,4362,"u64(unsigned char __cf, unsigned long long __x,. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4584,usability,User,Users,4584,"C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4689,usability,User,Users,4689," standard library mismatch, compiled with _CRT_MSVCP_CURRENT 'msvcp140.dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4759,usability,error,error,4759,".dll'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4885,usability,User,Users,4885,"time' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:4951,usability,error,error,4951,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5135,usability,User,Users,5135,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5240,usability,User,Users,5240,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5318,usability,error,error,5318,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5514,usability,User,Users,5514,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5642,usability,User,Users,5642,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5739,usability,Visual,Visual,5739,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5771,usability,Tool,Tools,5771,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:5826,usability,error,error,5826,"orted from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. C:/Users/bellenot/build/x64/cxxmodules/etc\cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from C:/Users/bellenot/build/x64/cxxmodules/include\Rtypes.h:29:. In file included from <module-includes>:1:. C:/Users/bellenot/build/x64/cxxmodules/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from C:/Users/bellenot/build/x64/cxxmodules/include/Rtypes.h:195:. In file included from <module-includes>:2:. In file included from C:/Users/bellenot/build/x64/cxxmodules/include/ROOT/RStringView.hxx:25:. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\string_view:9:10: fatal error: could not build module 'std'. #include <yvals.h>. ~~~~~~~~^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:47,deployability,modul,modulemap,47,We probably need an entry for `xmemory` in the modulemap..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:47,modifiability,modul,modulemap,47,We probably need an entry for `xmemory` in the modulemap..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:47,safety,modul,modulemap,47,We probably need an entry for `xmemory` in the modulemap..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:49,deployability,modul,modulemap,49,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,deployability,modul,modulemap,71,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:182,deployability,modul,modulemap,182,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:49,modifiability,modul,modulemap,49,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,modifiability,modul,modulemap,71,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:182,modifiability,modul,modulemap,182,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:49,safety,modul,modulemap,49,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:71,safety,modul,modulemap,71,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:182,safety,modul,modulemap,182,> We probably need an entry for `xmemory` in the modulemap.. [std_msvc.modulemap#L464-L467](https://github.com/root-project/root/blob/master/interpreter/cling/include/cling/std_msvc.modulemap#L464-L467),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:0,availability,ping,ping,0,"ping, what do we do with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:203,deployability,modul,modules,203,I still think this is the right way to go for two reasons. It enables windows but also improves the migration experience for external codebases. Of course it would have been better to fix the underlying modules issue on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:203,modifiability,modul,modules,203,I still think this is the right way to go for two reasons. It enables windows but also improves the migration experience for external codebases. Of course it would have been better to fix the underlying modules issue on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:203,safety,modul,modules,203,I still think this is the right way to go for two reasons. It enables windows but also improves the migration experience for external codebases. Of course it would have been better to fix the underlying modules issue on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:110,usability,experien,experience,110,I still think this is the right way to go for two reasons. It enables windows but also improves the migration experience for external codebases. Of course it would have been better to fix the underlying modules issue on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:0,availability,ping,ping,0,ping @bellenot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:73,deployability,modul,modules,73,"To be clear, this would just be a first step towards (partially enabled) modules on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:73,modifiability,modul,modules,73,"To be clear, this would just be a first step towards (partially enabled) modules on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:73,safety,modul,modules,73,"To be clear, this would just be a first step towards (partially enabled) modules on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:6,usability,clear,clear,6,"To be clear, this would just be a first step towards (partially enabled) modules on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:83,deployability,version,version,83,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:123,deployability,modul,modules,123,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:135,deployability,fail,failing,135,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:168,deployability,updat,update,168,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:83,integrability,version,version,83,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:83,modifiability,version,version,83,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:123,modifiability,modul,modules,123,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:135,reliability,fail,failing,135,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:185,reliability,doe,doesn,185,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:123,safety,modul,modules,123,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:168,safety,updat,update,168,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:193,safety,prevent,prevent,193,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:168,security,updat,update,168,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:193,security,preven,prevent,193,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:94,usability,Visual,Visual,94,"@hahnjo OK, thanks for the clarification. I'll have to check again with the latest version of Visual Studio, since the c++ modules are failing differently with each VS update. But that doesn't prevent to commit those changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12603:23,deployability,infrastructur,infrastructure,23,(reruning solely as an infrastructure test),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12603
https://github.com/root-project/root/pull/12603:38,safety,test,test,38,(reruning solely as an infrastructure test),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12603
https://github.com/root-project/root/pull/12603:38,testability,test,test,38,(reruning solely as an infrastructure test),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12603
https://github.com/root-project/root/pull/12603:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12603
https://github.com/root-project/root/issues/12606:0,reliability,Doe,Does,0,Does it work with `options.SetCompression(0)`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:212,reliability,doe,does,212,"Ok, can you provide a minimal reproducer for the problem, i.e. the code surrounding `options.SetCompression()`? We do use `RNTupleWriteOptions::SetCompression` with 0 in several options in the unit tests, and it does work there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:198,safety,test,tests,198,"Ok, can you provide a minimal reproducer for the problem, i.e. the code surrounding `options.SetCompression()`? We do use `RNTupleWriteOptions::SetCompression` with 0 in several options in the unit tests, and it does work there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:193,testability,unit,unit,193,"Ok, can you provide a minimal reproducer for the problem, i.e. the code surrounding `options.SetCompression()`? We do use `RNTupleWriteOptions::SetCompression` with 0 in several options in the unit tests, and it does work there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:198,testability,test,tests,198,"Ok, can you provide a minimal reproducer for the problem, i.e. the code surrounding `options.SetCompression()`? We do use `RNTupleWriteOptions::SetCompression` with 0 in several options in the unit tests, and it does work there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:22,usability,minim,minimal,22,"Ok, can you provide a minimal reproducer for the problem, i.e. the code surrounding `options.SetCompression()`? We do use `RNTupleWriteOptions::SetCompression` with 0 in several options in the unit tests, and it does work there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:250,availability,avail,available,250,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:335,availability,avail,available,335,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:426,availability,avail,available,426,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:513,availability,avail,available,513,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:619,availability,avail,available,619,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:146,integrability,Event,Events,146,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:493,modifiability,Paramet,ParameterSetBlob,493,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:598,modifiability,Paramet,ParameterSetBlob,598,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:250,reliability,availab,available,250,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:335,reliability,availab,available,335,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:426,reliability,availab,available,426,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:513,reliability,availab,available,513,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:619,reliability,availab,available,619,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:250,safety,avail,available,250,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:335,safety,avail,available,335,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:426,safety,avail,available,426,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:513,safety,avail,available,513,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:619,safety,avail,available,619,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:239,security,Hash,Hash,239,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:250,security,availab,available,250,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:335,security,availab,available,335,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:426,security,availab,available,426,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:513,security,availab,available,513,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:585,security,Hash,Hash,585,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12606:619,security,availab,available,619,"So here's the main snippet:. ```cpp. root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(). Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available. Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available. Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available. Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available. (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0. root [1] auto options = c->GetWriteOptions();. root [2] options.SetCompression(0);. root [3] c->SetWriteOptions(options);. root [4] c->SetMaxEntries(200000);. root [5] c->Import().ThrowOnError();. ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`. - `output2.root` - nothing. - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`. - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:. ```bash. Apptainer> ls -al output*. -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root. -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root. -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root. -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root. ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12606
https://github.com/root-project/root/issues/12610:57,modifiability,concern,concerns,57,"I'm closing this issue because the the requested feature concerns data preprocessing, which is not in the scope of RooFit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/issues/12610:57,testability,concern,concerns,57,"I'm closing this issue because the the requested feature concerns data preprocessing, which is not in the scope of RooFit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/pull/12613:19,deployability,patch,patch,19,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,deployability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,integrability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:105,integrability,repositor,repository,105,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,interoperability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:105,interoperability,repositor,repository,105,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,modifiability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,reliability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:19,safety,patch,patch,19,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:19,security,patch,patch,19,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,security,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:74,testability,integr,integrated,74,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:56,usability,prefer,prefer,56,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:93,usability,Command,CommandGuide,93,"Thanks, @sawenzel ! Would `CPLUS_INCLUDE_PATH` (see [clang docs](https://clang.llvm.org/docs/CommandGuide/clang.html#envvar-C_INCLUDE_PATH,OBJC_INCLUDE_PATH,CPLUS_INCLUDE_PATH,OBJCPLUS_INCLUDE_PATH)) and `LIBRARY_PATH` do the same job?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:30,security,sign,significant,30,> This gain can accumulate to significant savings. Can you give us an idea of the costs of the syscalls?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:33,safety,test,tested,33,> LIBRARY_PATH. They don't. Just tested it. One of the reasons is certainly that TUnixSystem is not part of Clang.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:33,testability,test,tested,33,> LIBRARY_PATH. They don't. Just tested it. One of the reasons is certainly that TUnixSystem is not part of Clang.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:138,availability,sli,slides,138,We have significant improvements thanks to the changes of Sandro. You can see what was the problem and the effect of the modifications in slides 3-8 from the presentation of Marta:. https://indico.cern.ch/event/877541/contributions/3697544/attachments/1967633/4324429/PayloadControl-T1T2Workshop.pptx.pdf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:205,integrability,event,event,205,We have significant improvements thanks to the changes of Sandro. You can see what was the problem and the effect of the modifications in slides 3-8 from the presentation of Marta:. https://indico.cern.ch/event/877541/contributions/3697544/attachments/1967633/4324429/PayloadControl-T1T2Workshop.pptx.pdf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:138,reliability,sli,slides,138,We have significant improvements thanks to the changes of Sandro. You can see what was the problem and the effect of the modifications in slides 3-8 from the presentation of Marta:. https://indico.cern.ch/event/877541/contributions/3697544/attachments/1967633/4324429/PayloadControl-T1T2Workshop.pptx.pdf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:8,security,sign,significant,8,We have significant improvements thanks to the changes of Sandro. You can see what was the problem and the effect of the modifications in slides 3-8 from the presentation of Marta:. https://indico.cern.ch/event/877541/contributions/3697544/attachments/1967633/4324429/PayloadControl-T1T2Workshop.pptx.pdf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:121,security,modif,modifications,121,We have significant improvements thanks to the changes of Sandro. You can see what was the problem and the effect of the modifications in slides 3-8 from the presentation of Marta:. https://indico.cern.ch/event/877541/contributions/3697544/attachments/1967633/4324429/PayloadControl-T1T2Workshop.pptx.pdf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,availability,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:44,deployability,depend,depends,44,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,deployability,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:286,deployability,manag,management,286,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:190,energy efficiency,reduc,reduction,190,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:230,energy efficiency,profil,profiling,230,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,energy efficiency,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:286,energy efficiency,manag,management,286,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:44,integrability,depend,depends,44,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:44,modifiability,depend,depends,44,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:230,performance,profil,profiling,230,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,reliability,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:44,safety,depend,depends,44,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,safety,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:286,safety,manag,management,286,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:44,testability,depend,depends,44,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:240,testability,monitor,monitoring,240,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:333,usability,workflow,workflows,333,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:194,availability,checkpoint,checkpointing,194,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:230,availability,operat,operations,230,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:290,availability,checkpoint,checkpointing,290,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:322,energy efficiency,core,core,322,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:63,performance,overhead,overhead,63,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:211,performance,cach,cache,211,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:194,reliability,checkpoint,checkpointing,194,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:290,reliability,checkpoint,checkpointing,290,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:77,security,sign,significant,77,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:260,testability,simpl,simplistic,260,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:260,usability,simpl,simplistic,260,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:157,testability,simpl,simple,157,"@vgvassilev : Your idea sounds nice. Implementation of such a system is, however, not realistic for us at the moment and it would also go far far beyond the simple step here. Of course, we'd be happy to address smaller comments (naming of things, etc.) if there are any.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:157,usability,simpl,simple,157,"@vgvassilev : Your idea sounds nice. Implementation of such a system is, however, not realistic for us at the moment and it would also go far far beyond the simple step here. Of course, we'd be happy to address smaller comments (naming of things, etc.) if there are any.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:438,energy efficiency,optim,optimal,438,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:67,modifiability,variab,variable,67,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:202,safety,compl,complex,202,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:202,security,compl,complex,202,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:242,testability,simpl,simpler,242,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:242,usability,simpl,simpler,242,This is indeed a good improvement. A few comments/opinions:. * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`. * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to . ```. export CLING_LDSYSPATH=`cling print_ld_syspath();`. ```. * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:16,testability,understand,understand,16,@pcanal I don't understand. > (some thing similar to export CLING_LDSYSPATH=cling print_ld_syspath();`. Could you edit your comment to fix this or elaborate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:223,security,access,access,223,> (some thing similar to export CLING_LDSYSPATH=cling print_ld_syspath();`. I actually meant: ``` CLING_LDSYSPATH=`cling print_ld_syspath();` ``` (missing the execution request). And would require the cling runtime to have access to a function named `print_ld_syspath` which you actually print the value of `LDSYSPATH` that cling calculates and uses when `CLING_LDSYSPATH` is not set.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:125,modifiability,variab,variables,125,How can we make some progress here? It looks as if @pcanal suggestions would be future improvements (apart from renaming few variables).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:21,usability,progress,progress,21,How can we make some progress here? It looks as if @pcanal suggestions would be future improvements (apart from renaming few variables).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:270,deployability,fail,fails,270,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:419,deployability,fail,fail,419,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:2,integrability,coupl,couple,2,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:442,integrability,wrap,wrapper,442,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:554,integrability,event,eventually,554,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:699,integrability,event,eventually,699,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:847,integrability,event,eventually,847,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:442,interoperability,wrapper,wrapper,442,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:2,modifiability,coupl,couple,2,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:9,modifiability,concern,concern,9,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:487,modifiability,variab,variables,487,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:270,reliability,fail,fails,270,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:419,reliability,fail,fail,419,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:370,security,hardcod,hardcoded,370,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:2,testability,coupl,couple,2,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:9,testability,concern,concern,9,"A couple concern. . ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... root.exe -q -e ""double x=1;"". ```. works perfectly but. ```. export ROOT_LDSYSPATH=... export ROOT_CPPSYSINCL=... PATH=/location_of_another_gcc/bin:${PATH}. root.exe -q -e ""double x=1;"". ```. fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of. ```. ... setup environment ... launch_O2 some args # this is the process that eventually fork all the tasks. ```. have:. ```. ... setup environment ... preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks. ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:264,deployability,stack,stack,264,"@pcanal : I agree that there is a limited danger of variable inconsistency. However, in ALICE, we are already doing it in a way similar to what you suggest: the ROOT variables are dynamically calculated and preset (before ROOT is launched) as part of the software stack initialization. There are no hard-coded things (and no one is supposed to change compiler paths on the GRID). Since we launch many ALICE-O2 executables, the preset actually needs to be done on a global level instead for every executable (otherwise we would not gain anything).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:52,modifiability,variab,variable,52,"@pcanal : I agree that there is a limited danger of variable inconsistency. However, in ALICE, we are already doing it in a way similar to what you suggest: the ROOT variables are dynamically calculated and preset (before ROOT is launched) as part of the software stack initialization. There are no hard-coded things (and no one is supposed to change compiler paths on the GRID). Since we launch many ALICE-O2 executables, the preset actually needs to be done on a global level instead for every executable (otherwise we would not gain anything).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:166,modifiability,variab,variables,166,"@pcanal : I agree that there is a limited danger of variable inconsistency. However, in ALICE, we are already doing it in a way similar to what you suggest: the ROOT variables are dynamically calculated and preset (before ROOT is launched) as part of the software stack initialization. There are no hard-coded things (and no one is supposed to change compiler paths on the GRID). Since we launch many ALICE-O2 executables, the preset actually needs to be done on a global level instead for every executable (otherwise we would not gain anything).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:149,energy efficiency,current,currently,149,> the preset actually needs to be done on a global level . The proposal was to wrap this global level (or an inner part there of). i.e. where as you currently have something 'like':. ```. part1();. export ROOT_SETUP_VAR=`eval something()`. part2();. ```. you could do:. ```. part1();. root_setup_wrapper part2(); . ```. where the line `root_setup_wrapper` is designed to have the same net result of the last 2 lines of the original.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:79,integrability,wrap,wrap,79,> the preset actually needs to be done on a global level . The proposal was to wrap this global level (or an inner part there of). i.e. where as you currently have something 'like':. ```. part1();. export ROOT_SETUP_VAR=`eval something()`. part2();. ```. you could do:. ```. part1();. root_setup_wrapper part2(); . ```. where the line `root_setup_wrapper` is designed to have the same net result of the last 2 lines of the original.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12614:43,availability,error,error,43,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:18,deployability,fail,failed,18,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:43,performance,error,error,43,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:18,reliability,fail,failed,18,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:43,safety,error,error,43,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:43,usability,error,error,43,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:152,usability,Stop,Stop,152,"The centos8 built failed with an unrelated error:. ```. gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12616:19,deployability,patch,patches,19,"I presume the llvm patches are backports, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12616:19,safety,patch,patches,19,"I presume the llvm patches are backports, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12616:19,security,patch,patches,19,"I presume the llvm patches are backports, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12616:21,deployability,patch,patches,21,"> I presume the llvm patches are backports, right? Yes, commits https://github.com/llvm/llvm-project/commit/a2ac383b44172ec47e4086d7572597ab251a4793 and https://github.com/llvm/llvm-project/commit/e3b5254d7160abde7e6302548edca2cad8a6b63f upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12616:21,safety,patch,patches,21,"> I presume the llvm patches are backports, right? Yes, commits https://github.com/llvm/llvm-project/commit/a2ac383b44172ec47e4086d7572597ab251a4793 and https://github.com/llvm/llvm-project/commit/e3b5254d7160abde7e6302548edca2cad8a6b63f upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12616:21,security,patch,patches,21,"> I presume the llvm patches are backports, right? Yes, commits https://github.com/llvm/llvm-project/commit/a2ac383b44172ec47e4086d7572597ab251a4793 and https://github.com/llvm/llvm-project/commit/e3b5254d7160abde7e6302548edca2cad8a6b63f upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12616
https://github.com/root-project/root/pull/12617:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12617
https://github.com/root-project/root/pull/12617:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12617
https://github.com/root-project/root/pull/12618:2105,availability,state,stateless,2105,nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small ren,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2149,availability,Consist,Consistent,2149,from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handlin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2490,availability,Consist,Consistently,2490,"dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3178,availability,error,errors,3178,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3606,availability,redund,redundantly,3606,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4710,availability,error,errors,4710," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4734,availability,error,errors,4734,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4814,availability,error,error,4814,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5466,availability,error,error,5466,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6073,availability,state,staterror,6073,"rt()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6269,availability,error,errors,6269,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential cras",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7796,availability,error,error,7796,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:122,deployability,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:846,deployability,manag,management,846,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:921,deployability,build,buildLoopBegin,921,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1209,deployability,observ,observables,1209,"n `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1496,deployability,depend,dependency,1496,_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,deployability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,deployability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,deployability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3548,deployability,depend,dependants,3548,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3606,deployability,redundan,redundantly,3606,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5150,deployability,manag,management,5150,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6487,deployability,Depend,DependencyMissingError,6487,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7048,deployability,Compos,Composition,7048," [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output param",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7173,deployability,modul,modules,7173,"[HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7185,deployability,modul,modules,7185,"refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7242,deployability,modul,modules,7242,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7410,deployability,observ,observables,7410,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7603,deployability,modul,modules,7603,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7706,deployability,build,building,7706,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:723,energy efficiency,reduc,reduce,723,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:846,energy efficiency,manag,management,846,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1095,energy efficiency,Model,ModelConfig,1095,"are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1113,energy efficiency,Model,ModelConfig,1113,"00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1141,energy efficiency,Model,ModelConfig,1141,". ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4063,energy efficiency,model,models,4063," histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5150,energy efficiency,manag,management,5150,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5853,energy efficiency,Reduc,Reduce,5853,"`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:960,integrability,translat,translate,960,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:983,integrability,translat,translate,983,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1496,integrability,depend,dependency,1496,_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1507,integrability,pub,public,1507,tional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have im,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1532,integrability,interfac,interface,1532,] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,integrability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,integrability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2105,integrability,state,stateless,2105,nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small ren,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,integrability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3548,integrability,depend,dependants,3548,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3714,integrability,interfac,interface,3714,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3856,integrability,buffer,buffers,3856,"tore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4368,integrability,interfac,interface,4368,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5472,integrability,messag,messages,5472,"utions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6073,integrability,state,staterror,6073,"rt()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6487,integrability,Depend,DependencyMissingError,6487,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6514,integrability,pub,public,6514,"Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6919,integrability,interfac,interface,6919,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7747,integrability,wrap,wrapper,7747,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:276,interoperability,Format,Format,276,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:960,interoperability,translat,translate,960,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:983,interoperability,translat,translate,983,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1085,interoperability,format,format,1085,"he ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1532,interoperability,interfac,interface,1532,] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,interoperability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,interoperability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3029,interoperability,distribut,distributions,3029," code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,interoperability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3714,interoperability,interfac,interface,3714,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3735,interoperability,format,format,3735,"on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3827,interoperability,standard,standard,3827,"or` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4108,interoperability,convers,conversion,4108,"ngs. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4238,interoperability,specif,specify,4238,"essary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4368,interoperability,interfac,interface,4368,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4436,interoperability,standard,standard,4436,"Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4469,interoperability,distribut,distributions,4469,"ricPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error mess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4961,interoperability,convers,conversions,4961,"RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5260,interoperability,distribut,distributions,5260,"Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weigh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5294,interoperability,standard,standard,5294,"nction for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5472,interoperability,messag,messages,5472,"utions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6460,interoperability,standard,standard,6460,"t error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6919,interoperability,interfac,interface,6919,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7747,interoperability,wrapper,wrapper,7747,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:197,modifiability,paramet,parameter,197,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1496,modifiability,depend,dependency,1496,_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1532,modifiability,interfac,interface,1532,] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,modifiability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,modifiability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2383,modifiability,paramet,parameters,2383,"ader declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsRea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2542,modifiability,variab,variables,2542,"mplementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2897,modifiability,refact,refactoring,2897,"d support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,modifiability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3548,modifiability,depend,dependants,3548,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3714,modifiability,interfac,interface,3714,"testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4368,modifiability,interfac,interface,4368,"lace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5327,modifiability,variab,variables,5327,"nction to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5364,modifiability,variab,variables,5364,"nterface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5413,modifiability,variab,variable,5413,"d conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6189,modifiability,refact,refactoring,6189,". [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6487,modifiability,Depend,DependencyMissingError,6487,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6919,modifiability,interfac,interface,6919,"S3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7048,modifiability,Compos,Composition,7048," [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output param",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7065,modifiability,inherit,inheritance,7065," `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7173,modifiability,modul,modules,7173,"[HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7185,modifiability,modul,modules,7185,"refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7242,modifiability,modul,modules,7242,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7433,modifiability,paramet,parameter,7433,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7603,modifiability,modul,modules,7603,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:8049,modifiability,paramet,parameter,8049,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:340,performance,memor,memory,340,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2897,performance,refactor,refactoring,2897,"d support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVecto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3178,performance,error,errors,3178,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4710,performance,error,errors,4710," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4734,performance,error,errors,4734,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4814,performance,error,error,4814,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5143,performance,memor,memory,5143,"y in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of Hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5466,performance,error,error,5466,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6189,performance,refactor,refactoring,6189,". [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6269,performance,error,errors,6269,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential cras",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7796,performance,error,error,7796,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,reliability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,reliability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,reliability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3606,reliability,redundan,redundantly,3606,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:122,safety,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:407,safety,Avoid,Avoid,407,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:846,safety,manag,management,846,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:906,safety,Avoid,Avoid,906,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1347,safety,test,test,1347,aks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1496,safety,depend,dependency,1496,_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1648,safety,Avoid,Avoid,1648, TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplifi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1823,safety,test,test,1823,atas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2052,safety,test,test,2052,ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2219,safety,Reme,Remember,2219," HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2284,safety,Avoid,Avoid,2284,"generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2704,safety,input,input,2704,"[RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3178,safety,error,errors,3178,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3231,safety,Avoid,Avoid,3231,"aneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3548,safety,depend,dependants,3548,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3606,safety,redund,redundantly,3606,"d dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3743,safety,test,testRooDataHist,3743,"RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not we",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4183,safety,test,test,4183," [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4667,safety,test,test,4667,"d(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Clea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4710,safety,error,errors,4710," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4734,safety,error,errors,4734,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4814,safety,error,error,4814,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5096,safety,avoid,avoid,5096,"Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5150,safety,manag,management,5150,"IO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5466,safety,error,error,5466,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5697,safety,avoid,avoid,5697,"th weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5788,safety,Avoid,Avoid,5788,"F] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, Mul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5878,safety,test,tests,5878," that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5928,safety,Avoid,Avoid,5928," [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6269,safety,error,errors,6269,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential cras",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6440,safety,compl,comply,6440,"ram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6487,safety,Depend,DependencyMissingError,6487,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6832,safety,Avoid,Avoid,6832,"gram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7013,safety,test,tests,7013,"ctions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7027,safety,Test,TestStatistics,7027,"ctories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7173,safety,modul,modules,7173,"[HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7185,safety,modul,modules,7185,"refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7242,safety,modul,modules,7242,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7467,safety,Test,Test,7467,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7511,safety,test,testRooFuncWrapper,7511,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7603,safety,modul,modules,7603,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7796,safety,error,error,7796,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:122,security,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1095,security,Model,ModelConfig,1095,"are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1113,security,Model,ModelConfig,1113,"00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1141,security,Model,ModelConfig,1141,". ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,security,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,security,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,security,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4063,security,model,models,4063," histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6440,security,compl,comply,6440,"ram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6854,security,access,access,6854,"ce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:578,testability,simul,simultaneous,578,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1209,testability,observ,observables,1209,"n `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1347,testability,test,test,1347,aks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1496,testability,depend,dependency,1496,_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistentl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1823,testability,test,test,1823,atas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1942,testability,integr,integrals,1942,ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Orde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2013,testability,integr,integrals,2013,move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2032,testability,mock,mock,2032,clarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2052,testability,test,test,2052,ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2228,testability,simul,simultaneous,2228,"y. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2643,testability,simpl,simplification,2643,"oid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3318,testability,integr,integration,3318,"r in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3548,testability,depend,dependants,3548,"[RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3743,testability,test,testRooDataHist,3743,"RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not we",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4183,testability,test,test,4183," [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4662,testability,unit,unit,4662,"e `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4667,testability,test,test,4667,"d(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Clea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5873,testability,unit,unit,5873,"assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5878,testability,test,tests,5878," that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6487,testability,Depend,DependencyMissingError,6487,"missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7013,testability,test,tests,7013,"ctions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7027,testability,Test,TestStatistics,7027,"ctories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7410,testability,observ,observables,7410,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7467,testability,Test,Test,7467,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7511,testability,test,testRooFuncWrapper,7511,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:302,usability,command,command,302,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:340,usability,memor,memory,340,"After merging this PR, the following commits in ROOT `master` (as of `2bb0f40e74`) are the ones that are not in `v6-28-00-patches` (`b700f596dbd8`). ```txt. 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for includin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1905,usability,support,support,1905,id need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:1980,usability,support,support,1980,ranslate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2149,usability,Consist,Consistent,2149,from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handlin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2474,usability,tool,tool,2474,"ake RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGene",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2490,usability,Consist,Consistently,2490,"dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2643,usability,simpl,simplification,2643,"oid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:2704,usability,input,input,2704,"[RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF][HS3] Consistent range for nominal alpha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:3178,usability,error,errors,3178,"ha params with HistFactory. [RF][HS3] Remember simultaneous channel names when writing JSON. [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip. [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints. [RF][HS3] Don't mix up free functions and class impl in JSON tool. [RF][HS3] Consistently have implicit fallback for HistFactory variables. [RF][HS3] Don't import datasets that are parts of a combined dataset. [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`. [RF][HS3] Generate input file for testHS3HistFactory on the fly. [RF][HS3] Improvements to the HS3 HistFactory implementation. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF][HS3] Some refactoring for less lines of code. [RF][HS3] Ordering fixes. [RF][HS3] Achieved closure for ATLAS ttW workspace. [RF][HS3] Sorting distributions. [RF][HS3] Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4049,usability,Support,Support,4049," Bugfixes for histfactory workspaces. [RF][HS3] Small renamings. [RF][HS3] Improved attribute handling, caught some typecast-errors. [RF][HS3] Bugfix for FlexibleInterpVar. [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4342,usability,clear,clear,4342,"with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF][HS3] Re-retrieve element after exporting dependants. [RF][HS3] Don't write `histfactory_dist` axes redundantly. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4710,usability,error,errors,4710," interface. [RF] Code-format `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using argu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4734,usability,error,errors,4734,"rmat `testRooDataHist.cxx`. [RF][HS3] Change analysis and likelihoods fields to match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:4814,usability,error,error,4814,"match HS3 standard. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`. [RF][HS3] Support IO of models with RooConstVars. [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5112,usability,command,command,5112,"on to unbinned dataset manually in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5143,usability,memor,memory,5143,"y in JSONIO. [RF] Enable AD code-gen test for RooFit. [RF][HS3] Use arrays and not dicts to specify data axes. [RF][HS3] Remove exporter and importer function for RooProdPdf. [RF] Add function to clear node to RooFit JSON interface. [RF][HS3] Make ""parameter_points"" field conform with HS3 standard. [RF][HS3] Also migrate distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of Hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:5466,usability,error,error,5466,"distributions and functions from dicts to arrays. [RF][HS3] Change some fields to use arrays and not dictionaries. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF][HS3] Don't assume that combined dataset name is always `""obsData""`. [RF][HS3] Use less `c_str()` conversions in RooFitHS3. [RF][HS3] New `wsEmplace()` method for creating objects in workspace. [RF][HS3] New `wsImport()` function to avoid repeating command args. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF][HS3] Renaming some distributions to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6269,usability,error,errors,6269,"s to conform with HS3 standard. [RF][HS3] Use HistFunc variables instead of underlying hist variables. [RF] Added protection against invalid variable names in createHistogram. [RF][HS3] Correct error messages when IO keys are missing. [RF][HS3] Code improvements in HS3 HistFactory. [RF][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential cras",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6553,usability,Support,Support,6553,"F][HS3] Small HS3 closure fixes. [RF][HS3] Import HistFactory constraints directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6628,usability,help,helper,6628,"directly upon creation. [RF][HS3] Cleanup of generic functions to avoid using arguments. [RF][HS3] Don't import embedded data directly to RooWorkspace. [RF] Avoid false warnings in RooAbsReal::createHistogram(). [RF][HS3] Reduce verbosity of unit tests. [RF][HS3] Less usage of TString. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:6909,usability,minim,minimizer,6909,"ng. [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets. [RF][HS3] Remove unused functions from JSONFactories_HistFactory. [RF][HS3] Export `staterror` correctly for HistFactory. [RF][HS3] Major restructuring of HistFactory in HS3 - part 2. [RF][HS3] Major refactoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7478,usability,prototyp,prototype,7478,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12618:7796,usability,error,error,7796,"factoring of `JSONFactories_HistFactory`. [RF][HS3] Correctly consider weight errors in `readBinnedData()`. [RF][HS3] Small code style improvement (renaming). [RF][HS3] Make `testHS3HistFactory` less verbose. [RF][HS3] Changed some JSON keywords to comply with new HS3 standard. [RF][HS3] Moved `DependencyMissingError` to public to make it catchable. [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup. [RF][HS3] Added helper function for writing matrices in JSONInterface. [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation. [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation. [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12620:2997,availability,state,stateless,2997,"nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3748,availability,error,errors,3748,"t function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3772,availability,error,errors,3772,"ooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3852,availability,error,error,3852,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ fu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4911,availability,error,error,4911,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:122,deployability,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:492,deployability,version,version,492,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1738,deployability,manag,management,1738,"re predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1813,deployability,build,buildLoopBegin,1813," combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2101,deployability,observ,observables,2101,"n `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2388,deployability,depend,dependency,2388,"_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,deployability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,deployability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,deployability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3921,deployability,manag,management,3921,"ck code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4163,deployability,Compos,Composition,4163,"[RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output param",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4288,deployability,modul,modules,4288,"ooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4300,deployability,modul,modules,4300,". [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4357,deployability,modul,modules,4357,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4525,deployability,observ,observables,4525,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4718,deployability,modul,modules,4718,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4821,deployability,build,building,4821,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:746,energy efficiency,predict,predictable,746,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1615,energy efficiency,reduc,reduce,1615,"8 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] Gener",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1738,energy efficiency,manag,management,1738,"re predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1987,energy efficiency,Model,ModelConfig,1987,"dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2005,energy efficiency,Model,ModelConfig,2005," format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2033,energy efficiency,Model,ModelConfig,2033,"(#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3921,energy efficiency,manag,management,3921,"ck code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:234,integrability,interfac,interface,234,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:492,integrability,version,version,492,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1852,integrability,translat,translate,1852,"ix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1875,integrability,translat,translate,1875,"ent output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2388,integrability,depend,dependency,2388,"_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2399,integrability,pub,public,2399,"tional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2424,integrability,interfac,interface,2424,"] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,integrability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,integrability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2997,integrability,state,stateless,2997,"nd ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,integrability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3401,integrability,interfac,interface,3401," [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3471,integrability,buffer,buffers,3471,"F][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Sp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4034,integrability,interfac,interface,4034," `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4862,integrability,wrap,wrapper,4862,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:234,interoperability,interfac,interface,234,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1012,interoperability,format,format,1012,"his PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1168,interoperability,Format,Format,1168," [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1852,interoperability,translat,translate,1852,"ix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1875,interoperability,translat,translate,1875,"ent output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1977,interoperability,format,format,1977,"al.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2424,interoperability,interfac,interface,2424,"] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,interoperability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,interoperability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,interoperability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3401,interoperability,interfac,interface,3401," [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3422,interoperability,format,format,3422,"nterface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4034,interoperability,interfac,interface,4034," `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4862,interoperability,wrapper,wrapper,4862,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:234,modifiability,interfac,interface,234,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:281,modifiability,paramet,parameter,281,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:492,modifiability,version,version,492,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1089,modifiability,paramet,parameter,1089,"s that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2388,modifiability,depend,dependency,2388,"_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2424,modifiability,interfac,interface,2424,"] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,modifiability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,modifiability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,modifiability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3401,modifiability,interfac,interface,3401," [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4034,modifiability,interfac,interface,4034," `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4163,modifiability,Compos,Composition,4163,"[RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output param",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4180,modifiability,inherit,inheritance,4180,"AbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4288,modifiability,modul,modules,4288,"ooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4300,modifiability,modul,modules,4300,". [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4357,modifiability,modul,modules,4357,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4548,modifiability,paramet,parameter,4548,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4718,modifiability,modul,modules,4718,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:5164,modifiability,paramet,parameter,5164,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1232,performance,memor,memory,1232,"nterface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3748,performance,error,errors,3748,"t function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3772,performance,error,errors,3772,"ooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3852,performance,error,error,3852,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ fu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3914,performance,memor,memory,3914,"to the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4911,performance,error,error,4911,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,reliability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,reliability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,reliability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:122,safety,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:746,safety,predict,predictable,746,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:900,safety,test,testRooFuncWrapper,900,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1299,safety,Avoid,Avoid,1299,"Factory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1738,safety,manag,management,1738,"re predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1798,safety,Avoid,Avoid,1798,"neous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2239,safety,test,test,2239,aks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2388,safety,depend,dependency,2388,"_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2540,safety,Avoid,Avoid,2540," TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2715,safety,test,test,2715,"atas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for spl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2944,safety,test,test,2944,"ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3430,safety,test,testRooDataHist,3430,"implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3605,safety,test,test,3605,"][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3705,safety,test,test,3705,"Factory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] En",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3748,safety,error,errors,3748,"t function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3772,safety,error,errors,3772,"ooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3852,safety,error,error,3852,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ fu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3921,safety,manag,management,3921,"ck code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4128,safety,test,tests,4128,"on of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4142,safety,Test,TestStatistics,4142,"with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4288,safety,modul,modules,4288,"ooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for remova",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4300,safety,modul,modules,4300,". [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4357,safety,modul,modules,4357,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4582,safety,Test,Test,4582,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4626,safety,test,testRooFuncWrapper,4626,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4718,safety,modul,modules,4718,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4911,safety,error,error,4911,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:122,security,patch,patches,122,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1987,security,Model,ModelConfig,1987,"dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2005,security,Model,ModelConfig,2005," format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2033,security,Model,ModelConfig,2033,"(#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,security,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,security,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,security,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:794,testability,simul,simultaneous,794,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:900,testability,test,testRooFuncWrapper,900,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`). ```txt. 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1470,testability,simul,simultaneous,1470,"][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2101,testability,observ,observables,2101,"n `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2239,testability,test,test,2239,aks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2388,testability,depend,dependency,2388,"_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2715,testability,test,test,2715,"atas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for spl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2834,testability,integr,integrals,2834,"ive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2905,testability,integr,integrals,2905,"move function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less man",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2924,testability,mock,mock,2924,"clarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory manag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2944,testability,test,test,2944,"ts LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3122,testability,integr,integration,3122," [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3430,testability,test,testRooDataHist,3430,"implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3605,testability,test,test,3605,"][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3700,testability,unit,unit,3700," HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodule",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3705,testability,test,test,3705,"Factory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] En",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4128,testability,test,tests,4128,"on of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4142,testability,Test,TestStatistics,4142,"with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4525,testability,observ,observables,4525,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4582,testability,Test,Test,4582,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4626,testability,test,testRooFuncWrapper,4626,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1194,usability,command,command,1194,"`set_seq()` and `set_map()` of JSON interface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:1232,usability,memor,memory,1232,"nterface. 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory. 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory. ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure. d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files. 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data. 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists. 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable. d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt. ecf76dfbe7 Suppress gif format from StressGraphics (#12611). 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`. fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`. 9a605d7f35 [RF][HS3] Make `combined_data_name` optional. b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs. f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting. 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication. a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2797,usability,support,support,2797,"id need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:2872,usability,support,support,2872,"ranslate' to RooNllVarNew. [RF] Remove function declarations in RooStats LinkDef.h. [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx. [RF] Move `ModelConfig` from RooStats to RooFit. [RF] Don't add `weightVar` to observables in HistFactory. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF][HS3] Put exported `histosys` in the correct vector. [RF][HS3] Avoid creating temporary objects to import into workspace. [RF][HS3][HF] General cleanup of HS3 HistFactory implementation. [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3748,usability,error,errors,3748,"t function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3772,usability,error,errors,3772,"ooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3852,usability,error,error,3852,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ fu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:3914,usability,memor,memory,3914,"to the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4024,usability,minim,minimizer,4024,". [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4593,usability,prototyp,prototype,4593,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/pull/12620:4911,usability,error,error,4911,"[RF] Exclude RooHistError from IO. [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. [RF] Code-format `testRooDataHist.cxx`. [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`. [RF] Modernize `RooVectorDataStore::RealFullVector` class. [RF] Enable AD code-gen test for RooFit. [RF] Suggest alternative to RooDataSet c'tor that takes weight name. [RF] Add unit test for splitting RooDataSets with weight errors. [RF] Add weight errors and not weight squared when filling split data. [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`. [RF] Less manual memory management in RooAbsArg and RooProdGenContext. [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/issues/12621:20,safety,compl,completely,20,"This issue has been completely clarified. The limitation was due to a misconfiguration of a XCache server. This has been addressed with the help of @amadio , therewith demonstrating that, besides increasing the number of the threads in the XRD_PARALLELEVTLOOP to 10, the present default in XRootD, nothing more has to be done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:20,security,compl,completely,20,"This issue has been completely clarified. The limitation was due to a misconfiguration of a XCache server. This has been addressed with the help of @amadio , therewith demonstrating that, besides increasing the number of the threads in the XRD_PARALLELEVTLOOP to 10, the present default in XRootD, nothing more has to be done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:140,usability,help,help,140,"This issue has been completely clarified. The limitation was due to a misconfiguration of a XCache server. This has been addressed with the help of @amadio , therewith demonstrating that, besides increasing the number of the threads in the XRD_PARALLELEVTLOOP to 10, the present default in XRootD, nothing more has to be done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:37,deployability,configurat,configuration,37,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:88,deployability,observ,observed,88,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:194,deployability,configurat,configuration,194,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:37,integrability,configur,configuration,37,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:194,integrability,configur,configuration,194,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:37,modifiability,configur,configuration,37,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:194,modifiability,configur,configuration,194,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:37,security,configur,configuration,37,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:194,security,configur,configuration,194,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:88,testability,observ,observed,88,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:106,usability,behavi,behaviour,106,"Can you point to more details on the configuration issue for the XCache server? (I have observed the same behaviour for a single-server xrootd setup without XCache, but maybe there is a similar configuration fix possible for this case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:121,availability,cluster,cluster,121,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:178,availability,avail,available,178,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:121,deployability,cluster,cluster,121,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:89,integrability,configur,configure,89,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:164,integrability,sub,subset,164,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:89,modifiability,configur,configure,89,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:47,performance,bottleneck,bottleneck,47,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:188,performance,disk,disks,188,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:178,reliability,availab,available,178,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:178,safety,avail,available,178,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:89,security,configur,configure,89,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:178,security,availab,available,178,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:204,reliability,doe,doesn,204,"Ok but I'm not sure this solution is applicable in all cases. In our particular case we have a single xrootd server accessing files on a single raid array with a small number of ssds, so multiple daemons doesn't really make sense, and I think that at least an optional client side workaround would be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:116,security,access,accessing,116,"Ok but I'm not sure this solution is applicable in all cases. In our particular case we have a single xrootd server accessing files on a single raid array with a small number of ssds, so multiple daemons doesn't really make sense, and I think that at least an optional client side workaround would be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/pull/12624:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:4,availability,failur,failures,4,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:4,deployability,fail,failures,4,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:45,deployability,infrastructur,infrastructure,45,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:4,performance,failur,failures,4,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:4,reliability,fail,failures,4,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12625:104,energy efficiency,load,load,104,"It turns out that this makes things more compilcated than necessary, because one would have to manually load the HIstFactory library before loading JSON files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12625
https://github.com/root-project/root/pull/12625:140,energy efficiency,load,loading,140,"It turns out that this makes things more compilcated than necessary, because one would have to manually load the HIstFactory library before loading JSON files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12625
https://github.com/root-project/root/pull/12625:104,performance,load,load,104,"It turns out that this makes things more compilcated than necessary, because one would have to manually load the HIstFactory library before loading JSON files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12625
https://github.com/root-project/root/pull/12625:140,performance,load,loading,140,"It turns out that this makes things more compilcated than necessary, because one would have to manually load the HIstFactory library before loading JSON files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12625
https://github.com/root-project/root/pull/12626:11,deployability,build,build,11,@phsft-bot build just on mac12/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12628:0,deployability,Updat,Updated,0,Updated the PR to remove the file instead,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:0,safety,Updat,Updated,0,Updated the PR to remove the file instead,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:0,security,Updat,Updated,0,Updated the PR to remove the file instead,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:205,energy efficiency,core,core,205,"Ok, not exactly what I had in mind :sweat_smile: I only meant to suggest to just remove the declaration. The file still defines `mmtrace`, even if empty. I guess Axel or Philippe need to comment what the `core/clib` is still used for...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:62,energy efficiency,reduc,reducing,62,"We only need very few functions for `TMapFile`. In principle, reducing the `clib/*/mm*` sources to just that should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:4,availability,error,error,4,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:24,deployability,resourc,resource,24,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:24,energy efficiency,resourc,resource,24,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:4,performance,error,error,4,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:24,performance,resourc,resource,24,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:33,performance,content,contention,33,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:4,safety,error,error,4,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:24,safety,resourc,resource,24,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:24,testability,resourc,resource,24,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12628:4,usability,error,error,4,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12628
https://github.com/root-project/root/pull/12629:11377,availability,Error,Error,11377,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11433,availability,Error,Error,11433,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:124,deployability,modul,module,124,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:233,deployability,fail,failed,233,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:349,deployability,Stack,Stack,349,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1158,deployability,Modul,Module,1158,"l issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1911,deployability,Modul,Module,1911,"system_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:2110,deployability,Modul,Module,2110,", std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) +",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3558,deployability,Modul,Module,3558,"e1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexToke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3948,deployability,Modul,Module,3948,"ef<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5500,deployability,Modul,ModuleFileExtension,5500,"ing_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5570,deployability,Modul,ModuleFileExtension,5570,"ken&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5977,deployability,Stack,Stack,5977,"ef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6027,deployability,build,build,6027," cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineToo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6124,deployability,build,build,6124,"on*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6205,deployability,build,build,6205,"g::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6248,deployability,build,build,6248,"cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6292,deployability,build,build,6292,"peTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7062,deployability,build,build,7062,ing_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7093,deployability,build,build,7093,cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7766,deployability,build,build,7766,sr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotif,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:8016,deployability,build,build,8016,mandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStop,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:8057,deployability,build,build,8057,e/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1125,energy efficiency,alloc,allocator,1125," source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::Strin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1878,energy efficiency,alloc,allocator,1878,"00018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:2077,energy efficiency,alloc,allocator,2077,"ar, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3827,energy efficiency,load,loadModule,3827,"ntendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5532,energy efficiency,alloc,allocator,5532,"68 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6033,energy efficiency,core,core,6033,"g::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7129,energy efficiency,core,core,7129,ib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7164,energy efficiency,core,core,7164,kspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7202,energy efficiency,core,core,7202,/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7237,energy efficiency,core,core,7237,orkspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7278,energy efficiency,core,core,7278,p/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7319,energy efficiency,core,core,7319,tPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h B,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7354,energy efficiency,core,core,7354,duct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7395,energy efficiency,core,core,7395,_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7439,energy efficiency,core,core,7439,oundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7480,energy efficiency,core,core,7480,TDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7514,energy efficiency,core,core,7514,D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7549,energy efficiency,core,core,7549,compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7584,energy efficiency,core,core,7584,LineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7624,energy efficiency,core,core,7624,+/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7664,energy efficiency,core,core,7664,dLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7701,energy efficiency,core,core,7701,de -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMath,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7735,energy efficiency,core,core,7735,mmandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7801,energy efficiency,core,core,7801,loper/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TPa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7835,energy efficiency,core,core,7835, -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7905,energy efficiency,core,core,7905,clude -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConne,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7942,energy efficiency,core,core,7942,mmandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGua,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7977,energy efficiency,core,core,7977,include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11090,energy efficiency,core,core,11090,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11359,energy efficiency,core,core,11359,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11400,energy efficiency,core,core,11400,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5898,integrability,sub,submit,5898,"stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:8344,integrability,Messag,MessageTypes,8344,src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11325,integrability,Sub,Subprocess,11325,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:8344,interoperability,Messag,MessageTypes,8344,src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:124,modifiability,modul,module,124,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1158,modifiability,Modul,Module,1158,"l issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1911,modifiability,Modul,Module,1911,"system_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:2110,modifiability,Modul,Module,2110,", std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) +",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3558,modifiability,Modul,Module,3558,"e1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexToke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3948,modifiability,Modul,Module,3948,"ef<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5500,modifiability,Modul,ModuleFileExtension,5500,"ing_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5570,modifiability,Modul,ModuleFileExtension,5570,"ken&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:2310,performance,Multiplex,MultiplexConsumer,2310,"4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3827,performance,load,loadModule,3827,"ntendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11377,performance,Error,Error,11377,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11433,performance,Error,Error,11433,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:233,reliability,fail,failed,233,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:124,safety,modul,module,124,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1158,safety,Modul,Module,1158,"l issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:1911,safety,Modul,Module,1911,"system_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:2110,safety,Modul,Module,2110,", std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang::Sema&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) + 196. 14 rootcling_stage1 0x0000000102c328c4 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) + 260. 15 rootcling_stage1 0x00000001028dff18 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) + 52. 16 rootcling_stage1 0x0000000102a45aac clang::ParseAST(clang::Sema&, bool, bool) + 504. 17 rootcling_stage1 0x00000001028a30dc clang::FrontendAction::Execute() + 112. 18 rootcling_stage1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) +",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3558,safety,Modul,Module,3558,"e1 0x000000010282a7e8 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 828. 19 rootcling_stage1 0x0000000102837aac void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexToke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3948,safety,Modul,Module,3948,"ef<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5500,safety,Modul,ModuleFileExtension,5500,"ing_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:5570,safety,Modul,ModuleFileExtension,5570,"ken&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11377,safety,Error,Error,11377,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11433,safety,Error,Error,11433,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:704,security,Sign,SignalHandler,704,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:3898,security,Ident,IdentifierInfo,3898," (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) + 56. 20 rootcling_stage1 0x00000001051fc438 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4108,security,Token,Token,4108," + 212. 21 rootcling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4123,security,Token,Token,4123,"cling_stage1 0x0000000102830c1c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transact",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4331,security,Token,Token,4331,"CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 3096. 22 rootcling_stage1 0x000000010282d500 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4485,security,Token,Token,4485,"mpilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4578,security,Token,Token,4578,"f) + 1820. 23 rootcling_stage1 0x000000010282c9ac clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4664,security,Token,Token,4664,"leModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:4749,security,Token,Token,4749,"l) + 2456. 24 rootcling_stage1 0x000000010282f584 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7272. 25 rootcling_stage1 0x0000000104edf5f8 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) + 4744. 26 rootcling_stage1 0x0000000104ed95fc clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) + 180. 27 rootcling_stage1 0x0000000104ed9ef8 clang::Preprocessor::HandleDirective(clang::Token&) + 1844. 28 rootcling_stage1 0x0000000104eb0768 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5768. 29 rootcling_stage1 0x0000000104eae1e0 clang::Lexer::Lex(clang::Token&) + 96. 30 rootcling_stage1 0x0000000104f124f8 clang::Preprocessor::Lex(clang::Token&) + 104. 31 rootcling_stage1 0x0000000102aef7e4 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) + 96. 32 rootcling_stage1 0x000000010242c4f0 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 1344. 33 rootcling_stage1 0x000000010242b884 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) + 628. 34 rootcling_stage1 0x000000010243212c cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:16,testability,assert,assert,16,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:223,testability,Assert,Assertion,223,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```. Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205. Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):. 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56. 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64. 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344. 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56. 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288. 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180. 6 libsystem_c.dylib 0x000000018a34ce44 err + 0. 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0. 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228. 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676. 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228. 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416. 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872. 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6579,usability,Command,CommandLineTools,6579,"on> > > const&, void*, bool, cling::Interpreter const*) + 2128. 35 rootcling_stage1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/cor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6660,usability,Command,CommandLineTools,6660,"e1 0x00000001022fd514 RootClingMain(int, char**, bool) + 13948. 36 rootcling_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6735,usability,Command,CommandLineTools,6735,g_stage1 0x000000010230bf58 ROOT_rootcling_Driver + 804. 37 rootcling_stage1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6809,usability,Command,CommandLineTools,6809,e1 0x000000010229e5f0 main + 64. 38 dyld 0x000000018a0e7f28 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6867,usability,Command,CommandLineTools,6867,8 start + 2236. PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/built,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:6942,usability,Command,CommandLineTools,6942,clude the crash backtrace. Stack dump:. 0.	Program arguments: /tmp/workspace/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/uni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:7016,usability,Command,CommandLineTools,7016,ce/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /tmp/workspace/build/lib/libCore.so -excludePath /tmp/workspace/src -excludePath /tmp/workspace/build/ginclude -excludePath /tmp/workspace/build/externals -excludePath /tmp/workspace/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -compilerI/Library/Developer/CommandLineTools/usr/lib/clang/14.0.3/include -compilerI/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -compilerI/Library/Developer/CommandLineTools/usr/include -I/tmp/workspace/build/include -I/tmp/workspace/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:8084,usability,Command,CommandLineTools,8084,/build/ginclude -I/tmp/workspace/src/core/base/inc -I/tmp/workspace/src/core/base/v7/inc -I/tmp/workspace/src/core/clib/inc -I/tmp/workspace/src/core/clingutils/inc -I/tmp/workspace/src/core/clingutils/res -I/tmp/workspace/src/core/cont/inc -I/tmp/workspace/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSys,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11169,usability,Command,CommandLineTools,11169,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11377,usability,Error,Error,11377,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:11433,usability,Error,Error,11433,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h. 1.	<eof> parser at end of file. 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'. Subprocess aborted. make[2]: *** [core/G__Core.cxx] Error 1. make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2. ```. @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12630:1198,availability,state,stateless,1198,"umber of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c048",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2715,availability,error,error,2715,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:129,deployability,patch,patches,129,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:194,deployability,version,version,194,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:413,deployability,manag,management,413,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:488,deployability,build,buildLoopBegin,488,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:837,deployability,depend,dependency,837,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1035,deployability,integr,integrals,1035,"Fit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1106,deployability,integr,integrals,1106," not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1253,deployability,integr,integration,1253,"wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1703,deployability,manag,management,1703," [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implemen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1956,deployability,Compos,Composition,1956," directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2081,deployability,modul,modules,2081,"including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2093,deployability,modul,modules,2093,"alytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2150,deployability,modul,modules,2150,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2329,deployability,observ,observables,2329,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2522,deployability,modul,modules,2522,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2625,deployability,build,building,2625,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:413,energy efficiency,manag,management,413,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1703,energy efficiency,manag,management,1703," [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implemen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:194,integrability,version,version,194,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:527,integrability,translat,translate,527,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:550,integrability,translat,translate,550,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:837,integrability,depend,dependency,837,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:848,integrability,pub,public,848,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:873,integrability,interfac,interface,873,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1035,integrability,integr,integrals,1035,"Fit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1106,integrability,integr,integrals,1106," not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1198,integrability,state,stateless,1198,"umber of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c048",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1253,integrability,integr,integration,1253,"wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1554,integrability,interfac,interface,1554,"' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1827,integrability,interfac,interface,1827,"pute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:2666,integrability,wrap,wrapper,2666,"the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. [RF] Split RooFuncWrapper into '.h' and '.cxx'. [RF] Add observables as another parameter in RooFuncWrapper. [RF] Test rough prototype of code generation in `testRooFuncWrapper`. Add AD based derivatives for RooFuncWrapper. [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. [RF] Make it possible to switch to `ryml` backend after building ROOT. [RF] Add a C/C++ function wrapper class in roofit. [RF] Fix implementation error from typo in `RooGenProdProj`. [RF] New mechanism to implicitly convert numbers to RooRealVar&. [RF] Remove RooFormula code for gcc <= 4.8. [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. [RF] More use of `snapshot()` overload with output parameter. [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:354,interoperability,Format,Format,354,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:527,interoperability,translat,translate,527,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:550,interoperability,translat,translate,550,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:873,interoperability,interfac,interface,873,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1035,interoperability,integr,integrals,1035,"Fit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1106,interoperability,integr,integrals,1106," not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx genera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/pull/12630:1253,interoperability,integr,integration,1253,"wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. [RF] Move loop management for code generation into CodeSquashContext. [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). [RF] Add 'translate' to RooNllVarNew. [RF] Minor improvements to RooFit evaluation code generation. [RF][NFC] Fix typo. [RF] Disable RooFuncWrapper test if clad is off. [RF] Remove wrong header declaration from roofit/roofit. [RF] Fix visibility of the res/ directories. [RF] Make RooBatchCompute dependency public. [RF] Add initial interface and implementation for code-squashing. [RF] Enable passing of gradient function directly to RooMinimizer. [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. [RF] Add intiial minimizer interface for RooFuncWrapper. [RF] Improve code in `MinuitFcnGrad`. [RF] Code improvements in tests for new TestStatistics. [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. [RF] No need for `RooAbsMinimizerFcn::fit()` method. Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
